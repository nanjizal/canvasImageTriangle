// Generated by Haxe 3.4.7
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
var Main = function() {
	this.height = 768.;
	this.width = 1024.;
	this.down = false;
	this.y = 0.;
	this.x = 0.;
	this.renderOn = true;
	this.picture = "nyt_nov5.jpg";
	var this1;
	var canvas = window.document.createElement("canvas");
	var dom = canvas;
	var style = dom.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = "0px";
	style.top = "0px";
	style.position = "absolute";
	this1 = canvas;
	this.canvas = this1;
	this.element = js_Boot.__cast(this.canvas , HTMLElement);
	this.canvas.width = this.width | 0;
	this.canvas.height = this.height | 0;
	this.left = this.element.offsetLeft;
	this.top = this.element.offsetTop;
	window.document.body.appendChild(this.canvas);
	var this2 = this.canvas.getContext("2d",null);
	this.surface = this2;
	this.world = new canvasImageTriangle_World(this.width,this.height);
	this.loader = new htmlHelper_tools_ImageLoader([this.picture],$bind(this,this.onLoaded));
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
Main.prototype = {
	onLoaded: function() {
		console.log("loaded image");
		var _this = this.loader.images;
		var key = this.picture;
		this.image = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		this.options = { draw_backfaces : true, whiteout_alpha : 1, wireframe : false, subdivide_factor : 10.0, nonadaptive_depth : 0};
		this.perspectiveTri = new canvasImageTriangle_PerspectiveTri(this.surface,this.image,this.options);
		var _this1 = this.world;
		var x = this.x;
		var y = this.y;
		var mouseDown = this.down;
		var now = new Date().getTime() | 0;
		_this1.dt = now - _this1.lastTime;
		_this1.lastTime = now;
		if(_this1.dt > 100) {
			_this1.dt = 100;
		}
		if(_this1.dt < 1) {
			_this1.dt = 1;
		}
		if(_this1.bigger) {
			_this1.distance -= 2.0 * _this1.dt / 1000;
		}
		if(_this1.smaller) {
			_this1.distance += 2.0 * _this1.dt / 1000;
		}
		if(_this1.distance < 0) {
			_this1.distance = 0.;
		}
		_this1.camera.e14 = 0.2 + _this1.distance;
		if(mouseDown) {
			var this1 = { x : _this1.camera.e12, y : _this1.camera.e13, z : _this1.camera.e14 + 1.};
			var p = this1;
			var this2 = { x : _this1.camera.e0, y : _this1.camera.e1, z : _this1.camera.e2};
			var r = this2;
			var this3 = { x : _this1.camera.e4, y : _this1.camera.e5, z : _this1.camera.e6};
			var up = this3;
			var this4 = { x : _this1.camera.e8, y : _this1.camera.e9, z : _this1.camera.e10};
			var right = this4;
			var tan_half = Math.tan(_this1.hFov / 2);
			var s = x * tan_half;
			var this5 = { x : right.x * s, y : right.y * s, z : right.z * s};
			var b = this5;
			var this6 = { x : r.x + b.x, y : r.y + b.y, z : r.z + b.z};
			r = this6;
			var s1 = y * tan_half;
			var this7 = { x : up.x * s1, y : up.y * s1, z : up.z * s1};
			var b1 = this7;
			var this8 = { x : r.x + b1.x, y : r.y + b1.y, z : r.z + b1.z};
			r = this8;
			var l2 = r.x * r.x + r.y * r.y + r.z * r.z;
			if(l2 <= 0) {
				var this9 = { x : 1., y : 0., z : 0.};
				r = this9;
			} else {
				var scale = 1 / Math.sqrt(l2);
				var this10 = { x : r.x * scale, y : r.y * scale, z : r.z * scale};
				r = this10;
			}
			var grabPoint;
			if(p.x * p.x + p.y * p.y + p.z * p.z < 1) {
				grabPoint = null;
			} else {
				var ray = -(p.x * r.x + p.y * r.y + p.z * r.z);
				if(ray < 0) {
					grabPoint = null;
				} else {
					var this11 = { x : r.x * ray, y : r.y * ray, z : r.z * ray};
					var b2 = this11;
					var this12 = { x : p.x + b2.x, y : p.y + b2.y, z : p.z + b2.z};
					var perp = this12;
					if(perp.x * perp.x + perp.y * perp.y + perp.z * perp.z >= 0.999999) {
						var l21 = perp.x * perp.x + perp.y * perp.y + perp.z * perp.z;
						if(l21 <= 0) {
							var this13 = { x : 1., y : 0., z : 0.};
							grabPoint = this13;
						} else {
							var scale1 = 1 / Math.sqrt(l21);
							var this14 = { x : perp.x * scale1, y : perp.y * scale1, z : perp.z * scale1};
							grabPoint = this14;
						}
					} else {
						var e = Math.sqrt(1 - (perp.x * perp.x + perp.y * perp.y + perp.z * perp.z));
						var s2 = ray - e;
						var this15 = { x : r.x * s2, y : r.y * s2, z : r.z * s2};
						var b3 = this15;
						var this16 = { x : p.x + b3.x, y : p.y + b3.y, z : p.z + b3.z};
						var hit = this16;
						var l22 = hit.x * hit.x + hit.y * hit.y + hit.z * hit.z;
						if(l22 <= 0) {
							var this17 = { x : 1., y : 0., z : 0.};
							grabPoint = this17;
						} else {
							var scale2 = 1 / Math.sqrt(l22);
							var this18 = { x : hit.x * scale2, y : hit.y * scale2, z : hit.z * scale2};
							grabPoint = this18;
						}
					}
				}
			}
			if(_this1.mouseGrab == null && grabPoint != null) {
				var t = _this1.object;
				_this1.mouseGrab = { x : t.e0 * grabPoint.x + t.e1 * grabPoint.y + t.e2 * grabPoint.z, y : t.e4 * grabPoint.x + t.e5 * grabPoint.y + t.e6 * grabPoint.z, z : t.e8 * grabPoint.x + t.e9 * grabPoint.y + t.e10 * grabPoint.z};
			}
			if(_this1.mouseGrab != null && grabPoint != null) {
				var origGrab_z;
				var origGrab_y;
				var origGrab_x;
				var t1 = _this1.object;
				var p1 = _this1.mouseGrab;
				origGrab_x = t1.e0 * p1.x + t1.e4 * p1.y + t1.e8 * p1.z;
				origGrab_y = t1.e1 * p1.x + t1.e5 * p1.y + t1.e9 * p1.z;
				origGrab_z = t1.e2 * p1.x + t1.e6 * p1.y + t1.e10 * p1.z;
				var this19 = { x : origGrab_y * grabPoint.z - origGrab_z * grabPoint.y, y : origGrab_z * grabPoint.x - origGrab_x * grabPoint.z, z : origGrab_x * grabPoint.y - origGrab_y * grabPoint.x};
				var axis = this19;
				var this20 = { x : axis.x * 0.95, y : axis.y * 0.95, z : axis.z * 0.95};
				axis = this20;
				var angle = Math.asin(Math.sqrt(axis.x * axis.x + axis.y * axis.y + axis.z * axis.z));
				if(angle > Math.PI / 8) {
					angle = Math.PI / 8;
				}
				var l23 = axis.x * axis.x + axis.y * axis.y + axis.z * axis.z;
				var axis1;
				if(l23 <= 0) {
					var this21 = { x : 1., y : 0., z : 0.};
					axis1 = this21;
				} else {
					var scale3 = 1 / Math.sqrt(l23);
					var this22 = { x : axis.x * scale3, y : axis.y * scale3, z : axis.z * scale3};
					axis1 = this22;
				}
				var c = Math.cos(angle);
				var s3 = Math.sin(angle);
				var C = 1 - c;
				var xs = axis1.x * s3;
				var ys = axis1.y * s3;
				var zs = axis1.z * s3;
				var xC = axis1.x * C;
				var yC = axis1.y * C;
				var zC = axis1.z * C;
				var xyC = axis1.x * yC;
				var yzC = axis1.y * zC;
				var zxC = axis1.z * xC;
				var e0_ = axis1.x * xC + c;
				var e5_ = axis1.y * yC + c;
				var e10_ = axis1.z * zC + c;
				var a = new canvasImageTriangle_AffineMatrix();
				a.e0 = e0_;
				a.e4 = xyC - zs;
				a.e8 = zxC + ys;
				a.e12 = 0;
				a.e1 = xyC + zs;
				a.e5 = e5_;
				a.e9 = yzC - xs;
				a.e13 = 0;
				a.e2 = zxC - ys;
				a.e6 = yzC + xs;
				a.e10 = e10_;
				a.e14 = 0;
				var mat = a;
				var b4 = _this1.object;
				var a0 = mat.e0;
				var a1 = mat.e1;
				var a2 = mat.e2;
				var a4 = mat.e4;
				var a5 = mat.e5;
				var a6 = mat.e6;
				var a8 = mat.e8;
				var a9 = mat.e9;
				var a10 = mat.e10;
				var a12 = mat.e12;
				var a13 = mat.e13;
				var a14 = mat.e14;
				var b0 = b4.e0;
				var b11 = b4.e1;
				var b21 = b4.e2;
				var b41 = b4.e4;
				var b5 = b4.e5;
				var b6 = b4.e6;
				var b8 = b4.e8;
				var b9 = b4.e9;
				var b10 = b4.e10;
				var b12 = b4.e12;
				var b13 = b4.e13;
				var b14 = b4.e14;
				var a3 = new canvasImageTriangle_AffineMatrix();
				a3.e0 = a0 * b0 + a4 * b11 + a8 * b21;
				a3.e4 = a0 * b41 + a4 * b5 + a8 * b6;
				a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
				a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
				a3.e1 = a1 * b0 + a5 * b11 + a9 * b21;
				a3.e5 = a1 * b41 + a5 * b5 + a9 * b6;
				a3.e9 = a1 * b8 + a5 * b9 + a9 * b10;
				a3.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
				a3.e2 = a2 * b0 + a6 * b11 + a10 * b21;
				a3.e6 = a2 * b41 + a6 * b5 + a10 * b6;
				a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
				a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
				_this1.object = a3;
				var a7 = _this1.object;
				var this23 = { x : a7.e0, y : a7.e1, z : a7.e2};
				var v = this23;
				var l24 = v.x * v.x + v.y * v.y + v.z * v.z;
				var new_x;
				if(l24 <= 0) {
					var this24 = { x : 1., y : 0., z : 0.};
					new_x = this24;
				} else {
					var scale4 = 1 / Math.sqrt(l24);
					var this25 = { x : v.x * scale4, y : v.y * scale4, z : v.z * scale4};
					new_x = this25;
				}
				var this26 = { x : a7.e4, y : a7.e5, z : a7.e6};
				var b7 = this26;
				var this27 = { x : new_x.y * b7.z - new_x.z * b7.y, y : new_x.z * b7.x - new_x.x * b7.z, z : new_x.x * b7.y - new_x.y * b7.x};
				var v1 = this27;
				var l25 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
				var new_z;
				if(l25 <= 0) {
					var this28 = { x : 1., y : 0., z : 0.};
					new_z = this28;
				} else {
					var scale5 = 1 / Math.sqrt(l25);
					var this29 = { x : v1.x * scale5, y : v1.y * scale5, z : v1.z * scale5};
					new_z = this29;
				}
				var this30 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
				var new_y = this30;
				a7.e0 = new_x.x;
				a7.e1 = new_x.y;
				a7.e2 = new_x.z;
				a7.e4 = new_y.x;
				a7.e5 = new_y.y;
				a7.e6 = new_y.z;
				a7.e8 = new_z.x;
				a7.e9 = new_z.y;
				a7.e10 = new_z.z;
				var s4 = 1000 / _this1.dt;
				var this31 = { x : axis.x * s4, y : axis.y * s4, z : axis.z * s4};
				_this1.omega = this31;
			}
		} else {
			_this1.mouseGrab = null;
			var v2 = _this1.omega;
			var this32 = { x : v2.x * 0.95, y : v2.y * 0.95, z : v2.z * 0.95};
			_this1.omega = this32;
			var a11 = _this1.omega;
			var b15 = _this1.omega;
			var dotOmegaProduct = a11.x * b15.x + a11.y * b15.y + a11.z * b15.z;
			if(dotOmegaProduct < 0.000000001 && _this1.bigger == false && _this1.smaller == false) {
				var this33 = { x : 0, y : 0, z : 0};
				_this1.omega = this33;
			} else {
				var v3 = _this1.omega;
				var s5 = _this1.dt / 1000;
				var this34 = { x : v3.x * s5, y : v3.y * s5, z : v3.z * s5};
				var scaled = this34;
				var angle1 = Math.asin(Math.sqrt(scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z));
				if(angle1 > Math.PI / 8) {
					angle1 = Math.PI / 8;
				}
				var l26 = scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z;
				var axis2;
				if(l26 <= 0) {
					var this35 = { x : 1., y : 0., z : 0.};
					axis2 = this35;
				} else {
					var scale6 = 1 / Math.sqrt(l26);
					var this36 = { x : scaled.x * scale6, y : scaled.y * scale6, z : scaled.z * scale6};
					axis2 = this36;
				}
				var c1 = Math.cos(angle1);
				var s6 = Math.sin(angle1);
				var C1 = 1 - c1;
				var xs1 = axis2.x * s6;
				var ys1 = axis2.y * s6;
				var zs1 = axis2.z * s6;
				var xC1 = axis2.x * C1;
				var yC1 = axis2.y * C1;
				var zC1 = axis2.z * C1;
				var xyC1 = axis2.x * yC1;
				var yzC1 = axis2.y * zC1;
				var zxC1 = axis2.z * xC1;
				var e0_1 = axis2.x * xC1 + c1;
				var e5_1 = axis2.y * yC1 + c1;
				var e10_1 = axis2.z * zC1 + c1;
				var a15 = new canvasImageTriangle_AffineMatrix();
				a15.e0 = e0_1;
				a15.e4 = xyC1 - zs1;
				a15.e8 = zxC1 + ys1;
				a15.e12 = 0;
				a15.e1 = xyC1 + zs1;
				a15.e5 = e5_1;
				a15.e9 = yzC1 - xs1;
				a15.e13 = 0;
				a15.e2 = zxC1 - ys1;
				a15.e6 = yzC1 + xs1;
				a15.e10 = e10_1;
				a15.e14 = 0;
				var mat1 = a15;
				var b16 = _this1.object;
				var a01 = mat1.e0;
				var a16 = mat1.e1;
				var a21 = mat1.e2;
				var a41 = mat1.e4;
				var a51 = mat1.e5;
				var a61 = mat1.e6;
				var a81 = mat1.e8;
				var a91 = mat1.e9;
				var a101 = mat1.e10;
				var a121 = mat1.e12;
				var a131 = mat1.e13;
				var a141 = mat1.e14;
				var b01 = b16.e0;
				var b17 = b16.e1;
				var b22 = b16.e2;
				var b42 = b16.e4;
				var b51 = b16.e5;
				var b61 = b16.e6;
				var b81 = b16.e8;
				var b91 = b16.e9;
				var b101 = b16.e10;
				var b121 = b16.e12;
				var b131 = b16.e13;
				var b141 = b16.e14;
				var a17 = new canvasImageTriangle_AffineMatrix();
				a17.e0 = a01 * b01 + a41 * b17 + a81 * b22;
				a17.e4 = a01 * b42 + a41 * b51 + a81 * b61;
				a17.e8 = a01 * b81 + a41 * b91 + a81 * b101;
				a17.e12 = a01 * b121 + a41 * b131 + a81 * b141 + a121;
				a17.e1 = a16 * b01 + a51 * b17 + a91 * b22;
				a17.e5 = a16 * b42 + a51 * b51 + a91 * b61;
				a17.e9 = a16 * b81 + a51 * b91 + a91 * b101;
				a17.e13 = a16 * b121 + a51 * b131 + a91 * b141 + a131;
				a17.e2 = a21 * b01 + a61 * b17 + a101 * b22;
				a17.e6 = a21 * b42 + a61 * b51 + a101 * b61;
				a17.e10 = a21 * b81 + a61 * b91 + a101 * b101;
				a17.e14 = a21 * b121 + a61 * b131 + a101 * b141 + a141;
				_this1.object = a17;
				var a18 = _this1.object;
				var this37 = { x : a18.e0, y : a18.e1, z : a18.e2};
				var v4 = this37;
				var l27 = v4.x * v4.x + v4.y * v4.y + v4.z * v4.z;
				var new_x1;
				if(l27 <= 0) {
					var this38 = { x : 1., y : 0., z : 0.};
					new_x1 = this38;
				} else {
					var scale7 = 1 / Math.sqrt(l27);
					var this39 = { x : v4.x * scale7, y : v4.y * scale7, z : v4.z * scale7};
					new_x1 = this39;
				}
				var this40 = { x : a18.e4, y : a18.e5, z : a18.e6};
				var b18 = this40;
				var this41 = { x : new_x1.y * b18.z - new_x1.z * b18.y, y : new_x1.z * b18.x - new_x1.x * b18.z, z : new_x1.x * b18.y - new_x1.y * b18.x};
				var v5 = this41;
				var l28 = v5.x * v5.x + v5.y * v5.y + v5.z * v5.z;
				var new_z1;
				if(l28 <= 0) {
					var this42 = { x : 1., y : 0., z : 0.};
					new_z1 = this42;
				} else {
					var scale8 = 1 / Math.sqrt(l28);
					var this43 = { x : v5.x * scale8, y : v5.y * scale8, z : v5.z * scale8};
					new_z1 = this43;
				}
				var this44 = { x : new_z1.y * new_x1.z - new_z1.z * new_x1.y, y : new_z1.z * new_x1.x - new_z1.x * new_x1.z, z : new_z1.x * new_x1.y - new_z1.y * new_x1.x};
				var new_y1 = this44;
				a18.e0 = new_x1.x;
				a18.e1 = new_x1.y;
				a18.e2 = new_x1.z;
				a18.e4 = new_y1.x;
				a18.e5 = new_y1.y;
				a18.e6 = new_y1.z;
				a18.e8 = new_z1.x;
				a18.e9 = new_z1.y;
				a18.e10 = new_z1.z;
			}
		}
		this.perspectiveTri.render(this.vertices(),this.width,this.height);
		var _this2 = this.world;
		var orient = _this2.camera;
		var e0_2 = orient.e8;
		var e4_ = orient.e4;
		var e8_ = -orient.e0;
		var e12_ = orient.e12;
		var e1_ = orient.e9;
		var e5_2 = orient.e5;
		var e9_ = -orient.e1;
		var e13_ = orient.e13;
		var e2_ = orient.e10;
		var e6_ = orient.e6;
		var e10_2 = -orient.e2;
		var e14_ = orient.e14;
		var a19 = new canvasImageTriangle_AffineMatrix();
		a19.e0 = e0_2;
		a19.e4 = e4_;
		a19.e8 = e8_;
		a19.e12 = e12_;
		a19.e1 = e1_;
		a19.e5 = e5_2;
		a19.e9 = e9_;
		a19.e13 = e13_;
		a19.e2 = e2_;
		a19.e6 = e6_;
		a19.e10 = e10_2;
		a19.e14 = e14_;
		var m = a19;
		var e0_3 = m.e0;
		var e4_1 = m.e1;
		var e8_1 = m.e2;
		var e1_1 = m.e4;
		var e5_3 = m.e5;
		var e9_1 = m.e6;
		var e2_1 = m.e8;
		var e6_1 = m.e9;
		var e10_3 = m.e10;
		var a20 = new canvasImageTriangle_AffineMatrix();
		a20.e0 = e0_3;
		a20.e4 = e4_1;
		a20.e8 = e8_1;
		a20.e12 = 0;
		a20.e1 = e1_1;
		a20.e5 = e5_3;
		a20.e9 = e9_1;
		a20.e13 = 0;
		a20.e2 = e2_1;
		a20.e6 = e6_1;
		a20.e10 = e10_3;
		a20.e14 = 0;
		var m1 = a20;
		var trans_prime_z;
		var trans_prime_y;
		var trans_prime_x;
		var p_z;
		var p_y;
		var p_x = m.e12;
		p_y = m.e13;
		p_z = m.e14;
		trans_prime_x = m1.e0 * p_x + m1.e4 * p_y + m1.e8 * p_z + m1.e12;
		trans_prime_y = m1.e1 * p_x + m1.e5 * p_y + m1.e9 * p_z + m1.e13;
		trans_prime_z = m1.e2 * p_x + m1.e6 * p_y + m1.e10 * p_z + m1.e14;
		m1.e12 = -trans_prime_x;
		m1.e13 = -trans_prime_y;
		m1.e14 = -trans_prime_z;
		var view_mat = m1;
		var a22 = _this2.proj;
		var out = _this2.temp_mat0;
		var a02 = a22.e0;
		var a110 = a22.e1;
		var a23 = a22.e2;
		var a42 = a22.e4;
		var a52 = a22.e5;
		var a62 = a22.e6;
		var a82 = a22.e8;
		var a92 = a22.e9;
		var a102 = a22.e10;
		var a122 = a22.e12;
		var a132 = a22.e13;
		var a142 = a22.e14;
		var b02 = view_mat.e0;
		var b19 = view_mat.e1;
		var b23 = view_mat.e2;
		var b43 = view_mat.e4;
		var b52 = view_mat.e5;
		var b62 = view_mat.e6;
		var b82 = view_mat.e8;
		var b92 = view_mat.e9;
		var b102 = view_mat.e10;
		var b122 = view_mat.e12;
		var b132 = view_mat.e13;
		var b142 = view_mat.e14;
		out.e0 = a02 * b02 + a42 * b19 + a82 * b23;
		out.e4 = a02 * b43 + a42 * b52 + a82 * b62;
		out.e8 = a02 * b82 + a42 * b92 + a82 * b102;
		out.e12 = a02 * b122 + a42 * b132 + a82 * b142 + a122;
		out.e1 = a110 * b02 + a52 * b19 + a92 * b23;
		out.e5 = a110 * b43 + a52 * b52 + a92 * b62;
		out.e9 = a110 * b82 + a52 * b92 + a92 * b102;
		out.e13 = a110 * b122 + a52 * b132 + a92 * b142 + a132;
		out.e2 = a23 * b02 + a62 * b19 + a102 * b23;
		out.e6 = a23 * b43 + a62 * b52 + a102 * b62;
		out.e10 = a23 * b82 + a62 * b92 + a102 * b102;
		out.e14 = a23 * b122 + a62 * b132 + a102 * b142 + a142;
		var a24 = _this2.temp_mat0;
		var b20 = _this2.object;
		var out1 = _this2.temp_mat1;
		var a03 = a24.e0;
		var a111 = a24.e1;
		var a25 = a24.e2;
		var a43 = a24.e4;
		var a53 = a24.e5;
		var a63 = a24.e6;
		var a83 = a24.e8;
		var a93 = a24.e9;
		var a103 = a24.e10;
		var a123 = a24.e12;
		var a133 = a24.e13;
		var a143 = a24.e14;
		var b03 = b20.e0;
		var b110 = b20.e1;
		var b24 = b20.e2;
		var b44 = b20.e4;
		var b53 = b20.e5;
		var b63 = b20.e6;
		var b83 = b20.e8;
		var b93 = b20.e9;
		var b103 = b20.e10;
		var b123 = b20.e12;
		var b133 = b20.e13;
		var b143 = b20.e14;
		out1.e0 = a03 * b03 + a43 * b110 + a83 * b24;
		out1.e4 = a03 * b44 + a43 * b53 + a83 * b63;
		out1.e8 = a03 * b83 + a43 * b93 + a83 * b103;
		out1.e12 = a03 * b123 + a43 * b133 + a83 * b143 + a123;
		out1.e1 = a111 * b03 + a53 * b110 + a93 * b24;
		out1.e5 = a111 * b44 + a53 * b53 + a93 * b63;
		out1.e9 = a111 * b83 + a53 * b93 + a93 * b103;
		out1.e13 = a111 * b123 + a53 * b133 + a93 * b143 + a133;
		out1.e2 = a25 * b03 + a63 * b110 + a103 * b24;
		out1.e6 = a25 * b44 + a63 * b53 + a103 * b63;
		out1.e10 = a25 * b83 + a63 * b93 + a103 * b103;
		out1.e14 = a25 * b123 + a63 * b133 + a103 * b143 + a143;
		this.renderOn = true;
		this.animate();
		window.document.onkeydown = $bind(this,this.keyDown);
		window.document.onkeyup = $bind(this,this.keyUp);
		window.document.onmousemove = $bind(this,this.mousemove);
		window.document.onmousedown = $bind(this,this.mousedown);
		window.document.onmouseup = $bind(this,this.mouseup);
	}
	,initOpitions: function() {
		return { draw_backfaces : true, whiteout_alpha : 1, wireframe : false, subdivide_factor : 10.0, nonadaptive_depth : 0};
	}
	,animate: function() {
		htmlHelper_tools_AnimateTimer.onFrame = $bind(this,this.render);
		if(htmlHelper_tools_AnimateTimer.s == null) {
			htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
			htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
			window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
			htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
			htmlHelper_tools_AnimateTimer.loop(60.0);
		}
	}
	,render: function(count) {
		if(this.renderOn) {
			var _this = this.world;
			var x = this.x;
			var y = this.y;
			var mouseDown = this.down;
			var now = new Date().getTime() | 0;
			_this.dt = now - _this.lastTime;
			_this.lastTime = now;
			if(_this.dt > 100) {
				_this.dt = 100;
			}
			if(_this.dt < 1) {
				_this.dt = 1;
			}
			if(_this.bigger) {
				_this.distance -= 2.0 * _this.dt / 1000;
			}
			if(_this.smaller) {
				_this.distance += 2.0 * _this.dt / 1000;
			}
			if(_this.distance < 0) {
				_this.distance = 0.;
			}
			_this.camera.e14 = 0.2 + _this.distance;
			if(mouseDown) {
				var this1 = { x : _this.camera.e12, y : _this.camera.e13, z : _this.camera.e14 + 1.};
				var p = this1;
				var this2 = { x : _this.camera.e0, y : _this.camera.e1, z : _this.camera.e2};
				var r = this2;
				var this3 = { x : _this.camera.e4, y : _this.camera.e5, z : _this.camera.e6};
				var up = this3;
				var this4 = { x : _this.camera.e8, y : _this.camera.e9, z : _this.camera.e10};
				var right = this4;
				var tan_half = Math.tan(_this.hFov / 2);
				var s = x * tan_half;
				var this5 = { x : right.x * s, y : right.y * s, z : right.z * s};
				var b = this5;
				var this6 = { x : r.x + b.x, y : r.y + b.y, z : r.z + b.z};
				r = this6;
				var s1 = y * tan_half;
				var this7 = { x : up.x * s1, y : up.y * s1, z : up.z * s1};
				var b1 = this7;
				var this8 = { x : r.x + b1.x, y : r.y + b1.y, z : r.z + b1.z};
				r = this8;
				var l2 = r.x * r.x + r.y * r.y + r.z * r.z;
				if(l2 <= 0) {
					var this9 = { x : 1., y : 0., z : 0.};
					r = this9;
				} else {
					var scale = 1 / Math.sqrt(l2);
					var this10 = { x : r.x * scale, y : r.y * scale, z : r.z * scale};
					r = this10;
				}
				var grabPoint;
				if(p.x * p.x + p.y * p.y + p.z * p.z < 1) {
					grabPoint = null;
				} else {
					var ray = -(p.x * r.x + p.y * r.y + p.z * r.z);
					if(ray < 0) {
						grabPoint = null;
					} else {
						var this11 = { x : r.x * ray, y : r.y * ray, z : r.z * ray};
						var b2 = this11;
						var this12 = { x : p.x + b2.x, y : p.y + b2.y, z : p.z + b2.z};
						var perp = this12;
						if(perp.x * perp.x + perp.y * perp.y + perp.z * perp.z >= 0.999999) {
							var l21 = perp.x * perp.x + perp.y * perp.y + perp.z * perp.z;
							if(l21 <= 0) {
								var this13 = { x : 1., y : 0., z : 0.};
								grabPoint = this13;
							} else {
								var scale1 = 1 / Math.sqrt(l21);
								var this14 = { x : perp.x * scale1, y : perp.y * scale1, z : perp.z * scale1};
								grabPoint = this14;
							}
						} else {
							var e = Math.sqrt(1 - (perp.x * perp.x + perp.y * perp.y + perp.z * perp.z));
							var s2 = ray - e;
							var this15 = { x : r.x * s2, y : r.y * s2, z : r.z * s2};
							var b3 = this15;
							var this16 = { x : p.x + b3.x, y : p.y + b3.y, z : p.z + b3.z};
							var hit = this16;
							var l22 = hit.x * hit.x + hit.y * hit.y + hit.z * hit.z;
							if(l22 <= 0) {
								var this17 = { x : 1., y : 0., z : 0.};
								grabPoint = this17;
							} else {
								var scale2 = 1 / Math.sqrt(l22);
								var this18 = { x : hit.x * scale2, y : hit.y * scale2, z : hit.z * scale2};
								grabPoint = this18;
							}
						}
					}
				}
				if(_this.mouseGrab == null && grabPoint != null) {
					var t = _this.object;
					_this.mouseGrab = { x : t.e0 * grabPoint.x + t.e1 * grabPoint.y + t.e2 * grabPoint.z, y : t.e4 * grabPoint.x + t.e5 * grabPoint.y + t.e6 * grabPoint.z, z : t.e8 * grabPoint.x + t.e9 * grabPoint.y + t.e10 * grabPoint.z};
				}
				if(_this.mouseGrab != null && grabPoint != null) {
					var origGrab_z;
					var origGrab_y;
					var origGrab_x;
					var t1 = _this.object;
					var p1 = _this.mouseGrab;
					origGrab_x = t1.e0 * p1.x + t1.e4 * p1.y + t1.e8 * p1.z;
					origGrab_y = t1.e1 * p1.x + t1.e5 * p1.y + t1.e9 * p1.z;
					origGrab_z = t1.e2 * p1.x + t1.e6 * p1.y + t1.e10 * p1.z;
					var this19 = { x : origGrab_y * grabPoint.z - origGrab_z * grabPoint.y, y : origGrab_z * grabPoint.x - origGrab_x * grabPoint.z, z : origGrab_x * grabPoint.y - origGrab_y * grabPoint.x};
					var axis = this19;
					var this20 = { x : axis.x * 0.95, y : axis.y * 0.95, z : axis.z * 0.95};
					axis = this20;
					var angle = Math.asin(Math.sqrt(axis.x * axis.x + axis.y * axis.y + axis.z * axis.z));
					if(angle > Math.PI / 8) {
						angle = Math.PI / 8;
					}
					var l23 = axis.x * axis.x + axis.y * axis.y + axis.z * axis.z;
					var axis1;
					if(l23 <= 0) {
						var this21 = { x : 1., y : 0., z : 0.};
						axis1 = this21;
					} else {
						var scale3 = 1 / Math.sqrt(l23);
						var this22 = { x : axis.x * scale3, y : axis.y * scale3, z : axis.z * scale3};
						axis1 = this22;
					}
					var c = Math.cos(angle);
					var s3 = Math.sin(angle);
					var C = 1 - c;
					var xs = axis1.x * s3;
					var ys = axis1.y * s3;
					var zs = axis1.z * s3;
					var xC = axis1.x * C;
					var yC = axis1.y * C;
					var zC = axis1.z * C;
					var xyC = axis1.x * yC;
					var yzC = axis1.y * zC;
					var zxC = axis1.z * xC;
					var e0_ = axis1.x * xC + c;
					var e5_ = axis1.y * yC + c;
					var e10_ = axis1.z * zC + c;
					var a = new canvasImageTriangle_AffineMatrix();
					a.e0 = e0_;
					a.e4 = xyC - zs;
					a.e8 = zxC + ys;
					a.e12 = 0;
					a.e1 = xyC + zs;
					a.e5 = e5_;
					a.e9 = yzC - xs;
					a.e13 = 0;
					a.e2 = zxC - ys;
					a.e6 = yzC + xs;
					a.e10 = e10_;
					a.e14 = 0;
					var mat = a;
					var b4 = _this.object;
					var a0 = mat.e0;
					var a1 = mat.e1;
					var a2 = mat.e2;
					var a4 = mat.e4;
					var a5 = mat.e5;
					var a6 = mat.e6;
					var a8 = mat.e8;
					var a9 = mat.e9;
					var a10 = mat.e10;
					var a12 = mat.e12;
					var a13 = mat.e13;
					var a14 = mat.e14;
					var b0 = b4.e0;
					var b11 = b4.e1;
					var b21 = b4.e2;
					var b41 = b4.e4;
					var b5 = b4.e5;
					var b6 = b4.e6;
					var b8 = b4.e8;
					var b9 = b4.e9;
					var b10 = b4.e10;
					var b12 = b4.e12;
					var b13 = b4.e13;
					var b14 = b4.e14;
					var a3 = new canvasImageTriangle_AffineMatrix();
					a3.e0 = a0 * b0 + a4 * b11 + a8 * b21;
					a3.e4 = a0 * b41 + a4 * b5 + a8 * b6;
					a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
					a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
					a3.e1 = a1 * b0 + a5 * b11 + a9 * b21;
					a3.e5 = a1 * b41 + a5 * b5 + a9 * b6;
					a3.e9 = a1 * b8 + a5 * b9 + a9 * b10;
					a3.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
					a3.e2 = a2 * b0 + a6 * b11 + a10 * b21;
					a3.e6 = a2 * b41 + a6 * b5 + a10 * b6;
					a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
					a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
					_this.object = a3;
					var a7 = _this.object;
					var this23 = { x : a7.e0, y : a7.e1, z : a7.e2};
					var v = this23;
					var l24 = v.x * v.x + v.y * v.y + v.z * v.z;
					var new_x;
					if(l24 <= 0) {
						var this24 = { x : 1., y : 0., z : 0.};
						new_x = this24;
					} else {
						var scale4 = 1 / Math.sqrt(l24);
						var this25 = { x : v.x * scale4, y : v.y * scale4, z : v.z * scale4};
						new_x = this25;
					}
					var this26 = { x : a7.e4, y : a7.e5, z : a7.e6};
					var b7 = this26;
					var this27 = { x : new_x.y * b7.z - new_x.z * b7.y, y : new_x.z * b7.x - new_x.x * b7.z, z : new_x.x * b7.y - new_x.y * b7.x};
					var v1 = this27;
					var l25 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
					var new_z;
					if(l25 <= 0) {
						var this28 = { x : 1., y : 0., z : 0.};
						new_z = this28;
					} else {
						var scale5 = 1 / Math.sqrt(l25);
						var this29 = { x : v1.x * scale5, y : v1.y * scale5, z : v1.z * scale5};
						new_z = this29;
					}
					var this30 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
					var new_y = this30;
					a7.e0 = new_x.x;
					a7.e1 = new_x.y;
					a7.e2 = new_x.z;
					a7.e4 = new_y.x;
					a7.e5 = new_y.y;
					a7.e6 = new_y.z;
					a7.e8 = new_z.x;
					a7.e9 = new_z.y;
					a7.e10 = new_z.z;
					var s4 = 1000 / _this.dt;
					var this31 = { x : axis.x * s4, y : axis.y * s4, z : axis.z * s4};
					_this.omega = this31;
				}
			} else {
				_this.mouseGrab = null;
				var v2 = _this.omega;
				var this32 = { x : v2.x * 0.95, y : v2.y * 0.95, z : v2.z * 0.95};
				_this.omega = this32;
				var a11 = _this.omega;
				var b15 = _this.omega;
				var dotOmegaProduct = a11.x * b15.x + a11.y * b15.y + a11.z * b15.z;
				if(dotOmegaProduct < 0.000000001 && _this.bigger == false && _this.smaller == false) {
					var this33 = { x : 0, y : 0, z : 0};
					_this.omega = this33;
				} else {
					var v3 = _this.omega;
					var s5 = _this.dt / 1000;
					var this34 = { x : v3.x * s5, y : v3.y * s5, z : v3.z * s5};
					var scaled = this34;
					var angle1 = Math.asin(Math.sqrt(scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z));
					if(angle1 > Math.PI / 8) {
						angle1 = Math.PI / 8;
					}
					var l26 = scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z;
					var axis2;
					if(l26 <= 0) {
						var this35 = { x : 1., y : 0., z : 0.};
						axis2 = this35;
					} else {
						var scale6 = 1 / Math.sqrt(l26);
						var this36 = { x : scaled.x * scale6, y : scaled.y * scale6, z : scaled.z * scale6};
						axis2 = this36;
					}
					var c1 = Math.cos(angle1);
					var s6 = Math.sin(angle1);
					var C1 = 1 - c1;
					var xs1 = axis2.x * s6;
					var ys1 = axis2.y * s6;
					var zs1 = axis2.z * s6;
					var xC1 = axis2.x * C1;
					var yC1 = axis2.y * C1;
					var zC1 = axis2.z * C1;
					var xyC1 = axis2.x * yC1;
					var yzC1 = axis2.y * zC1;
					var zxC1 = axis2.z * xC1;
					var e0_1 = axis2.x * xC1 + c1;
					var e5_1 = axis2.y * yC1 + c1;
					var e10_1 = axis2.z * zC1 + c1;
					var a15 = new canvasImageTriangle_AffineMatrix();
					a15.e0 = e0_1;
					a15.e4 = xyC1 - zs1;
					a15.e8 = zxC1 + ys1;
					a15.e12 = 0;
					a15.e1 = xyC1 + zs1;
					a15.e5 = e5_1;
					a15.e9 = yzC1 - xs1;
					a15.e13 = 0;
					a15.e2 = zxC1 - ys1;
					a15.e6 = yzC1 + xs1;
					a15.e10 = e10_1;
					a15.e14 = 0;
					var mat1 = a15;
					var b16 = _this.object;
					var a01 = mat1.e0;
					var a16 = mat1.e1;
					var a21 = mat1.e2;
					var a41 = mat1.e4;
					var a51 = mat1.e5;
					var a61 = mat1.e6;
					var a81 = mat1.e8;
					var a91 = mat1.e9;
					var a101 = mat1.e10;
					var a121 = mat1.e12;
					var a131 = mat1.e13;
					var a141 = mat1.e14;
					var b01 = b16.e0;
					var b17 = b16.e1;
					var b22 = b16.e2;
					var b42 = b16.e4;
					var b51 = b16.e5;
					var b61 = b16.e6;
					var b81 = b16.e8;
					var b91 = b16.e9;
					var b101 = b16.e10;
					var b121 = b16.e12;
					var b131 = b16.e13;
					var b141 = b16.e14;
					var a17 = new canvasImageTriangle_AffineMatrix();
					a17.e0 = a01 * b01 + a41 * b17 + a81 * b22;
					a17.e4 = a01 * b42 + a41 * b51 + a81 * b61;
					a17.e8 = a01 * b81 + a41 * b91 + a81 * b101;
					a17.e12 = a01 * b121 + a41 * b131 + a81 * b141 + a121;
					a17.e1 = a16 * b01 + a51 * b17 + a91 * b22;
					a17.e5 = a16 * b42 + a51 * b51 + a91 * b61;
					a17.e9 = a16 * b81 + a51 * b91 + a91 * b101;
					a17.e13 = a16 * b121 + a51 * b131 + a91 * b141 + a131;
					a17.e2 = a21 * b01 + a61 * b17 + a101 * b22;
					a17.e6 = a21 * b42 + a61 * b51 + a101 * b61;
					a17.e10 = a21 * b81 + a61 * b91 + a101 * b101;
					a17.e14 = a21 * b121 + a61 * b131 + a101 * b141 + a141;
					_this.object = a17;
					var a18 = _this.object;
					var this37 = { x : a18.e0, y : a18.e1, z : a18.e2};
					var v4 = this37;
					var l27 = v4.x * v4.x + v4.y * v4.y + v4.z * v4.z;
					var new_x1;
					if(l27 <= 0) {
						var this38 = { x : 1., y : 0., z : 0.};
						new_x1 = this38;
					} else {
						var scale7 = 1 / Math.sqrt(l27);
						var this39 = { x : v4.x * scale7, y : v4.y * scale7, z : v4.z * scale7};
						new_x1 = this39;
					}
					var this40 = { x : a18.e4, y : a18.e5, z : a18.e6};
					var b18 = this40;
					var this41 = { x : new_x1.y * b18.z - new_x1.z * b18.y, y : new_x1.z * b18.x - new_x1.x * b18.z, z : new_x1.x * b18.y - new_x1.y * b18.x};
					var v5 = this41;
					var l28 = v5.x * v5.x + v5.y * v5.y + v5.z * v5.z;
					var new_z1;
					if(l28 <= 0) {
						var this42 = { x : 1., y : 0., z : 0.};
						new_z1 = this42;
					} else {
						var scale8 = 1 / Math.sqrt(l28);
						var this43 = { x : v5.x * scale8, y : v5.y * scale8, z : v5.z * scale8};
						new_z1 = this43;
					}
					var this44 = { x : new_z1.y * new_x1.z - new_z1.z * new_x1.y, y : new_z1.z * new_x1.x - new_z1.x * new_x1.z, z : new_z1.x * new_x1.y - new_z1.y * new_x1.x};
					var new_y1 = this44;
					a18.e0 = new_x1.x;
					a18.e1 = new_x1.y;
					a18.e2 = new_x1.z;
					a18.e4 = new_y1.x;
					a18.e5 = new_y1.y;
					a18.e6 = new_y1.z;
					a18.e8 = new_z1.x;
					a18.e9 = new_z1.y;
					a18.e10 = new_z1.z;
				}
			}
			this.perspectiveTri.render(this.vertices(),this.width,this.height);
			var _this1 = this.world;
			var orient = _this1.camera;
			var e0_2 = orient.e8;
			var e4_ = orient.e4;
			var e8_ = -orient.e0;
			var e12_ = orient.e12;
			var e1_ = orient.e9;
			var e5_2 = orient.e5;
			var e9_ = -orient.e1;
			var e13_ = orient.e13;
			var e2_ = orient.e10;
			var e6_ = orient.e6;
			var e10_2 = -orient.e2;
			var e14_ = orient.e14;
			var a19 = new canvasImageTriangle_AffineMatrix();
			a19.e0 = e0_2;
			a19.e4 = e4_;
			a19.e8 = e8_;
			a19.e12 = e12_;
			a19.e1 = e1_;
			a19.e5 = e5_2;
			a19.e9 = e9_;
			a19.e13 = e13_;
			a19.e2 = e2_;
			a19.e6 = e6_;
			a19.e10 = e10_2;
			a19.e14 = e14_;
			var m = a19;
			var e0_3 = m.e0;
			var e4_1 = m.e1;
			var e8_1 = m.e2;
			var e1_1 = m.e4;
			var e5_3 = m.e5;
			var e9_1 = m.e6;
			var e2_1 = m.e8;
			var e6_1 = m.e9;
			var e10_3 = m.e10;
			var a20 = new canvasImageTriangle_AffineMatrix();
			a20.e0 = e0_3;
			a20.e4 = e4_1;
			a20.e8 = e8_1;
			a20.e12 = 0;
			a20.e1 = e1_1;
			a20.e5 = e5_3;
			a20.e9 = e9_1;
			a20.e13 = 0;
			a20.e2 = e2_1;
			a20.e6 = e6_1;
			a20.e10 = e10_3;
			a20.e14 = 0;
			var m1 = a20;
			var trans_prime_z;
			var trans_prime_y;
			var trans_prime_x;
			var p_z;
			var p_y;
			var p_x = m.e12;
			p_y = m.e13;
			p_z = m.e14;
			trans_prime_x = m1.e0 * p_x + m1.e4 * p_y + m1.e8 * p_z + m1.e12;
			trans_prime_y = m1.e1 * p_x + m1.e5 * p_y + m1.e9 * p_z + m1.e13;
			trans_prime_z = m1.e2 * p_x + m1.e6 * p_y + m1.e10 * p_z + m1.e14;
			m1.e12 = -trans_prime_x;
			m1.e13 = -trans_prime_y;
			m1.e14 = -trans_prime_z;
			var view_mat = m1;
			var a22 = _this1.proj;
			var out = _this1.temp_mat0;
			var a02 = a22.e0;
			var a110 = a22.e1;
			var a23 = a22.e2;
			var a42 = a22.e4;
			var a52 = a22.e5;
			var a62 = a22.e6;
			var a82 = a22.e8;
			var a92 = a22.e9;
			var a102 = a22.e10;
			var a122 = a22.e12;
			var a132 = a22.e13;
			var a142 = a22.e14;
			var b02 = view_mat.e0;
			var b19 = view_mat.e1;
			var b23 = view_mat.e2;
			var b43 = view_mat.e4;
			var b52 = view_mat.e5;
			var b62 = view_mat.e6;
			var b82 = view_mat.e8;
			var b92 = view_mat.e9;
			var b102 = view_mat.e10;
			var b122 = view_mat.e12;
			var b132 = view_mat.e13;
			var b142 = view_mat.e14;
			out.e0 = a02 * b02 + a42 * b19 + a82 * b23;
			out.e4 = a02 * b43 + a42 * b52 + a82 * b62;
			out.e8 = a02 * b82 + a42 * b92 + a82 * b102;
			out.e12 = a02 * b122 + a42 * b132 + a82 * b142 + a122;
			out.e1 = a110 * b02 + a52 * b19 + a92 * b23;
			out.e5 = a110 * b43 + a52 * b52 + a92 * b62;
			out.e9 = a110 * b82 + a52 * b92 + a92 * b102;
			out.e13 = a110 * b122 + a52 * b132 + a92 * b142 + a132;
			out.e2 = a23 * b02 + a62 * b19 + a102 * b23;
			out.e6 = a23 * b43 + a62 * b52 + a102 * b62;
			out.e10 = a23 * b82 + a62 * b92 + a102 * b102;
			out.e14 = a23 * b122 + a62 * b132 + a102 * b142 + a142;
			var a24 = _this1.temp_mat0;
			var b20 = _this1.object;
			var out1 = _this1.temp_mat1;
			var a03 = a24.e0;
			var a111 = a24.e1;
			var a25 = a24.e2;
			var a43 = a24.e4;
			var a53 = a24.e5;
			var a63 = a24.e6;
			var a83 = a24.e8;
			var a93 = a24.e9;
			var a103 = a24.e10;
			var a123 = a24.e12;
			var a133 = a24.e13;
			var a143 = a24.e14;
			var b03 = b20.e0;
			var b110 = b20.e1;
			var b24 = b20.e2;
			var b44 = b20.e4;
			var b53 = b20.e5;
			var b63 = b20.e6;
			var b83 = b20.e8;
			var b93 = b20.e9;
			var b103 = b20.e10;
			var b123 = b20.e12;
			var b133 = b20.e13;
			var b143 = b20.e14;
			out1.e0 = a03 * b03 + a43 * b110 + a83 * b24;
			out1.e4 = a03 * b44 + a43 * b53 + a83 * b63;
			out1.e8 = a03 * b83 + a43 * b93 + a83 * b103;
			out1.e12 = a03 * b123 + a43 * b133 + a83 * b143 + a123;
			out1.e1 = a111 * b03 + a53 * b110 + a93 * b24;
			out1.e5 = a111 * b44 + a53 * b53 + a93 * b63;
			out1.e9 = a111 * b83 + a53 * b93 + a93 * b103;
			out1.e13 = a111 * b123 + a53 * b133 + a93 * b143 + a133;
			out1.e2 = a25 * b03 + a63 * b110 + a103 * b24;
			out1.e6 = a25 * b44 + a63 * b53 + a103 * b63;
			out1.e10 = a25 * b83 + a63 * b93 + a103 * b103;
			out1.e14 = a25 * b123 + a63 * b133 + a103 * b143 + a143;
			if(!this.down) {
				this.renderOn = false;
			}
		}
	}
	,vertices: function() {
		var w = this.width;
		var h = this.height;
		var verts = [{ x : -1., y : -1., z : 0., u : 0., v : 0.},{ x : 1., y : -1., z : 0., u : w, v : 0.},{ x : 1., y : 1., z : 0., u : w, v : h},{ x : -1., y : 1., z : 0., u : 0., v : h}];
		var tverts = [];
		var _g1 = 0;
		var _g = verts.length;
		while(_g1 < _g) {
			var i = _g1++;
			var v = verts[i];
			var this1 = { x : v.x, y : v.y, z : v.z};
			var p = this1;
			var t = this.world.temp_mat1;
			p = { x : t.e0 * p.x + t.e4 * p.y + t.e8 * p.z + t.e12, y : t.e1 * p.x + t.e5 * p.y + t.e9 * p.z + t.e13, z : t.e2 * p.x + t.e6 * p.y + t.e10 * p.z + t.e14};
			tverts[i] = { x : p.x, y : p.y, z : p.z, u : v.u, v : v.v};
		}
		return tverts;
	}
	,initVert: function() {
		var w = this.width;
		var h = this.height;
		return [{ x : -1., y : -1., z : 0., u : 0., v : 0.},{ x : 1., y : -1., z : 0., u : w, v : 0.},{ x : 1., y : 1., z : 0., u : w, v : h},{ x : -1., y : 1., z : 0., u : 0., v : h}];
	}
	,rememberMousePos: function(e) {
		var w = this.width;
		var h = this.height;
		this.x = (e.clientX - this.left) / w * 2 - 1;
		this.y = -((e.clientY - this.top - h / 2) / (w / 2));
	}
	,mousedown: function(e) {
		this.down = true;
		this.rememberMousePos(e);
		this.renderOn = true;
	}
	,mouseup: function(e) {
		this.down = false;
	}
	,mousemove: function(e) {
		this.rememberMousePos(e);
		if(this.down) {
			this.renderOn = true;
		}
	}
	,keyDown: function(e) {
		e.preventDefault();
		var keyCode = e.keyCode;
		switch(keyCode) {
		case 65:
			this.world.bigger = true;
			this.renderOn = true;
			break;
		case 87:
			this.options.wireframe = !this.options.wireframe;
			this.renderOn = true;
			break;
		case 90:
			this.world.smaller = true;
			this.renderOn = true;
			break;
		default:
		}
	}
	,keyUp: function(e) {
		e.preventDefault();
		var keyCode = e.keyCode;
		switch(keyCode) {
		case 65:
			this.world.bigger = false;
			break;
		case 90:
			this.world.smaller = false;
			break;
		default:
		}
	}
	,__class__: Main
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var canvasImageTriangle_AffineMatrix = function() {
	this.e14 = 0;
	this.e10 = 1;
	this.e6 = 0;
	this.e2 = 0;
	this.e13 = 0;
	this.e9 = 0;
	this.e5 = 1;
	this.e1 = 0;
	this.e12 = 0;
	this.e8 = 0;
	this.e4 = 0;
	this.e0 = 1;
};
canvasImageTriangle_AffineMatrix.__name__ = true;
canvasImageTriangle_AffineMatrix.matrix = function(e0_,e4_,e8_,e12_,e1_,e5_,e9_,e13_,e2_,e6_,e10_,e14_) {
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = e0_;
	a.e4 = e4_;
	a.e8 = e8_;
	a.e12 = e12_;
	a.e1 = e1_;
	a.e5 = e5_;
	a.e9 = e9_;
	a.e13 = e13_;
	a.e2 = e2_;
	a.e6 = e6_;
	a.e10 = e10_;
	a.e14 = e14_;
	return a;
};
canvasImageTriangle_AffineMatrix.setAffineMatrix = function(out,e0,e4,e8,e12,e1,e5,e9,e13,e2,e6,e10,e14) {
	out.e0 = e0;
	out.e4 = e4;
	out.e8 = e8;
	out.e12 = e12;
	out.e1 = e1;
	out.e5 = e5;
	out.e9 = e9;
	out.e13 = e13;
	out.e2 = e2;
	out.e6 = e6;
	out.e10 = e10;
	out.e14 = e14;
};
canvasImageTriangle_AffineMatrix.copyAffineMatrix = function(dest,src) {
	dest.e0 = src.e0;
	dest.e4 = src.e4;
	dest.e8 = src.e8;
	dest.e12 = src.e12;
	dest.e1 = src.e1;
	dest.e5 = src.e5;
	dest.e9 = src.e9;
	dest.e13 = src.e13;
	dest.e2 = src.e2;
	dest.e6 = src.e6;
	dest.e10 = src.e10;
	dest.e14 = src.e14;
};
canvasImageTriangle_AffineMatrix.transformPoint = function(t,p) {
	return { x : t.e0 * p.x + t.e4 * p.y + t.e8 * p.z + t.e12, y : t.e1 * p.x + t.e5 * p.y + t.e9 * p.z + t.e13, z : t.e2 * p.x + t.e6 * p.y + t.e10 * p.z + t.e14};
};
canvasImageTriangle_AffineMatrix.transformPointTo = function(t,p,out) {
	out.x = t.e0 * p.x + t.e4 * p.y + t.e8 * p.z + t.e12;
	out.y = t.e1 * p.x + t.e5 * p.y + t.e9 * p.z + t.e13;
	out.z = t.e2 * p.x + t.e6 * p.y + t.e10 * p.z + t.e14;
};
canvasImageTriangle_AffineMatrix.applyRotation = function(t,p) {
	return { x : t.e0 * p.x + t.e4 * p.y + t.e8 * p.z, y : t.e1 * p.x + t.e5 * p.y + t.e9 * p.z, z : t.e2 * p.x + t.e6 * p.y + t.e10 * p.z};
};
canvasImageTriangle_AffineMatrix.applyInverseRotation = function(t,p) {
	return { x : t.e0 * p.x + t.e1 * p.y + t.e2 * p.z, y : t.e4 * p.x + t.e5 * p.y + t.e6 * p.z, z : t.e8 * p.x + t.e9 * p.y + t.e10 * p.z};
};
canvasImageTriangle_AffineMatrix.multiplyAffine = function(a,b) {
	var a0 = a.e0;
	var a1 = a.e1;
	var a2 = a.e2;
	var a4 = a.e4;
	var a5 = a.e5;
	var a6 = a.e6;
	var a8 = a.e8;
	var a9 = a.e9;
	var a10 = a.e10;
	var a12 = a.e12;
	var a13 = a.e13;
	var a14 = a.e14;
	var b0 = b.e0;
	var b1 = b.e1;
	var b2 = b.e2;
	var b4 = b.e4;
	var b5 = b.e5;
	var b6 = b.e6;
	var b8 = b.e8;
	var b9 = b.e9;
	var b10 = b.e10;
	var b12 = b.e12;
	var b13 = b.e13;
	var b14 = b.e14;
	var a3 = new canvasImageTriangle_AffineMatrix();
	a3.e0 = a0 * b0 + a4 * b1 + a8 * b2;
	a3.e4 = a0 * b4 + a4 * b5 + a8 * b6;
	a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
	a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
	a3.e1 = a1 * b0 + a5 * b1 + a9 * b2;
	a3.e5 = a1 * b4 + a5 * b5 + a9 * b6;
	a3.e9 = a1 * b8 + a5 * b9 + a9 * b10;
	a3.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
	a3.e2 = a2 * b0 + a6 * b1 + a10 * b2;
	a3.e6 = a2 * b4 + a6 * b5 + a10 * b6;
	a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
	a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
	return a3;
};
canvasImageTriangle_AffineMatrix.multiplyAffineTo = function(a,b,out) {
	var a0 = a.e0;
	var a1 = a.e1;
	var a2 = a.e2;
	var a4 = a.e4;
	var a5 = a.e5;
	var a6 = a.e6;
	var a8 = a.e8;
	var a9 = a.e9;
	var a10 = a.e10;
	var a12 = a.e12;
	var a13 = a.e13;
	var a14 = a.e14;
	var b0 = b.e0;
	var b1 = b.e1;
	var b2 = b.e2;
	var b4 = b.e4;
	var b5 = b.e5;
	var b6 = b.e6;
	var b8 = b.e8;
	var b9 = b.e9;
	var b10 = b.e10;
	var b12 = b.e12;
	var b13 = b.e13;
	var b14 = b.e14;
	out.e0 = a0 * b0 + a4 * b1 + a8 * b2;
	out.e4 = a0 * b4 + a4 * b5 + a8 * b6;
	out.e8 = a0 * b8 + a4 * b9 + a8 * b10;
	out.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
	out.e1 = a1 * b0 + a5 * b1 + a9 * b2;
	out.e5 = a1 * b4 + a5 * b5 + a9 * b6;
	out.e9 = a1 * b8 + a5 * b9 + a9 * b10;
	out.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
	out.e2 = a2 * b0 + a6 * b1 + a10 * b2;
	out.e6 = a2 * b4 + a6 * b5 + a10 * b6;
	out.e10 = a2 * b8 + a6 * b9 + a10 * b10;
	out.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
};
canvasImageTriangle_AffineMatrix.makeIdentityAffine = function() {
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = 1;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = 1;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = 1;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAxisAngle = function(axis,angle) {
	var c = Math.cos(angle);
	var s = Math.sin(angle);
	var C = 1 - c;
	var xs = axis.x * s;
	var ys = axis.y * s;
	var zs = axis.z * s;
	var xC = axis.x * C;
	var yC = axis.y * C;
	var zC = axis.z * C;
	var xyC = axis.x * yC;
	var yzC = axis.y * zC;
	var zxC = axis.z * xC;
	var e0_ = axis.x * xC + c;
	var e5_ = axis.y * yC + c;
	var e10_ = axis.z * zC + c;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = e0_;
	a.e4 = xyC - zs;
	a.e8 = zxC + ys;
	a.e12 = 0;
	a.e1 = xyC + zs;
	a.e5 = e5_;
	a.e9 = yzC - xs;
	a.e13 = 0;
	a.e2 = zxC - ys;
	a.e6 = yzC + xs;
	a.e10 = e10_;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineX = function(theta) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = 1;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = c;
	a.e9 = -s;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = s;
	a.e10 = c;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineXTo = function(theta,out) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	out.e0 = 1;
	out.e4 = 0;
	out.e8 = 0;
	out.e12 = 0;
	out.e1 = 0;
	out.e5 = c;
	out.e9 = -s;
	out.e13 = 0;
	out.e2 = 0;
	out.e6 = s;
	out.e10 = c;
	out.e14 = 0;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineY = function(theta) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = c;
	a.e4 = 0;
	a.e8 = s;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = 1;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = -s;
	a.e6 = 0;
	a.e10 = c;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineYTo = function(theta,out) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	out.e0 = c;
	out.e4 = 0;
	out.e8 = s;
	out.e12 = 0;
	out.e1 = 0;
	out.e5 = 1;
	out.e9 = 0;
	out.e13 = 0;
	out.e2 = -s;
	out.e6 = 0;
	out.e10 = c;
	out.e14 = 0;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineZ = function(theta) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = c;
	a.e4 = -s;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = s;
	a.e5 = c;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = 1;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineZTo = function(theta,out) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	out.e0 = c;
	out.e4 = -s;
	out.e8 = 0;
	out.e12 = 0;
	out.e1 = s;
	out.e5 = c;
	out.e9 = 0;
	out.e13 = 0;
	out.e2 = 0;
	out.e6 = 0;
	out.e10 = 1;
	out.e14 = 0;
};
canvasImageTriangle_AffineMatrix.makeTranslateAffine = function(dx,dy,dz) {
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = 1;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = dx;
	a.e1 = 0;
	a.e5 = 1;
	a.e9 = 0;
	a.e13 = dy;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = 1;
	a.e14 = dz;
	return a;
};
canvasImageTriangle_AffineMatrix.makeScaleAffine = function(sx,sy,sz) {
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = sx;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = sy;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = sz;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.invertNormalizedRotation = function(a) {
	var e0_ = a.e0;
	var e4_ = a.e1;
	var e8_ = a.e2;
	var e1_ = a.e4;
	var e5_ = a.e5;
	var e9_ = a.e6;
	var e2_ = a.e8;
	var e6_ = a.e9;
	var e10_ = a.e10;
	var a1 = new canvasImageTriangle_AffineMatrix();
	a1.e0 = e0_;
	a1.e4 = e4_;
	a1.e8 = e8_;
	a1.e12 = 0;
	a1.e1 = e1_;
	a1.e5 = e5_;
	a1.e9 = e9_;
	a1.e13 = 0;
	a1.e2 = e2_;
	a1.e6 = e6_;
	a1.e10 = e10_;
	a1.e14 = 0;
	return a1;
};
canvasImageTriangle_AffineMatrix.invertNormalized = function(a) {
	var e0_ = a.e0;
	var e4_ = a.e1;
	var e8_ = a.e2;
	var e1_ = a.e4;
	var e5_ = a.e5;
	var e9_ = a.e6;
	var e2_ = a.e8;
	var e6_ = a.e9;
	var e10_ = a.e10;
	var a1 = new canvasImageTriangle_AffineMatrix();
	a1.e0 = e0_;
	a1.e4 = e4_;
	a1.e8 = e8_;
	a1.e12 = 0;
	a1.e1 = e1_;
	a1.e5 = e5_;
	a1.e9 = e9_;
	a1.e13 = 0;
	a1.e2 = e2_;
	a1.e6 = e6_;
	a1.e10 = e10_;
	a1.e14 = 0;
	var m = a1;
	var trans_prime_z;
	var trans_prime_y;
	var trans_prime_x;
	var p_z;
	var p_y;
	var p_x = a.e12;
	p_y = a.e13;
	p_z = a.e14;
	trans_prime_x = m.e0 * p_x + m.e4 * p_y + m.e8 * p_z + m.e12;
	trans_prime_y = m.e1 * p_x + m.e5 * p_y + m.e9 * p_z + m.e13;
	trans_prime_z = m.e2 * p_x + m.e6 * p_y + m.e10 * p_z + m.e14;
	m.e12 = -trans_prime_x;
	m.e13 = -trans_prime_y;
	m.e14 = -trans_prime_z;
	return m;
};
canvasImageTriangle_AffineMatrix.orthonormalizeRotation = function(a) {
	var this1 = { x : a.e0, y : a.e1, z : a.e2};
	var v = this1;
	var l2 = v.x * v.x + v.y * v.y + v.z * v.z;
	var new_x;
	if(l2 <= 0) {
		var this2 = { x : 1., y : 0., z : 0.};
		new_x = this2;
	} else {
		var scale = 1 / Math.sqrt(l2);
		var this3 = { x : v.x * scale, y : v.y * scale, z : v.z * scale};
		new_x = this3;
	}
	var this4 = { x : a.e4, y : a.e5, z : a.e6};
	var b = this4;
	var this5 = { x : new_x.y * b.z - new_x.z * b.y, y : new_x.z * b.x - new_x.x * b.z, z : new_x.x * b.y - new_x.y * b.x};
	var v1 = this5;
	var l21 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
	var new_z;
	if(l21 <= 0) {
		var this6 = { x : 1., y : 0., z : 0.};
		new_z = this6;
	} else {
		var scale1 = 1 / Math.sqrt(l21);
		var this7 = { x : v1.x * scale1, y : v1.y * scale1, z : v1.z * scale1};
		new_z = this7;
	}
	var this8 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
	var new_y = this8;
	a.e0 = new_x.x;
	a.e1 = new_x.y;
	a.e2 = new_x.z;
	a.e4 = new_y.x;
	a.e5 = new_y.y;
	a.e6 = new_y.z;
	a.e8 = new_z.x;
	a.e9 = new_z.y;
	a.e10 = new_z.z;
};
canvasImageTriangle_AffineMatrix.makeOrientationAffine = function(pos,dir,up) {
	var this1 = { x : dir.y * up.z - dir.z * up.y, y : dir.z * up.x - dir.x * up.z, z : dir.x * up.y - dir.y * up.x};
	var right = this1;
	var e0_ = dir.x;
	var e4_ = up.x;
	var e8_ = right.x;
	var e12_ = pos.x;
	var e1_ = dir.y;
	var e5_ = up.y;
	var e9_ = right.y;
	var e13_ = pos.y;
	var e2_ = dir.z;
	var e6_ = up.z;
	var e10_ = right.z;
	var e14_ = pos.z;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = e0_;
	a.e4 = e4_;
	a.e8 = e8_;
	a.e12 = e12_;
	a.e1 = e1_;
	a.e5 = e5_;
	a.e9 = e9_;
	a.e13 = e13_;
	a.e2 = e2_;
	a.e6 = e6_;
	a.e10 = e10_;
	a.e14 = e14_;
	return a;
};
canvasImageTriangle_AffineMatrix.makeViewFromOrientation = function(orient) {
	var e0_ = orient.e8;
	var e4_ = orient.e4;
	var e8_ = -orient.e0;
	var e12_ = orient.e12;
	var e1_ = orient.e9;
	var e5_ = orient.e5;
	var e9_ = -orient.e1;
	var e13_ = orient.e13;
	var e2_ = orient.e10;
	var e6_ = orient.e6;
	var e10_ = -orient.e2;
	var e14_ = orient.e14;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = e0_;
	a.e4 = e4_;
	a.e8 = e8_;
	a.e12 = e12_;
	a.e1 = e1_;
	a.e5 = e5_;
	a.e9 = e9_;
	a.e13 = e13_;
	a.e2 = e2_;
	a.e6 = e6_;
	a.e10 = e10_;
	a.e14 = e14_;
	var m = a;
	var e0_1 = m.e0;
	var e4_1 = m.e1;
	var e8_1 = m.e2;
	var e1_1 = m.e4;
	var e5_1 = m.e5;
	var e9_1 = m.e6;
	var e2_1 = m.e8;
	var e6_1 = m.e9;
	var e10_1 = m.e10;
	var a1 = new canvasImageTriangle_AffineMatrix();
	a1.e0 = e0_1;
	a1.e4 = e4_1;
	a1.e8 = e8_1;
	a1.e12 = 0;
	a1.e1 = e1_1;
	a1.e5 = e5_1;
	a1.e9 = e9_1;
	a1.e13 = 0;
	a1.e2 = e2_1;
	a1.e6 = e6_1;
	a1.e10 = e10_1;
	a1.e14 = 0;
	var m1 = a1;
	var trans_prime_z;
	var trans_prime_y;
	var trans_prime_x;
	var p_z;
	var p_y;
	var p_x = m.e12;
	p_y = m.e13;
	p_z = m.e14;
	trans_prime_x = m1.e0 * p_x + m1.e4 * p_y + m1.e8 * p_z + m1.e12;
	trans_prime_y = m1.e1 * p_x + m1.e5 * p_y + m1.e9 * p_z + m1.e13;
	trans_prime_z = m1.e2 * p_x + m1.e6 * p_y + m1.e10 * p_z + m1.e14;
	m1.e12 = -trans_prime_x;
	m1.e13 = -trans_prime_y;
	m1.e14 = -trans_prime_z;
	return m1;
};
canvasImageTriangle_AffineMatrix.makeWindowProjection = function(win_width,win_height,fov_x_radians) {
	var half_width = win_width / 2;
	var half_height = win_height / 2;
	var tan_half = Math.tan(fov_x_radians / 2);
	var scale = half_width / tan_half;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = scale;
	a.e4 = 0;
	a.e8 = -scale;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = -scale;
	a.e9 = -half_height / tan_half;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = -1;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.prototype = {
	__class__: canvasImageTriangle_AffineMatrix
};
var canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$ = {};
canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$.__name__ = true;
canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$._new = function(ctx) {
	var this1 = ctx;
	return this1;
};
canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$.drawTriangle = function(this1,im,ax,ay,bx,by,cx,cy,asx,asy,bsx,bsy,csx,csy) {
	this1.save();
	this1.beginPath();
	this1.moveTo(ax,ay);
	this1.lineTo(bx,by);
	this1.lineTo(cx,cy);
	this1.closePath();
	this1.clip();
	var denom = asx * (csy - bsy) - bsx * csy + csx * bsy + (bsx - csx) * asy;
	if(denom != 0) {
		var bcy = by - cy;
		var cbx = cx - bx;
		var bcsy = bsy - csy;
		var bcsx = bsx - csx;
		var m11 = -(asy * cbx - bsy * cx + csy * bx + bcsy * ax) / denom;
		var m12 = (bsy * cy + asy * bcy - csy * by - bcsy * ay) / denom;
		var m21 = (asx * cbx - bsx * cx + csx * bx + bcsx * ax) / denom;
		var m22 = -(bsx * cy + asx * bcy - csx * by - bcsx * ay) / denom;
		var xcbbc = csx * bsy - bsx * csy;
		var dx = (asx * (csy * bx - bsy * cx) + asy * (bsx * cx - csx * bx) + xcbbc * ax) / denom;
		var dy = (asx * (csy * by - bsy * cy) + asy * (bsx * cy - csx * by) + xcbbc * ay) / denom;
		this1.transform(m11,m12,m21,m22,dx,dy);
		this1.drawImage(im,0,0);
		this1.restore();
	}
	return;
};
var canvasImageTriangle_ContextHandler = function(ctx_) {
	this.context = ctx_;
	this.transform = new canvasImageTriangle_AffineMatrix();
	this.texture = null;
	this.tempverts = [];
	this.tempVert0 = { x : 0, y : 0, z : 0, u : 0, v : 0};
};
canvasImageTriangle_ContextHandler.__name__ = true;
canvasImageTriangle_ContextHandler.signedArea = function(a,b,c) {
	return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x) > 0;
};
canvasImageTriangle_ContextHandler.prototype = {
	setTransform: function(mat) {
		var dest = this.transform;
		dest.e0 = mat.e0;
		dest.e4 = mat.e4;
		dest.e8 = mat.e8;
		dest.e12 = mat.e12;
		dest.e1 = mat.e1;
		dest.e5 = mat.e5;
		dest.e9 = mat.e9;
		dest.e13 = mat.e13;
		dest.e2 = mat.e2;
		dest.e6 = mat.e6;
		dest.e10 = mat.e10;
		dest.e14 = mat.e14;
	}
	,setTexture: function(tex) {
		this.texture = tex;
	}
	,expandVertexs: function(size) {
		var temps = this.tempverts;
		var expand = size - temps.length;
		var _g1 = 0;
		var _g = expand;
		while(_g1 < _g) {
			var i = _g1++;
			temps[i] = { x : 0, y : 0, z : 0, u : 0, v : 0};
		}
	}
	,drawTris: function(verts,trilist) {
		this.expandVertexs(verts.length);
		var temps = this.tempverts;
		var tx = this.transform;
		var tempv0 = this.tempVert0;
		var n = verts.length;
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			var i = _g1++;
			var p = verts[i];
			tempv0.x = tx.e0 * p.x + tx.e4 * p.y + tx.e8 * p.z + tx.e12;
			tempv0.y = tx.e1 * p.x + tx.e5 * p.y + tx.e9 * p.z + tx.e13;
			tempv0.z = tx.e2 * p.x + tx.e6 * p.y + tx.e10 * p.z + tx.e14;
			var out = temps[i];
			out.z = tempv0.z;
			if(tempv0.z <= 0) {
				out.x = 0;
				out.y = 0;
			} else {
				out.x = tempv0.x / tempv0.z;
				out.y = tempv0.y / tempv0.z;
			}
			temps[i].u = verts[i].u;
			temps[i].v = verts[i].v;
		}
		var ctx = this.context;
		var tex = this.texture;
		var a;
		var b;
		var c;
		n = trilist.length - 2;
		var i1 = 0;
		while(i1 < n) {
			a = temps[trilist[i1]];
			b = temps[trilist[i1 + 1]];
			c = temps[trilist[i1 + 2]];
			if(a.z <= 0 || b.z <= 0 && c.z <= 0) {
				i1 += 3;
				continue;
			}
			if((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x) > 0) {
				i1 += 3;
				continue;
			}
			canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$.drawTriangle(this.context,tex,a.x,a.y,b.x,b.y,c.x,c.y,a.u,a.v,b.u,b.v,c.u,c.v);
			i1 += 3;
		}
	}
	,__class__: canvasImageTriangle_ContextHandler
};
var canvasImageTriangle_PerspectiveTri = function(surface_,image_,options_) {
	this.draw_wireframe = false;
	this.MIN_Z = 0.05;
	this.surface = surface_;
	this.image = image_;
	this.options = options_;
};
canvasImageTriangle_PerspectiveTri.__name__ = true;
canvasImageTriangle_PerspectiveTri.bisect = function(p,q) {
	var p1 = { x : (p.x + q.x) / 2, y : (p.y + q.y) / 2, z : (p.z + q.z) / 2, u : (p.u + q.u) / 2, v : (p.v + q.v) / 2};
	return p1;
};
canvasImageTriangle_PerspectiveTri.prototype = {
	render: function(tverts,width,height) {
		this.surface.globalAlpha = this.options.whiteout_alpha;
		this.surface.fillStyle = "#FFFFFF";
		this.surface.fillRect(0,0,width,height);
		this.surface.globalAlpha = 1;
		var depth = this.options.nonadaptive_depth;
		this.draw(tverts[0],tverts[1],tverts[2],depth);
		this.draw(tverts[0],tverts[2],tverts[3],depth);
		if(this.options.wireframe) {
			this.surface.globalAlpha = 0.3;
			this.surface.fillRect(0,0,width,height);
			this.draw_wireframe = true;
			this.surface.globalAlpha = 1;
			this.draw(tverts[0],tverts[1],tverts[2],depth);
			this.draw(tverts[0],tverts[2],tverts[3],depth);
			this.draw_wireframe = false;
		}
	}
	,unclippedSubX: function(a,tv0,b,tv1,c,tv2) {
		this.surface.beginPath();
		this.surface.moveTo(tv0.x,tv0.y);
		this.surface.lineTo(tv1.x,tv1.y);
		this.surface.lineTo(tv2.x,tv2.y);
		this.surface.lineTo(tv0.x,tv0.y);
		this.surface.stroke();
	}
	,unclippedSub: function(a,tv0,b,tv1,c,tv2,depth_count) {
		if(depth_count == null) {
			depth_count = 0;
		}
		var edgelen01 = Math.abs(tv0.x - tv1.x) + Math.abs(tv0.y - tv1.y);
		var edgelen12 = Math.abs(tv1.x - tv2.x) + Math.abs(tv1.y - tv2.y);
		var edgelen20 = Math.abs(tv2.x - tv0.x) + Math.abs(tv2.y - tv0.y);
		var zdepth01 = Math.abs(a.z - b.z);
		var zdepth12 = Math.abs(b.z - c.z);
		var zdepth20 = Math.abs(c.z - a.z);
		var factor = this.options.subdivide_factor;
		var subdiv = (edgelen01 * zdepth01 > factor ? 1 : 0) + (edgelen12 * zdepth12 > factor ? 2 : 0) + (edgelen20 * zdepth20 > factor ? 4 : 0);
		if(depth_count != 0) {
			--depth_count;
			if(depth_count == 0) {
				subdiv = 0;
			} else {
				subdiv = 7;
			}
		}
		if(subdiv == 0) {
			if(this.draw_wireframe) {
				this.surface.beginPath();
				this.surface.moveTo(tv0.x,tv0.y);
				this.surface.lineTo(tv1.x,tv1.y);
				this.surface.lineTo(tv2.x,tv2.y);
				this.surface.lineTo(tv0.x,tv0.y);
				this.surface.stroke();
			} else {
				canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$.drawTriangle(this.surface,this.image,tv0.x,tv0.y,tv1.x,tv1.y,tv2.x,tv2.y,a.u,a.v,b.u,b.v,c.u,c.v);
			}
			return;
		}
		var p = { x : (a.x + b.x) / 2, y : (a.y + b.y) / 2, z : (a.z + b.z) / 2, u : (a.u + b.u) / 2, v : (a.v + b.v) / 2};
		var v01 = p;
		var tv01;
		if(v01.z <= 0) {
			var this1 = { x : 0., y : 0., z : v01.z};
			tv01 = this1;
		} else {
			var this2 = { x : v01.x / v01.z, y : v01.y / v01.z, z : v01.z};
			tv01 = this2;
		}
		var p1 = { x : (b.x + c.x) / 2, y : (b.y + c.y) / 2, z : (b.z + c.z) / 2, u : (b.u + c.u) / 2, v : (b.v + c.v) / 2};
		var v12 = p1;
		var tv12;
		if(v12.z <= 0) {
			var this3 = { x : 0., y : 0., z : v12.z};
			tv12 = this3;
		} else {
			var this4 = { x : v12.x / v12.z, y : v12.y / v12.z, z : v12.z};
			tv12 = this4;
		}
		var p2 = { x : (c.x + a.x) / 2, y : (c.y + a.y) / 2, z : (c.z + a.z) / 2, u : (c.u + a.u) / 2, v : (c.v + a.v) / 2};
		var v20 = p2;
		var tv20;
		if(v20.z <= 0) {
			var this5 = { x : 0., y : 0., z : v20.z};
			tv20 = this5;
		} else {
			var this6 = { x : v20.x / v20.z, y : v20.y / v20.z, z : v20.z};
			tv20 = this6;
		}
		switch(subdiv) {
		case 1:
			this.unclippedSub(a,tv0,v01,tv01,c,tv2);
			this.unclippedSub(v01,tv01,b,tv1,c,tv2);
			break;
		case 2:
			this.unclippedSub(a,tv0,b,tv1,v12,tv12);
			this.unclippedSub(a,tv0,v12,tv12,c,tv2);
			break;
		case 3:
			this.unclippedSub(a,tv0,v01,tv01,v12,tv12);
			this.unclippedSub(a,tv0,v12,tv12,c,tv2);
			this.unclippedSub(v01,tv01,b,tv1,v12,tv12);
			break;
		case 4:
			this.unclippedSub(a,tv0,b,tv1,v20,tv20);
			this.unclippedSub(b,tv1,c,tv2,v20,tv20);
			break;
		case 5:
			this.unclippedSub(a,tv0,v01,tv01,v20,tv20);
			this.unclippedSub(b,tv1,c,tv2,v01,tv01);
			this.unclippedSub(c,tv2,v20,tv20,v01,tv01);
			break;
		case 6:
			this.unclippedSub(a,tv0,b,tv1,v20,tv20);
			this.unclippedSub(b,tv1,v12,tv12,v20,tv20);
			this.unclippedSub(v12,tv12,c,tv2,v20,tv20);
			break;
		default:
			this.unclippedSub(a,tv0,v01,tv01,v20,tv20,depth_count);
			this.unclippedSub(b,tv1,v12,tv12,v01,tv01,depth_count);
			this.unclippedSub(c,tv2,v20,tv20,v12,tv12,depth_count);
			this.unclippedSub(v01,tv01,v12,tv12,v20,tv20,depth_count);
		}
		return;
	}
	,unclipped: function(a,b,c,depth_count) {
		if(depth_count == null) {
			depth_count = 0;
		}
		var tv0;
		if(a.z <= 0) {
			var this1 = { x : 0., y : 0., z : a.z};
			tv0 = this1;
		} else {
			var this2 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
			tv0 = this2;
		}
		var tv1;
		if(b.z <= 0) {
			var this3 = { x : 0., y : 0., z : b.z};
			tv1 = this3;
		} else {
			var this4 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
			tv1 = this4;
		}
		var tv2;
		if(c.z <= 0) {
			var this5 = { x : 0., y : 0., z : c.z};
			tv2 = this5;
		} else {
			var this6 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
			tv2 = this6;
		}
		this.unclippedSub(a,tv0,b,tv1,c,tv2,depth_count);
	}
	,clip_line: function(p,q) {
		var f = (this.MIN_Z - p.z) / (q.z - p.z);
		return { x : p.x + (q.x - p.x) * f, y : p.y + (q.y - p.y) * f, z : p.z + (q.z - p.z) * f, u : p.u + (q.u - p.u) * f, v : p.v + (q.v - p.v) * f};
	}
	,conventionalClipping: function(a,b,c) {
		var clip = (a.z < this.MIN_Z ? 1 : 0) + (b.z < this.MIN_Z ? 2 : 0) + (c.z < this.MIN_Z ? 4 : 0);
		if(clip == 7) {
			return;
		}
		if(clip != 0) {
			var ab;
			var bc;
			var ca;
			switch(clip) {
			case 1:
				var f = (this.MIN_Z - a.z) / (b.z - a.z);
				ab = { x : a.x + (b.x - a.x) * f, y : a.y + (b.y - a.y) * f, z : a.z + (b.z - a.z) * f, u : a.u + (b.u - a.u) * f, v : a.v + (b.v - a.v) * f};
				var f1 = (this.MIN_Z - a.z) / (c.z - a.z);
				ca = { x : a.x + (c.x - a.x) * f1, y : a.y + (c.y - a.y) * f1, z : a.z + (c.z - a.z) * f1, u : a.u + (c.u - a.u) * f1, v : a.v + (c.v - a.v) * f1};
				var tv0;
				if(ab.z <= 0) {
					var this1 = { x : 0., y : 0., z : ab.z};
					tv0 = this1;
				} else {
					var this2 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv0 = this2;
				}
				var tv1;
				if(b.z <= 0) {
					var this3 = { x : 0., y : 0., z : b.z};
					tv1 = this3;
				} else {
					var this4 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
					tv1 = this4;
				}
				var tv2;
				if(c.z <= 0) {
					var this5 = { x : 0., y : 0., z : c.z};
					tv2 = this5;
				} else {
					var this6 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
					tv2 = this6;
				}
				this.unclippedSub(ab,tv0,b,tv1,c,tv2,0);
				var tv01;
				if(ab.z <= 0) {
					var this7 = { x : 0., y : 0., z : ab.z};
					tv01 = this7;
				} else {
					var this8 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv01 = this8;
				}
				var tv11;
				if(c.z <= 0) {
					var this9 = { x : 0., y : 0., z : c.z};
					tv11 = this9;
				} else {
					var this10 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
					tv11 = this10;
				}
				var tv21;
				if(ca.z <= 0) {
					var this11 = { x : 0., y : 0., z : ca.z};
					tv21 = this11;
				} else {
					var this12 = { x : ca.x / ca.z, y : ca.y / ca.z, z : ca.z};
					tv21 = this12;
				}
				this.unclippedSub(ab,tv01,c,tv11,ca,tv21,0);
				break;
			case 2:
				var f2 = (this.MIN_Z - b.z) / (a.z - b.z);
				ab = { x : b.x + (a.x - b.x) * f2, y : b.y + (a.y - b.y) * f2, z : b.z + (a.z - b.z) * f2, u : b.u + (a.u - b.u) * f2, v : b.v + (a.v - b.v) * f2};
				var f3 = (this.MIN_Z - b.z) / (c.z - b.z);
				bc = { x : b.x + (c.x - b.x) * f3, y : b.y + (c.y - b.y) * f3, z : b.z + (c.z - b.z) * f3, u : b.u + (c.u - b.u) * f3, v : b.v + (c.v - b.v) * f3};
				var tv02;
				if(a.z <= 0) {
					var this13 = { x : 0., y : 0., z : a.z};
					tv02 = this13;
				} else {
					var this14 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv02 = this14;
				}
				var tv12;
				if(ab.z <= 0) {
					var this15 = { x : 0., y : 0., z : ab.z};
					tv12 = this15;
				} else {
					var this16 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv12 = this16;
				}
				var tv22;
				if(bc.z <= 0) {
					var this17 = { x : 0., y : 0., z : bc.z};
					tv22 = this17;
				} else {
					var this18 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv22 = this18;
				}
				this.unclippedSub(a,tv02,ab,tv12,bc,tv22,0);
				var tv03;
				if(a.z <= 0) {
					var this19 = { x : 0., y : 0., z : a.z};
					tv03 = this19;
				} else {
					var this20 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv03 = this20;
				}
				var tv13;
				if(bc.z <= 0) {
					var this21 = { x : 0., y : 0., z : bc.z};
					tv13 = this21;
				} else {
					var this22 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv13 = this22;
				}
				var tv23;
				if(c.z <= 0) {
					var this23 = { x : 0., y : 0., z : c.z};
					tv23 = this23;
				} else {
					var this24 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
					tv23 = this24;
				}
				this.unclippedSub(a,tv03,bc,tv13,c,tv23,0);
				break;
			case 3:
				var f4 = (this.MIN_Z - b.z) / (c.z - b.z);
				bc = { x : b.x + (c.x - b.x) * f4, y : b.y + (c.y - b.y) * f4, z : b.z + (c.z - b.z) * f4, u : b.u + (c.u - b.u) * f4, v : b.v + (c.v - b.v) * f4};
				var f5 = (this.MIN_Z - a.z) / (c.z - a.z);
				ca = { x : a.x + (c.x - a.x) * f5, y : a.y + (c.y - a.y) * f5, z : a.z + (c.z - a.z) * f5, u : a.u + (c.u - a.u) * f5, v : a.v + (c.v - a.v) * f5};
				var tv04;
				if(c.z <= 0) {
					var this25 = { x : 0., y : 0., z : c.z};
					tv04 = this25;
				} else {
					var this26 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
					tv04 = this26;
				}
				var tv14;
				if(ca.z <= 0) {
					var this27 = { x : 0., y : 0., z : ca.z};
					tv14 = this27;
				} else {
					var this28 = { x : ca.x / ca.z, y : ca.y / ca.z, z : ca.z};
					tv14 = this28;
				}
				var tv24;
				if(bc.z <= 0) {
					var this29 = { x : 0., y : 0., z : bc.z};
					tv24 = this29;
				} else {
					var this30 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv24 = this30;
				}
				this.unclippedSub(c,tv04,ca,tv14,bc,tv24,0);
				break;
			case 4:
				var f6 = (this.MIN_Z - c.z) / (b.z - c.z);
				bc = { x : c.x + (b.x - c.x) * f6, y : c.y + (b.y - c.y) * f6, z : c.z + (b.z - c.z) * f6, u : c.u + (b.u - c.u) * f6, v : c.v + (b.v - c.v) * f6};
				var f7 = (this.MIN_Z - c.z) / (a.z - c.z);
				ca = { x : c.x + (a.x - c.x) * f7, y : c.y + (a.y - c.y) * f7, z : c.z + (a.z - c.z) * f7, u : c.u + (a.u - c.u) * f7, v : c.v + (a.v - c.v) * f7};
				var tv05;
				if(a.z <= 0) {
					var this31 = { x : 0., y : 0., z : a.z};
					tv05 = this31;
				} else {
					var this32 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv05 = this32;
				}
				var tv15;
				if(b.z <= 0) {
					var this33 = { x : 0., y : 0., z : b.z};
					tv15 = this33;
				} else {
					var this34 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
					tv15 = this34;
				}
				var tv25;
				if(bc.z <= 0) {
					var this35 = { x : 0., y : 0., z : bc.z};
					tv25 = this35;
				} else {
					var this36 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv25 = this36;
				}
				this.unclippedSub(a,tv05,b,tv15,bc,tv25,0);
				var tv06;
				if(a.z <= 0) {
					var this37 = { x : 0., y : 0., z : a.z};
					tv06 = this37;
				} else {
					var this38 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv06 = this38;
				}
				var tv16;
				if(bc.z <= 0) {
					var this39 = { x : 0., y : 0., z : bc.z};
					tv16 = this39;
				} else {
					var this40 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv16 = this40;
				}
				var tv26;
				if(ca.z <= 0) {
					var this41 = { x : 0., y : 0., z : ca.z};
					tv26 = this41;
				} else {
					var this42 = { x : ca.x / ca.z, y : ca.y / ca.z, z : ca.z};
					tv26 = this42;
				}
				this.unclippedSub(a,tv06,bc,tv16,ca,tv26,0);
				break;
			case 5:
				var f8 = (this.MIN_Z - a.z) / (b.z - a.z);
				ab = { x : a.x + (b.x - a.x) * f8, y : a.y + (b.y - a.y) * f8, z : a.z + (b.z - a.z) * f8, u : a.u + (b.u - a.u) * f8, v : a.v + (b.v - a.v) * f8};
				var f9 = (this.MIN_Z - c.z) / (b.z - c.z);
				bc = { x : c.x + (b.x - c.x) * f9, y : c.y + (b.y - c.y) * f9, z : c.z + (b.z - c.z) * f9, u : c.u + (b.u - c.u) * f9, v : c.v + (b.v - c.v) * f9};
				var tv07;
				if(b.z <= 0) {
					var this43 = { x : 0., y : 0., z : b.z};
					tv07 = this43;
				} else {
					var this44 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
					tv07 = this44;
				}
				var tv17;
				if(bc.z <= 0) {
					var this45 = { x : 0., y : 0., z : bc.z};
					tv17 = this45;
				} else {
					var this46 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv17 = this46;
				}
				var tv27;
				if(ab.z <= 0) {
					var this47 = { x : 0., y : 0., z : ab.z};
					tv27 = this47;
				} else {
					var this48 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv27 = this48;
				}
				this.unclippedSub(b,tv07,bc,tv17,ab,tv27,0);
				break;
			case 6:
				var f10 = (this.MIN_Z - a.z) / (b.z - a.z);
				ab = { x : a.x + (b.x - a.x) * f10, y : a.y + (b.y - a.y) * f10, z : a.z + (b.z - a.z) * f10, u : a.u + (b.u - a.u) * f10, v : a.v + (b.v - a.v) * f10};
				var f11 = (this.MIN_Z - a.z) / (c.z - a.z);
				ca = { x : a.x + (c.x - a.x) * f11, y : a.y + (c.y - a.y) * f11, z : a.z + (c.z - a.z) * f11, u : a.u + (c.u - a.u) * f11, v : a.v + (c.v - a.v) * f11};
				var tv08;
				if(a.z <= 0) {
					var this49 = { x : 0., y : 0., z : a.z};
					tv08 = this49;
				} else {
					var this50 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv08 = this50;
				}
				var tv18;
				if(ab.z <= 0) {
					var this51 = { x : 0., y : 0., z : ab.z};
					tv18 = this51;
				} else {
					var this52 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv18 = this52;
				}
				var tv28;
				if(ca.z <= 0) {
					var this53 = { x : 0., y : 0., z : ca.z};
					tv28 = this53;
				} else {
					var this54 = { x : ca.x / ca.z, y : ca.y / ca.z, z : ca.z};
					tv28 = this54;
				}
				this.unclippedSub(a,tv08,ab,tv18,ca,tv28,0);
				break;
			}
			return;
		}
		var tv09;
		if(a.z <= 0) {
			var this55 = { x : 0., y : 0., z : a.z};
			tv09 = this55;
		} else {
			var this56 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
			tv09 = this56;
		}
		var tv19;
		if(b.z <= 0) {
			var this57 = { x : 0., y : 0., z : b.z};
			tv19 = this57;
		} else {
			var this58 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
			tv19 = this58;
		}
		var tv29;
		if(c.z <= 0) {
			var this59 = { x : 0., y : 0., z : c.z};
			tv29 = this59;
		} else {
			var this60 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
			tv29 = this60;
		}
		this.unclippedSub(a,tv09,b,tv19,c,tv29,0);
	}
	,draw: function(a,b,c,depth_count) {
		if(depth_count == null) {
			depth_count = 0;
		}
		var clip = (a.z < this.MIN_Z ? 1 : 0) + (b.z < this.MIN_Z ? 2 : 0) + (c.z < this.MIN_Z ? 4 : 0);
		if(clip == 0) {
			var tv0;
			if(a.z <= 0) {
				var this1 = { x : 0., y : 0., z : a.z};
				tv0 = this1;
			} else {
				var this2 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
				tv0 = this2;
			}
			var tv1;
			if(b.z <= 0) {
				var this3 = { x : 0., y : 0., z : b.z};
				tv1 = this3;
			} else {
				var this4 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
				tv1 = this4;
			}
			var tv2;
			if(c.z <= 0) {
				var this5 = { x : 0., y : 0., z : c.z};
				tv2 = this5;
			} else {
				var this6 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
				tv2 = this6;
			}
			this.unclippedSub(a,tv0,b,tv1,c,tv2,depth_count);
			return;
		}
		if(clip == 7) {
			return;
		}
		var min_z2 = this.MIN_Z * 1.1;
		var clip2 = (a.z < min_z2 ? 1 : 0) + (b.z < min_z2 ? 2 : 0) + (c.z < min_z2 ? 4 : 0);
		if(clip2 == 7) {
			return;
		}
		var p = { x : (a.x + b.x) / 2, y : (a.y + b.y) / 2, z : (a.z + b.z) / 2, u : (a.u + b.u) / 2, v : (a.v + b.v) / 2};
		var ab = p;
		var p1 = { x : (b.x + c.x) / 2, y : (b.y + c.y) / 2, z : (b.z + c.z) / 2, u : (b.u + c.u) / 2, v : (b.v + c.v) / 2};
		var bc = p1;
		var p2 = { x : (c.x + a.x) / 2, y : (c.y + a.y) / 2, z : (c.z + a.z) / 2, u : (c.u + a.u) / 2, v : (c.v + a.v) / 2};
		var ca = p2;
		if(depth_count != 0) {
			--depth_count;
		}
		this.draw(a,ab,ca,depth_count);
		this.draw(ab,b,bc,depth_count);
		this.draw(bc,c,ca,depth_count);
		this.draw(ab,bc,ca,depth_count);
		return;
	}
	,__class__: canvasImageTriangle_PerspectiveTri
};
var canvasImageTriangle__$Point3D_Point3D_$Impl_$ = {};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.__name__ = true;
canvasImageTriangle__$Point3D_Point3D_$Impl_$._new = function(x_,y_,z_) {
	var this1 = { x : x_, y : y_, z : z_};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.projectPoint = function(p) {
	if(p.z <= 0) {
		var this1 = { x : 0., y : 0., z : p.z};
		return this1;
	} else {
		var this2 = { x : p.x / p.z, y : p.y / p.z, z : p.z};
		return this2;
	}
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.projectPointTo = function(p,out) {
	out.z = p.z;
	if(p.z <= 0) {
		out.x = 0;
		out.y = 0;
	} else {
		out.x = p.x / p.z;
		out.y = p.y / p.z;
	}
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorDupe = function(a) {
	var this1 = { x : a.x, y : a.y, z : a.z};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorCopyTo = function(a,b) {
	b.x = a.x;
	b.y = a.y;
	b.z = a.z;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.crossProduct = function(a,b) {
	var this1 = { x : a.y * b.z - a.z * b.y, y : a.z * b.x - a.x * b.z, z : a.x * b.y - a.y * b.x};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.dotProduct = function(a,b) {
	return a.x * b.x + a.y * b.y + a.z * b.z;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorAdd = function(a,b) {
	var this1 = { x : a.x + b.x, y : a.y + b.y, z : a.z + b.z};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorSub = function(a,b) {
	var this1 = { x : a.x - b.x, y : a.y - b.y, z : a.z - b.z};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorScale = function(v,s) {
	var this1 = { x : v.x * s, y : v.y * s, z : v.z * s};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorNormalize = function(v) {
	var l2 = v.x * v.x + v.y * v.y + v.z * v.z;
	if(l2 <= 0) {
		var this1 = { x : 1., y : 0., z : 0.};
		return this1;
	} else {
		var scale = 1 / Math.sqrt(l2);
		var this2 = { x : v.x * scale, y : v.y * scale, z : v.z * scale};
		return this2;
	}
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorLength = function(v) {
	var l2 = v.x * v.x + v.y * v.y + v.z * v.z;
	return Math.sqrt(l2);
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorDistance = function(a,b) {
	var dx = a.x - b.x;
	var dy = a.y - b.y;
	var dz = a.z - b.z;
	var l2 = dx * dx + dy * dy + dz * dz;
	return Math.sqrt(l2);
};
var canvasImageTriangle_World = function(width,height) {
	this.smaller = false;
	this.bigger = false;
	this.dt = 0;
	this.distance = 2.;
	this.lastTime = 0;
	this.hFov = Math.PI / 2;
	this.proj = null;
	this.camera = null;
	this.object = null;
	this.temp_mat2 = null;
	this.temp_mat1 = null;
	this.temp_mat0 = null;
	this.dl = null;
	this.mouseGrab = null;
	var this1 = { x : 2.6, y : 2.6, z : 0};
	this.omega = this1;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = 1;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = 1;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = 1;
	a.e14 = 0;
	this.temp_mat0 = a;
	var a1 = new canvasImageTriangle_AffineMatrix();
	a1.e0 = 1;
	a1.e4 = 0;
	a1.e8 = 0;
	a1.e12 = 0;
	a1.e1 = 0;
	a1.e5 = 1;
	a1.e9 = 0;
	a1.e13 = 0;
	a1.e2 = 0;
	a1.e6 = 0;
	a1.e10 = 1;
	a1.e14 = 0;
	this.temp_mat1 = a1;
	var a2 = new canvasImageTriangle_AffineMatrix();
	a2.e0 = 1;
	a2.e4 = 0;
	a2.e8 = 0;
	a2.e12 = 0;
	a2.e1 = 0;
	a2.e5 = 1;
	a2.e9 = 0;
	a2.e13 = 0;
	a2.e2 = 0;
	a2.e6 = 0;
	a2.e10 = 1;
	a2.e14 = 0;
	this.temp_mat2 = a2;
	var half_width = width / 2;
	var half_height = height / 2;
	var tan_half = Math.tan(this.hFov / 2);
	var scale = half_width / tan_half;
	var a3 = new canvasImageTriangle_AffineMatrix();
	a3.e0 = scale;
	a3.e4 = 0;
	a3.e8 = -scale;
	a3.e12 = 0;
	a3.e1 = 0;
	a3.e5 = -scale;
	a3.e9 = -half_height / tan_half;
	a3.e13 = 0;
	a3.e2 = 0;
	a3.e6 = 0;
	a3.e10 = -1;
	a3.e14 = 0;
	this.proj = a3;
	var this2 = { x : 0., y : 0., z : 0.};
	var pos = this2;
	var this3 = { x : 1., y : 0., z : 0.};
	var dir = this3;
	var this4 = { x : 0., y : 1., z : 0.};
	var up = this4;
	var this5 = { x : dir.y * up.z - dir.z * up.y, y : dir.z * up.x - dir.x * up.z, z : dir.x * up.y - dir.y * up.x};
	var right = this5;
	var e0_ = dir.x;
	var e4_ = up.x;
	var e8_ = right.x;
	var e12_ = pos.x;
	var e1_ = dir.y;
	var e5_ = up.y;
	var e9_ = right.y;
	var e13_ = pos.y;
	var e2_ = dir.z;
	var e6_ = up.z;
	var e10_ = right.z;
	var e14_ = pos.z;
	var a4 = new canvasImageTriangle_AffineMatrix();
	a4.e0 = e0_;
	a4.e4 = e4_;
	a4.e8 = e8_;
	a4.e12 = e12_;
	a4.e1 = e1_;
	a4.e5 = e5_;
	a4.e9 = e9_;
	a4.e13 = e13_;
	a4.e2 = e2_;
	a4.e6 = e6_;
	a4.e10 = e10_;
	a4.e14 = e14_;
	this.object = a4;
	var this6 = { x : 0., y : 0., z : 0.2 + this.distance};
	var pos1 = this6;
	var this7 = { x : 0., y : 0., z : -1.};
	var dir1 = this7;
	var this8 = { x : 0., y : 1., z : 0.};
	var up1 = this8;
	var this9 = { x : dir1.y * up1.z - dir1.z * up1.y, y : dir1.z * up1.x - dir1.x * up1.z, z : dir1.x * up1.y - dir1.y * up1.x};
	var right1 = this9;
	var e0_1 = dir1.x;
	var e4_1 = up1.x;
	var e8_1 = right1.x;
	var e12_1 = pos1.x;
	var e1_1 = dir1.y;
	var e5_1 = up1.y;
	var e9_1 = right1.y;
	var e13_1 = pos1.y;
	var e2_1 = dir1.z;
	var e6_1 = up1.z;
	var e10_1 = right1.z;
	var e14_1 = pos1.z;
	var a5 = new canvasImageTriangle_AffineMatrix();
	a5.e0 = e0_1;
	a5.e4 = e4_1;
	a5.e8 = e8_1;
	a5.e12 = e12_1;
	a5.e1 = e1_1;
	a5.e5 = e5_1;
	a5.e9 = e9_1;
	a5.e13 = e13_1;
	a5.e2 = e2_1;
	a5.e6 = e6_1;
	a5.e10 = e10_1;
	a5.e14 = e14_1;
	this.camera = a5;
};
canvasImageTriangle_World.__name__ = true;
canvasImageTriangle_World.rayVsUnitSphereClosestPoint = function(p,r) {
	if(p.x * p.x + p.y * p.y + p.z * p.z < 1) {
		return null;
	}
	var ray = -(p.x * r.x + p.y * r.y + p.z * r.z);
	if(ray < 0) {
		return null;
	}
	var this1 = { x : r.x * ray, y : r.y * ray, z : r.z * ray};
	var b = this1;
	var this2 = { x : p.x + b.x, y : p.y + b.y, z : p.z + b.z};
	var perp = this2;
	if(perp.x * perp.x + perp.y * perp.y + perp.z * perp.z >= 0.999999) {
		var l2 = perp.x * perp.x + perp.y * perp.y + perp.z * perp.z;
		if(l2 <= 0) {
			var this3 = { x : 1., y : 0., z : 0.};
			return this3;
		} else {
			var scale = 1 / Math.sqrt(l2);
			var this4 = { x : perp.x * scale, y : perp.y * scale, z : perp.z * scale};
			return this4;
		}
	}
	var e = Math.sqrt(1 - (perp.x * perp.x + perp.y * perp.y + perp.z * perp.z));
	var s = ray - e;
	var this5 = { x : r.x * s, y : r.y * s, z : r.z * s};
	var b1 = this5;
	var this6 = { x : p.x + b1.x, y : p.y + b1.y, z : p.z + b1.z};
	var hit = this6;
	var l21 = hit.x * hit.x + hit.y * hit.y + hit.z * hit.z;
	if(l21 <= 0) {
		var this7 = { x : 1., y : 0., z : 0.};
		return this7;
	} else {
		var scale1 = 1 / Math.sqrt(l21);
		var this8 = { x : hit.x * scale1, y : hit.y * scale1, z : hit.z * scale1};
		return this8;
	}
};
canvasImageTriangle_World.prototype = {
	transformVertex: function(v) {
		var this1 = { x : v.x, y : v.y, z : v.z};
		var p = this1;
		var t = this.temp_mat1;
		p = { x : t.e0 * p.x + t.e4 * p.y + t.e8 * p.z + t.e12, y : t.e1 * p.x + t.e5 * p.y + t.e9 * p.z + t.e13, z : t.e2 * p.x + t.e6 * p.y + t.e10 * p.z + t.e14};
		return { x : p.x, y : p.y, z : p.z, u : v.u, v : v.v};
	}
	,spin: function(x,y,mouseDown) {
		var now = new Date().getTime() | 0;
		this.dt = now - this.lastTime;
		this.lastTime = now;
		if(this.dt > 100) {
			this.dt = 100;
		}
		if(this.dt < 1) {
			this.dt = 1;
		}
		if(this.bigger) {
			this.distance -= 2.0 * this.dt / 1000;
		}
		if(this.smaller) {
			this.distance += 2.0 * this.dt / 1000;
		}
		if(this.distance < 0) {
			this.distance = 0.;
		}
		this.camera.e14 = 0.2 + this.distance;
		if(mouseDown) {
			var this1 = { x : this.camera.e12, y : this.camera.e13, z : this.camera.e14 + 1.};
			var p = this1;
			var this2 = { x : this.camera.e0, y : this.camera.e1, z : this.camera.e2};
			var r = this2;
			var this3 = { x : this.camera.e4, y : this.camera.e5, z : this.camera.e6};
			var up = this3;
			var this4 = { x : this.camera.e8, y : this.camera.e9, z : this.camera.e10};
			var right = this4;
			var tan_half = Math.tan(this.hFov / 2);
			var s = x * tan_half;
			var this5 = { x : right.x * s, y : right.y * s, z : right.z * s};
			var b = this5;
			var this6 = { x : r.x + b.x, y : r.y + b.y, z : r.z + b.z};
			r = this6;
			var s1 = y * tan_half;
			var this7 = { x : up.x * s1, y : up.y * s1, z : up.z * s1};
			var b1 = this7;
			var this8 = { x : r.x + b1.x, y : r.y + b1.y, z : r.z + b1.z};
			r = this8;
			var l2 = r.x * r.x + r.y * r.y + r.z * r.z;
			if(l2 <= 0) {
				var this9 = { x : 1., y : 0., z : 0.};
				r = this9;
			} else {
				var scale = 1 / Math.sqrt(l2);
				var this10 = { x : r.x * scale, y : r.y * scale, z : r.z * scale};
				r = this10;
			}
			var grabPoint;
			if(p.x * p.x + p.y * p.y + p.z * p.z < 1) {
				grabPoint = null;
			} else {
				var ray = -(p.x * r.x + p.y * r.y + p.z * r.z);
				if(ray < 0) {
					grabPoint = null;
				} else {
					var this11 = { x : r.x * ray, y : r.y * ray, z : r.z * ray};
					var b2 = this11;
					var this12 = { x : p.x + b2.x, y : p.y + b2.y, z : p.z + b2.z};
					var perp = this12;
					if(perp.x * perp.x + perp.y * perp.y + perp.z * perp.z >= 0.999999) {
						var l21 = perp.x * perp.x + perp.y * perp.y + perp.z * perp.z;
						if(l21 <= 0) {
							var this13 = { x : 1., y : 0., z : 0.};
							grabPoint = this13;
						} else {
							var scale1 = 1 / Math.sqrt(l21);
							var this14 = { x : perp.x * scale1, y : perp.y * scale1, z : perp.z * scale1};
							grabPoint = this14;
						}
					} else {
						var e = Math.sqrt(1 - (perp.x * perp.x + perp.y * perp.y + perp.z * perp.z));
						var s2 = ray - e;
						var this15 = { x : r.x * s2, y : r.y * s2, z : r.z * s2};
						var b3 = this15;
						var this16 = { x : p.x + b3.x, y : p.y + b3.y, z : p.z + b3.z};
						var hit = this16;
						var l22 = hit.x * hit.x + hit.y * hit.y + hit.z * hit.z;
						if(l22 <= 0) {
							var this17 = { x : 1., y : 0., z : 0.};
							grabPoint = this17;
						} else {
							var scale2 = 1 / Math.sqrt(l22);
							var this18 = { x : hit.x * scale2, y : hit.y * scale2, z : hit.z * scale2};
							grabPoint = this18;
						}
					}
				}
			}
			if(this.mouseGrab == null && grabPoint != null) {
				var t = this.object;
				this.mouseGrab = { x : t.e0 * grabPoint.x + t.e1 * grabPoint.y + t.e2 * grabPoint.z, y : t.e4 * grabPoint.x + t.e5 * grabPoint.y + t.e6 * grabPoint.z, z : t.e8 * grabPoint.x + t.e9 * grabPoint.y + t.e10 * grabPoint.z};
			}
			if(this.mouseGrab != null && grabPoint != null) {
				var origGrab_z;
				var origGrab_y;
				var origGrab_x;
				var t1 = this.object;
				var p1 = this.mouseGrab;
				origGrab_x = t1.e0 * p1.x + t1.e4 * p1.y + t1.e8 * p1.z;
				origGrab_y = t1.e1 * p1.x + t1.e5 * p1.y + t1.e9 * p1.z;
				origGrab_z = t1.e2 * p1.x + t1.e6 * p1.y + t1.e10 * p1.z;
				var this19 = { x : origGrab_y * grabPoint.z - origGrab_z * grabPoint.y, y : origGrab_z * grabPoint.x - origGrab_x * grabPoint.z, z : origGrab_x * grabPoint.y - origGrab_y * grabPoint.x};
				var axis = this19;
				var this20 = { x : axis.x * 0.95, y : axis.y * 0.95, z : axis.z * 0.95};
				axis = this20;
				var angle = Math.asin(Math.sqrt(axis.x * axis.x + axis.y * axis.y + axis.z * axis.z));
				if(angle > Math.PI / 8) {
					angle = Math.PI / 8;
				}
				var l23 = axis.x * axis.x + axis.y * axis.y + axis.z * axis.z;
				var axis1;
				if(l23 <= 0) {
					var this21 = { x : 1., y : 0., z : 0.};
					axis1 = this21;
				} else {
					var scale3 = 1 / Math.sqrt(l23);
					var this22 = { x : axis.x * scale3, y : axis.y * scale3, z : axis.z * scale3};
					axis1 = this22;
				}
				var c = Math.cos(angle);
				var s3 = Math.sin(angle);
				var C = 1 - c;
				var xs = axis1.x * s3;
				var ys = axis1.y * s3;
				var zs = axis1.z * s3;
				var xC = axis1.x * C;
				var yC = axis1.y * C;
				var zC = axis1.z * C;
				var xyC = axis1.x * yC;
				var yzC = axis1.y * zC;
				var zxC = axis1.z * xC;
				var e0_ = axis1.x * xC + c;
				var e5_ = axis1.y * yC + c;
				var e10_ = axis1.z * zC + c;
				var a = new canvasImageTriangle_AffineMatrix();
				a.e0 = e0_;
				a.e4 = xyC - zs;
				a.e8 = zxC + ys;
				a.e12 = 0;
				a.e1 = xyC + zs;
				a.e5 = e5_;
				a.e9 = yzC - xs;
				a.e13 = 0;
				a.e2 = zxC - ys;
				a.e6 = yzC + xs;
				a.e10 = e10_;
				a.e14 = 0;
				var mat = a;
				var b4 = this.object;
				var a0 = mat.e0;
				var a1 = mat.e1;
				var a2 = mat.e2;
				var a4 = mat.e4;
				var a5 = mat.e5;
				var a6 = mat.e6;
				var a8 = mat.e8;
				var a9 = mat.e9;
				var a10 = mat.e10;
				var a12 = mat.e12;
				var a13 = mat.e13;
				var a14 = mat.e14;
				var b0 = b4.e0;
				var b11 = b4.e1;
				var b21 = b4.e2;
				var b41 = b4.e4;
				var b5 = b4.e5;
				var b6 = b4.e6;
				var b8 = b4.e8;
				var b9 = b4.e9;
				var b10 = b4.e10;
				var b12 = b4.e12;
				var b13 = b4.e13;
				var b14 = b4.e14;
				var a3 = new canvasImageTriangle_AffineMatrix();
				a3.e0 = a0 * b0 + a4 * b11 + a8 * b21;
				a3.e4 = a0 * b41 + a4 * b5 + a8 * b6;
				a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
				a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
				a3.e1 = a1 * b0 + a5 * b11 + a9 * b21;
				a3.e5 = a1 * b41 + a5 * b5 + a9 * b6;
				a3.e9 = a1 * b8 + a5 * b9 + a9 * b10;
				a3.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
				a3.e2 = a2 * b0 + a6 * b11 + a10 * b21;
				a3.e6 = a2 * b41 + a6 * b5 + a10 * b6;
				a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
				a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
				this.object = a3;
				var a7 = this.object;
				var this23 = { x : a7.e0, y : a7.e1, z : a7.e2};
				var v = this23;
				var l24 = v.x * v.x + v.y * v.y + v.z * v.z;
				var new_x;
				if(l24 <= 0) {
					var this24 = { x : 1., y : 0., z : 0.};
					new_x = this24;
				} else {
					var scale4 = 1 / Math.sqrt(l24);
					var this25 = { x : v.x * scale4, y : v.y * scale4, z : v.z * scale4};
					new_x = this25;
				}
				var this26 = { x : a7.e4, y : a7.e5, z : a7.e6};
				var b7 = this26;
				var this27 = { x : new_x.y * b7.z - new_x.z * b7.y, y : new_x.z * b7.x - new_x.x * b7.z, z : new_x.x * b7.y - new_x.y * b7.x};
				var v1 = this27;
				var l25 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
				var new_z;
				if(l25 <= 0) {
					var this28 = { x : 1., y : 0., z : 0.};
					new_z = this28;
				} else {
					var scale5 = 1 / Math.sqrt(l25);
					var this29 = { x : v1.x * scale5, y : v1.y * scale5, z : v1.z * scale5};
					new_z = this29;
				}
				var this30 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
				var new_y = this30;
				a7.e0 = new_x.x;
				a7.e1 = new_x.y;
				a7.e2 = new_x.z;
				a7.e4 = new_y.x;
				a7.e5 = new_y.y;
				a7.e6 = new_y.z;
				a7.e8 = new_z.x;
				a7.e9 = new_z.y;
				a7.e10 = new_z.z;
				var s4 = 1000 / this.dt;
				var this31 = { x : axis.x * s4, y : axis.y * s4, z : axis.z * s4};
				this.omega = this31;
			}
		} else {
			this.mouseGrab = null;
			var v2 = this.omega;
			var this32 = { x : v2.x * 0.95, y : v2.y * 0.95, z : v2.z * 0.95};
			this.omega = this32;
			var a11 = this.omega;
			var b15 = this.omega;
			var dotOmegaProduct = a11.x * b15.x + a11.y * b15.y + a11.z * b15.z;
			if(dotOmegaProduct < 0.000000001 && this.bigger == false && this.smaller == false) {
				var this33 = { x : 0, y : 0, z : 0};
				this.omega = this33;
			} else {
				var v3 = this.omega;
				var s5 = this.dt / 1000;
				var this34 = { x : v3.x * s5, y : v3.y * s5, z : v3.z * s5};
				var scaled = this34;
				var angle1 = Math.asin(Math.sqrt(scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z));
				if(angle1 > Math.PI / 8) {
					angle1 = Math.PI / 8;
				}
				var l26 = scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z;
				var axis2;
				if(l26 <= 0) {
					var this35 = { x : 1., y : 0., z : 0.};
					axis2 = this35;
				} else {
					var scale6 = 1 / Math.sqrt(l26);
					var this36 = { x : scaled.x * scale6, y : scaled.y * scale6, z : scaled.z * scale6};
					axis2 = this36;
				}
				var c1 = Math.cos(angle1);
				var s6 = Math.sin(angle1);
				var C1 = 1 - c1;
				var xs1 = axis2.x * s6;
				var ys1 = axis2.y * s6;
				var zs1 = axis2.z * s6;
				var xC1 = axis2.x * C1;
				var yC1 = axis2.y * C1;
				var zC1 = axis2.z * C1;
				var xyC1 = axis2.x * yC1;
				var yzC1 = axis2.y * zC1;
				var zxC1 = axis2.z * xC1;
				var e0_1 = axis2.x * xC1 + c1;
				var e5_1 = axis2.y * yC1 + c1;
				var e10_1 = axis2.z * zC1 + c1;
				var a15 = new canvasImageTriangle_AffineMatrix();
				a15.e0 = e0_1;
				a15.e4 = xyC1 - zs1;
				a15.e8 = zxC1 + ys1;
				a15.e12 = 0;
				a15.e1 = xyC1 + zs1;
				a15.e5 = e5_1;
				a15.e9 = yzC1 - xs1;
				a15.e13 = 0;
				a15.e2 = zxC1 - ys1;
				a15.e6 = yzC1 + xs1;
				a15.e10 = e10_1;
				a15.e14 = 0;
				var mat1 = a15;
				var b16 = this.object;
				var a01 = mat1.e0;
				var a16 = mat1.e1;
				var a21 = mat1.e2;
				var a41 = mat1.e4;
				var a51 = mat1.e5;
				var a61 = mat1.e6;
				var a81 = mat1.e8;
				var a91 = mat1.e9;
				var a101 = mat1.e10;
				var a121 = mat1.e12;
				var a131 = mat1.e13;
				var a141 = mat1.e14;
				var b01 = b16.e0;
				var b17 = b16.e1;
				var b22 = b16.e2;
				var b42 = b16.e4;
				var b51 = b16.e5;
				var b61 = b16.e6;
				var b81 = b16.e8;
				var b91 = b16.e9;
				var b101 = b16.e10;
				var b121 = b16.e12;
				var b131 = b16.e13;
				var b141 = b16.e14;
				var a17 = new canvasImageTriangle_AffineMatrix();
				a17.e0 = a01 * b01 + a41 * b17 + a81 * b22;
				a17.e4 = a01 * b42 + a41 * b51 + a81 * b61;
				a17.e8 = a01 * b81 + a41 * b91 + a81 * b101;
				a17.e12 = a01 * b121 + a41 * b131 + a81 * b141 + a121;
				a17.e1 = a16 * b01 + a51 * b17 + a91 * b22;
				a17.e5 = a16 * b42 + a51 * b51 + a91 * b61;
				a17.e9 = a16 * b81 + a51 * b91 + a91 * b101;
				a17.e13 = a16 * b121 + a51 * b131 + a91 * b141 + a131;
				a17.e2 = a21 * b01 + a61 * b17 + a101 * b22;
				a17.e6 = a21 * b42 + a61 * b51 + a101 * b61;
				a17.e10 = a21 * b81 + a61 * b91 + a101 * b101;
				a17.e14 = a21 * b121 + a61 * b131 + a101 * b141 + a141;
				this.object = a17;
				var a18 = this.object;
				var this37 = { x : a18.e0, y : a18.e1, z : a18.e2};
				var v4 = this37;
				var l27 = v4.x * v4.x + v4.y * v4.y + v4.z * v4.z;
				var new_x1;
				if(l27 <= 0) {
					var this38 = { x : 1., y : 0., z : 0.};
					new_x1 = this38;
				} else {
					var scale7 = 1 / Math.sqrt(l27);
					var this39 = { x : v4.x * scale7, y : v4.y * scale7, z : v4.z * scale7};
					new_x1 = this39;
				}
				var this40 = { x : a18.e4, y : a18.e5, z : a18.e6};
				var b18 = this40;
				var this41 = { x : new_x1.y * b18.z - new_x1.z * b18.y, y : new_x1.z * b18.x - new_x1.x * b18.z, z : new_x1.x * b18.y - new_x1.y * b18.x};
				var v5 = this41;
				var l28 = v5.x * v5.x + v5.y * v5.y + v5.z * v5.z;
				var new_z1;
				if(l28 <= 0) {
					var this42 = { x : 1., y : 0., z : 0.};
					new_z1 = this42;
				} else {
					var scale8 = 1 / Math.sqrt(l28);
					var this43 = { x : v5.x * scale8, y : v5.y * scale8, z : v5.z * scale8};
					new_z1 = this43;
				}
				var this44 = { x : new_z1.y * new_x1.z - new_z1.z * new_x1.y, y : new_z1.z * new_x1.x - new_z1.x * new_x1.z, z : new_z1.x * new_x1.y - new_z1.y * new_x1.x};
				var new_y1 = this44;
				a18.e0 = new_x1.x;
				a18.e1 = new_x1.y;
				a18.e2 = new_x1.z;
				a18.e4 = new_y1.x;
				a18.e5 = new_y1.y;
				a18.e6 = new_y1.z;
				a18.e8 = new_z1.x;
				a18.e9 = new_z1.y;
				a18.e10 = new_z1.z;
			}
		}
	}
	,updateMatrix: function() {
		var orient = this.camera;
		var e0_ = orient.e8;
		var e4_ = orient.e4;
		var e8_ = -orient.e0;
		var e12_ = orient.e12;
		var e1_ = orient.e9;
		var e5_ = orient.e5;
		var e9_ = -orient.e1;
		var e13_ = orient.e13;
		var e2_ = orient.e10;
		var e6_ = orient.e6;
		var e10_ = -orient.e2;
		var e14_ = orient.e14;
		var a = new canvasImageTriangle_AffineMatrix();
		a.e0 = e0_;
		a.e4 = e4_;
		a.e8 = e8_;
		a.e12 = e12_;
		a.e1 = e1_;
		a.e5 = e5_;
		a.e9 = e9_;
		a.e13 = e13_;
		a.e2 = e2_;
		a.e6 = e6_;
		a.e10 = e10_;
		a.e14 = e14_;
		var m = a;
		var e0_1 = m.e0;
		var e4_1 = m.e1;
		var e8_1 = m.e2;
		var e1_1 = m.e4;
		var e5_1 = m.e5;
		var e9_1 = m.e6;
		var e2_1 = m.e8;
		var e6_1 = m.e9;
		var e10_1 = m.e10;
		var a1 = new canvasImageTriangle_AffineMatrix();
		a1.e0 = e0_1;
		a1.e4 = e4_1;
		a1.e8 = e8_1;
		a1.e12 = 0;
		a1.e1 = e1_1;
		a1.e5 = e5_1;
		a1.e9 = e9_1;
		a1.e13 = 0;
		a1.e2 = e2_1;
		a1.e6 = e6_1;
		a1.e10 = e10_1;
		a1.e14 = 0;
		var m1 = a1;
		var trans_prime_z;
		var trans_prime_y;
		var trans_prime_x;
		var p_z;
		var p_y;
		var p_x = m.e12;
		p_y = m.e13;
		p_z = m.e14;
		trans_prime_x = m1.e0 * p_x + m1.e4 * p_y + m1.e8 * p_z + m1.e12;
		trans_prime_y = m1.e1 * p_x + m1.e5 * p_y + m1.e9 * p_z + m1.e13;
		trans_prime_z = m1.e2 * p_x + m1.e6 * p_y + m1.e10 * p_z + m1.e14;
		m1.e12 = -trans_prime_x;
		m1.e13 = -trans_prime_y;
		m1.e14 = -trans_prime_z;
		var view_mat = m1;
		var a2 = this.proj;
		var out = this.temp_mat0;
		var a0 = a2.e0;
		var a11 = a2.e1;
		var a21 = a2.e2;
		var a4 = a2.e4;
		var a5 = a2.e5;
		var a6 = a2.e6;
		var a8 = a2.e8;
		var a9 = a2.e9;
		var a10 = a2.e10;
		var a12 = a2.e12;
		var a13 = a2.e13;
		var a14 = a2.e14;
		var b0 = view_mat.e0;
		var b1 = view_mat.e1;
		var b2 = view_mat.e2;
		var b4 = view_mat.e4;
		var b5 = view_mat.e5;
		var b6 = view_mat.e6;
		var b8 = view_mat.e8;
		var b9 = view_mat.e9;
		var b10 = view_mat.e10;
		var b12 = view_mat.e12;
		var b13 = view_mat.e13;
		var b14 = view_mat.e14;
		out.e0 = a0 * b0 + a4 * b1 + a8 * b2;
		out.e4 = a0 * b4 + a4 * b5 + a8 * b6;
		out.e8 = a0 * b8 + a4 * b9 + a8 * b10;
		out.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
		out.e1 = a11 * b0 + a5 * b1 + a9 * b2;
		out.e5 = a11 * b4 + a5 * b5 + a9 * b6;
		out.e9 = a11 * b8 + a5 * b9 + a9 * b10;
		out.e13 = a11 * b12 + a5 * b13 + a9 * b14 + a13;
		out.e2 = a21 * b0 + a6 * b1 + a10 * b2;
		out.e6 = a21 * b4 + a6 * b5 + a10 * b6;
		out.e10 = a21 * b8 + a6 * b9 + a10 * b10;
		out.e14 = a21 * b12 + a6 * b13 + a10 * b14 + a14;
		var a3 = this.temp_mat0;
		var b = this.object;
		var out1 = this.temp_mat1;
		var a01 = a3.e0;
		var a15 = a3.e1;
		var a22 = a3.e2;
		var a41 = a3.e4;
		var a51 = a3.e5;
		var a61 = a3.e6;
		var a81 = a3.e8;
		var a91 = a3.e9;
		var a101 = a3.e10;
		var a121 = a3.e12;
		var a131 = a3.e13;
		var a141 = a3.e14;
		var b01 = b.e0;
		var b11 = b.e1;
		var b21 = b.e2;
		var b41 = b.e4;
		var b51 = b.e5;
		var b61 = b.e6;
		var b81 = b.e8;
		var b91 = b.e9;
		var b101 = b.e10;
		var b121 = b.e12;
		var b131 = b.e13;
		var b141 = b.e14;
		out1.e0 = a01 * b01 + a41 * b11 + a81 * b21;
		out1.e4 = a01 * b41 + a41 * b51 + a81 * b61;
		out1.e8 = a01 * b81 + a41 * b91 + a81 * b101;
		out1.e12 = a01 * b121 + a41 * b131 + a81 * b141 + a121;
		out1.e1 = a15 * b01 + a51 * b11 + a91 * b21;
		out1.e5 = a15 * b41 + a51 * b51 + a91 * b61;
		out1.e9 = a15 * b81 + a51 * b91 + a91 * b101;
		out1.e13 = a15 * b121 + a51 * b131 + a91 * b141 + a131;
		out1.e2 = a22 * b01 + a61 * b11 + a101 * b21;
		out1.e6 = a22 * b41 + a61 * b51 + a101 * b61;
		out1.e10 = a22 * b81 + a61 * b91 + a101 * b101;
		out1.e14 = a22 * b121 + a61 * b131 + a101 * b141 + a141;
	}
	,rotateObject: function(scaled) {
		var angle = Math.asin(Math.sqrt(scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z));
		if(angle > Math.PI / 8) {
			angle = Math.PI / 8;
		}
		var l2 = scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z;
		var axis;
		if(l2 <= 0) {
			var this1 = { x : 1., y : 0., z : 0.};
			axis = this1;
		} else {
			var scale = 1 / Math.sqrt(l2);
			var this2 = { x : scaled.x * scale, y : scaled.y * scale, z : scaled.z * scale};
			axis = this2;
		}
		var c = Math.cos(angle);
		var s = Math.sin(angle);
		var C = 1 - c;
		var xs = axis.x * s;
		var ys = axis.y * s;
		var zs = axis.z * s;
		var xC = axis.x * C;
		var yC = axis.y * C;
		var zC = axis.z * C;
		var xyC = axis.x * yC;
		var yzC = axis.y * zC;
		var zxC = axis.z * xC;
		var e0_ = axis.x * xC + c;
		var e5_ = axis.y * yC + c;
		var e10_ = axis.z * zC + c;
		var a = new canvasImageTriangle_AffineMatrix();
		a.e0 = e0_;
		a.e4 = xyC - zs;
		a.e8 = zxC + ys;
		a.e12 = 0;
		a.e1 = xyC + zs;
		a.e5 = e5_;
		a.e9 = yzC - xs;
		a.e13 = 0;
		a.e2 = zxC - ys;
		a.e6 = yzC + xs;
		a.e10 = e10_;
		a.e14 = 0;
		var mat = a;
		var b = this.object;
		var a0 = mat.e0;
		var a1 = mat.e1;
		var a2 = mat.e2;
		var a4 = mat.e4;
		var a5 = mat.e5;
		var a6 = mat.e6;
		var a8 = mat.e8;
		var a9 = mat.e9;
		var a10 = mat.e10;
		var a12 = mat.e12;
		var a13 = mat.e13;
		var a14 = mat.e14;
		var b0 = b.e0;
		var b1 = b.e1;
		var b2 = b.e2;
		var b4 = b.e4;
		var b5 = b.e5;
		var b6 = b.e6;
		var b8 = b.e8;
		var b9 = b.e9;
		var b10 = b.e10;
		var b12 = b.e12;
		var b13 = b.e13;
		var b14 = b.e14;
		var a3 = new canvasImageTriangle_AffineMatrix();
		a3.e0 = a0 * b0 + a4 * b1 + a8 * b2;
		a3.e4 = a0 * b4 + a4 * b5 + a8 * b6;
		a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
		a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
		a3.e1 = a1 * b0 + a5 * b1 + a9 * b2;
		a3.e5 = a1 * b4 + a5 * b5 + a9 * b6;
		a3.e9 = a1 * b8 + a5 * b9 + a9 * b10;
		a3.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
		a3.e2 = a2 * b0 + a6 * b1 + a10 * b2;
		a3.e6 = a2 * b4 + a6 * b5 + a10 * b6;
		a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
		a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
		this.object = a3;
		var a7 = this.object;
		var this3 = { x : a7.e0, y : a7.e1, z : a7.e2};
		var v = this3;
		var l21 = v.x * v.x + v.y * v.y + v.z * v.z;
		var new_x;
		if(l21 <= 0) {
			var this4 = { x : 1., y : 0., z : 0.};
			new_x = this4;
		} else {
			var scale1 = 1 / Math.sqrt(l21);
			var this5 = { x : v.x * scale1, y : v.y * scale1, z : v.z * scale1};
			new_x = this5;
		}
		var this6 = { x : a7.e4, y : a7.e5, z : a7.e6};
		var b3 = this6;
		var this7 = { x : new_x.y * b3.z - new_x.z * b3.y, y : new_x.z * b3.x - new_x.x * b3.z, z : new_x.x * b3.y - new_x.y * b3.x};
		var v1 = this7;
		var l22 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
		var new_z;
		if(l22 <= 0) {
			var this8 = { x : 1., y : 0., z : 0.};
			new_z = this8;
		} else {
			var scale2 = 1 / Math.sqrt(l22);
			var this9 = { x : v1.x * scale2, y : v1.y * scale2, z : v1.z * scale2};
			new_z = this9;
		}
		var this10 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
		var new_y = this10;
		a7.e0 = new_x.x;
		a7.e1 = new_x.y;
		a7.e2 = new_x.z;
		a7.e4 = new_y.x;
		a7.e5 = new_y.y;
		a7.e6 = new_y.z;
		a7.e8 = new_z.x;
		a7.e9 = new_z.y;
		a7.e10 = new_z.z;
	}
	,nullGrab: function() {
		this.mouseGrab = null;
		var v = this.omega;
		var this1 = { x : v.x * 0.95, y : v.y * 0.95, z : v.z * 0.95};
		this.omega = this1;
		var a = this.omega;
		var b = this.omega;
		var dotOmegaProduct = a.x * b.x + a.y * b.y + a.z * b.z;
		if(dotOmegaProduct < 0.000000001 && this.bigger == false && this.smaller == false) {
			var this2 = { x : 0, y : 0, z : 0};
			this.omega = this2;
		} else {
			var v1 = this.omega;
			var s = this.dt / 1000;
			var this3 = { x : v1.x * s, y : v1.y * s, z : v1.z * s};
			var scaled = this3;
			var angle = Math.asin(Math.sqrt(scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z));
			if(angle > Math.PI / 8) {
				angle = Math.PI / 8;
			}
			var l2 = scaled.x * scaled.x + scaled.y * scaled.y + scaled.z * scaled.z;
			var axis;
			if(l2 <= 0) {
				var this4 = { x : 1., y : 0., z : 0.};
				axis = this4;
			} else {
				var scale = 1 / Math.sqrt(l2);
				var this5 = { x : scaled.x * scale, y : scaled.y * scale, z : scaled.z * scale};
				axis = this5;
			}
			var c = Math.cos(angle);
			var s1 = Math.sin(angle);
			var C = 1 - c;
			var xs = axis.x * s1;
			var ys = axis.y * s1;
			var zs = axis.z * s1;
			var xC = axis.x * C;
			var yC = axis.y * C;
			var zC = axis.z * C;
			var xyC = axis.x * yC;
			var yzC = axis.y * zC;
			var zxC = axis.z * xC;
			var e0_ = axis.x * xC + c;
			var e5_ = axis.y * yC + c;
			var e10_ = axis.z * zC + c;
			var a1 = new canvasImageTriangle_AffineMatrix();
			a1.e0 = e0_;
			a1.e4 = xyC - zs;
			a1.e8 = zxC + ys;
			a1.e12 = 0;
			a1.e1 = xyC + zs;
			a1.e5 = e5_;
			a1.e9 = yzC - xs;
			a1.e13 = 0;
			a1.e2 = zxC - ys;
			a1.e6 = yzC + xs;
			a1.e10 = e10_;
			a1.e14 = 0;
			var mat = a1;
			var b1 = this.object;
			var a0 = mat.e0;
			var a11 = mat.e1;
			var a2 = mat.e2;
			var a4 = mat.e4;
			var a5 = mat.e5;
			var a6 = mat.e6;
			var a8 = mat.e8;
			var a9 = mat.e9;
			var a10 = mat.e10;
			var a12 = mat.e12;
			var a13 = mat.e13;
			var a14 = mat.e14;
			var b0 = b1.e0;
			var b11 = b1.e1;
			var b2 = b1.e2;
			var b4 = b1.e4;
			var b5 = b1.e5;
			var b6 = b1.e6;
			var b8 = b1.e8;
			var b9 = b1.e9;
			var b10 = b1.e10;
			var b12 = b1.e12;
			var b13 = b1.e13;
			var b14 = b1.e14;
			var a3 = new canvasImageTriangle_AffineMatrix();
			a3.e0 = a0 * b0 + a4 * b11 + a8 * b2;
			a3.e4 = a0 * b4 + a4 * b5 + a8 * b6;
			a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
			a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
			a3.e1 = a11 * b0 + a5 * b11 + a9 * b2;
			a3.e5 = a11 * b4 + a5 * b5 + a9 * b6;
			a3.e9 = a11 * b8 + a5 * b9 + a9 * b10;
			a3.e13 = a11 * b12 + a5 * b13 + a9 * b14 + a13;
			a3.e2 = a2 * b0 + a6 * b11 + a10 * b2;
			a3.e6 = a2 * b4 + a6 * b5 + a10 * b6;
			a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
			a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
			this.object = a3;
			var a7 = this.object;
			var this6 = { x : a7.e0, y : a7.e1, z : a7.e2};
			var v2 = this6;
			var l21 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;
			var new_x;
			if(l21 <= 0) {
				var this7 = { x : 1., y : 0., z : 0.};
				new_x = this7;
			} else {
				var scale1 = 1 / Math.sqrt(l21);
				var this8 = { x : v2.x * scale1, y : v2.y * scale1, z : v2.z * scale1};
				new_x = this8;
			}
			var this9 = { x : a7.e4, y : a7.e5, z : a7.e6};
			var b3 = this9;
			var this10 = { x : new_x.y * b3.z - new_x.z * b3.y, y : new_x.z * b3.x - new_x.x * b3.z, z : new_x.x * b3.y - new_x.y * b3.x};
			var v3 = this10;
			var l22 = v3.x * v3.x + v3.y * v3.y + v3.z * v3.z;
			var new_z;
			if(l22 <= 0) {
				var this11 = { x : 1., y : 0., z : 0.};
				new_z = this11;
			} else {
				var scale2 = 1 / Math.sqrt(l22);
				var this12 = { x : v3.x * scale2, y : v3.y * scale2, z : v3.z * scale2};
				new_z = this12;
			}
			var this13 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
			var new_y = this13;
			a7.e0 = new_x.x;
			a7.e1 = new_x.y;
			a7.e2 = new_x.z;
			a7.e4 = new_y.x;
			a7.e5 = new_y.y;
			a7.e6 = new_y.z;
			a7.e8 = new_z.x;
			a7.e9 = new_z.y;
			a7.e10 = new_z.z;
		}
	}
	,setToGrab: function(newGrab) {
		var t = this.object;
		this.mouseGrab = { x : t.e0 * newGrab.x + t.e1 * newGrab.y + t.e2 * newGrab.z, y : t.e4 * newGrab.x + t.e5 * newGrab.y + t.e6 * newGrab.z, z : t.e8 * newGrab.x + t.e9 * newGrab.y + t.e10 * newGrab.z};
	}
	,rotateToGrab: function(newGrab) {
		var origGrab_z;
		var origGrab_y;
		var origGrab_x;
		var t = this.object;
		var p = this.mouseGrab;
		origGrab_x = t.e0 * p.x + t.e4 * p.y + t.e8 * p.z;
		origGrab_y = t.e1 * p.x + t.e5 * p.y + t.e9 * p.z;
		origGrab_z = t.e2 * p.x + t.e6 * p.y + t.e10 * p.z;
		var this1 = { x : origGrab_y * newGrab.z - origGrab_z * newGrab.y, y : origGrab_z * newGrab.x - origGrab_x * newGrab.z, z : origGrab_x * newGrab.y - origGrab_y * newGrab.x};
		var axis = this1;
		var this2 = { x : axis.x * 0.95, y : axis.y * 0.95, z : axis.z * 0.95};
		axis = this2;
		var angle = Math.asin(Math.sqrt(axis.x * axis.x + axis.y * axis.y + axis.z * axis.z));
		if(angle > Math.PI / 8) {
			angle = Math.PI / 8;
		}
		var l2 = axis.x * axis.x + axis.y * axis.y + axis.z * axis.z;
		var axis1;
		if(l2 <= 0) {
			var this3 = { x : 1., y : 0., z : 0.};
			axis1 = this3;
		} else {
			var scale = 1 / Math.sqrt(l2);
			var this4 = { x : axis.x * scale, y : axis.y * scale, z : axis.z * scale};
			axis1 = this4;
		}
		var c = Math.cos(angle);
		var s = Math.sin(angle);
		var C = 1 - c;
		var xs = axis1.x * s;
		var ys = axis1.y * s;
		var zs = axis1.z * s;
		var xC = axis1.x * C;
		var yC = axis1.y * C;
		var zC = axis1.z * C;
		var xyC = axis1.x * yC;
		var yzC = axis1.y * zC;
		var zxC = axis1.z * xC;
		var e0_ = axis1.x * xC + c;
		var e5_ = axis1.y * yC + c;
		var e10_ = axis1.z * zC + c;
		var a = new canvasImageTriangle_AffineMatrix();
		a.e0 = e0_;
		a.e4 = xyC - zs;
		a.e8 = zxC + ys;
		a.e12 = 0;
		a.e1 = xyC + zs;
		a.e5 = e5_;
		a.e9 = yzC - xs;
		a.e13 = 0;
		a.e2 = zxC - ys;
		a.e6 = yzC + xs;
		a.e10 = e10_;
		a.e14 = 0;
		var mat = a;
		var b = this.object;
		var a0 = mat.e0;
		var a1 = mat.e1;
		var a2 = mat.e2;
		var a4 = mat.e4;
		var a5 = mat.e5;
		var a6 = mat.e6;
		var a8 = mat.e8;
		var a9 = mat.e9;
		var a10 = mat.e10;
		var a12 = mat.e12;
		var a13 = mat.e13;
		var a14 = mat.e14;
		var b0 = b.e0;
		var b1 = b.e1;
		var b2 = b.e2;
		var b4 = b.e4;
		var b5 = b.e5;
		var b6 = b.e6;
		var b8 = b.e8;
		var b9 = b.e9;
		var b10 = b.e10;
		var b12 = b.e12;
		var b13 = b.e13;
		var b14 = b.e14;
		var a3 = new canvasImageTriangle_AffineMatrix();
		a3.e0 = a0 * b0 + a4 * b1 + a8 * b2;
		a3.e4 = a0 * b4 + a4 * b5 + a8 * b6;
		a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
		a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
		a3.e1 = a1 * b0 + a5 * b1 + a9 * b2;
		a3.e5 = a1 * b4 + a5 * b5 + a9 * b6;
		a3.e9 = a1 * b8 + a5 * b9 + a9 * b10;
		a3.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
		a3.e2 = a2 * b0 + a6 * b1 + a10 * b2;
		a3.e6 = a2 * b4 + a6 * b5 + a10 * b6;
		a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
		a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
		this.object = a3;
		var a7 = this.object;
		var this5 = { x : a7.e0, y : a7.e1, z : a7.e2};
		var v = this5;
		var l21 = v.x * v.x + v.y * v.y + v.z * v.z;
		var new_x;
		if(l21 <= 0) {
			var this6 = { x : 1., y : 0., z : 0.};
			new_x = this6;
		} else {
			var scale1 = 1 / Math.sqrt(l21);
			var this7 = { x : v.x * scale1, y : v.y * scale1, z : v.z * scale1};
			new_x = this7;
		}
		var this8 = { x : a7.e4, y : a7.e5, z : a7.e6};
		var b3 = this8;
		var this9 = { x : new_x.y * b3.z - new_x.z * b3.y, y : new_x.z * b3.x - new_x.x * b3.z, z : new_x.x * b3.y - new_x.y * b3.x};
		var v1 = this9;
		var l22 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
		var new_z;
		if(l22 <= 0) {
			var this10 = { x : 1., y : 0., z : 0.};
			new_z = this10;
		} else {
			var scale2 = 1 / Math.sqrt(l22);
			var this11 = { x : v1.x * scale2, y : v1.y * scale2, z : v1.z * scale2};
			new_z = this11;
		}
		var this12 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
		var new_y = this12;
		a7.e0 = new_x.x;
		a7.e1 = new_x.y;
		a7.e2 = new_x.z;
		a7.e4 = new_y.x;
		a7.e5 = new_y.y;
		a7.e6 = new_y.z;
		a7.e8 = new_z.x;
		a7.e9 = new_z.y;
		a7.e10 = new_z.z;
		var s1 = 1000 / this.dt;
		var this13 = { x : axis.x * s1, y : axis.y * s1, z : axis.z * s1};
		this.omega = this13;
	}
	,updateZoom: function() {
		if(this.bigger) {
			this.distance -= 2.0 * this.dt / 1000;
		}
		if(this.smaller) {
			this.distance += 2.0 * this.dt / 1000;
		}
		if(this.distance < 0) {
			this.distance = 0.;
		}
		this.camera.e14 = 0.2 + this.distance;
	}
	,updateTime: function() {
		var now = new Date().getTime() | 0;
		this.dt = now - this.lastTime;
		this.lastTime = now;
		if(this.dt > 100) {
			this.dt = 100;
		}
		if(this.dt < 1) {
			this.dt = 1;
		}
	}
	,screenToSpherePt: function(x,y) {
		var this1 = { x : this.camera.e12, y : this.camera.e13, z : this.camera.e14 + 1.};
		var p = this1;
		var this2 = { x : this.camera.e0, y : this.camera.e1, z : this.camera.e2};
		var r = this2;
		var this3 = { x : this.camera.e4, y : this.camera.e5, z : this.camera.e6};
		var up = this3;
		var this4 = { x : this.camera.e8, y : this.camera.e9, z : this.camera.e10};
		var right = this4;
		var tan_half = Math.tan(this.hFov / 2);
		var s = x * tan_half;
		var this5 = { x : right.x * s, y : right.y * s, z : right.z * s};
		var b = this5;
		var this6 = { x : r.x + b.x, y : r.y + b.y, z : r.z + b.z};
		r = this6;
		var s1 = y * tan_half;
		var this7 = { x : up.x * s1, y : up.y * s1, z : up.z * s1};
		var b1 = this7;
		var this8 = { x : r.x + b1.x, y : r.y + b1.y, z : r.z + b1.z};
		r = this8;
		var l2 = r.x * r.x + r.y * r.y + r.z * r.z;
		if(l2 <= 0) {
			var this9 = { x : 1., y : 0., z : 0.};
			r = this9;
		} else {
			var scale = 1 / Math.sqrt(l2);
			var this10 = { x : r.x * scale, y : r.y * scale, z : r.z * scale};
			r = this10;
		}
		if(p.x * p.x + p.y * p.y + p.z * p.z < 1) {
			return null;
		} else {
			var ray = -(p.x * r.x + p.y * r.y + p.z * r.z);
			if(ray < 0) {
				return null;
			} else {
				var this11 = { x : r.x * ray, y : r.y * ray, z : r.z * ray};
				var b2 = this11;
				var this12 = { x : p.x + b2.x, y : p.y + b2.y, z : p.z + b2.z};
				var perp = this12;
				if(perp.x * perp.x + perp.y * perp.y + perp.z * perp.z >= 0.999999) {
					var l21 = perp.x * perp.x + perp.y * perp.y + perp.z * perp.z;
					if(l21 <= 0) {
						var this13 = { x : 1., y : 0., z : 0.};
						return this13;
					} else {
						var scale1 = 1 / Math.sqrt(l21);
						var this14 = { x : perp.x * scale1, y : perp.y * scale1, z : perp.z * scale1};
						return this14;
					}
				} else {
					var e = Math.sqrt(1 - (perp.x * perp.x + perp.y * perp.y + perp.z * perp.z));
					var s2 = ray - e;
					var this15 = { x : r.x * s2, y : r.y * s2, z : r.z * s2};
					var b3 = this15;
					var this16 = { x : p.x + b3.x, y : p.y + b3.y, z : p.z + b3.z};
					var hit = this16;
					var l22 = hit.x * hit.x + hit.y * hit.y + hit.z * hit.z;
					if(l22 <= 0) {
						var this17 = { x : 1., y : 0., z : 0.};
						return this17;
					} else {
						var scale2 = 1 / Math.sqrt(l22);
						var this18 = { x : hit.x * scale2, y : hit.y * scale2, z : hit.z * scale2};
						return this18;
					}
				}
			}
		}
	}
	,__class__: canvasImageTriangle_World
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,__class__: haxe_ds_StringMap
};
var htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$ = {};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.__name__ = true;
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$._new = function(e) {
	var this1;
	if(e == null) {
		var canvas = window.document.createElement("canvas");
		var dom = canvas;
		var style = dom.style;
		style.paddingLeft = "0px";
		style.paddingTop = "0px";
		style.left = "0px";
		style.top = "0px";
		style.position = "absolute";
		this1 = canvas;
	} else {
		this1 = e;
	}
	return this1;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.create = function() {
	var canvas = window.document.createElement("canvas");
	var dom = canvas;
	var style = dom.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = "0px";
	style.top = "0px";
	style.position = "absolute";
	return canvas;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.set_x = function(this1,x_) {
	this1.style.left = (x_ == null ? "null" : "" + x_) + "px";
	return x_;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.get_x = function(this1) {
	var style = this1.style;
	var len = style.left.length;
	return Std.parseInt(style.left.substr(0,len - 2));
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.set_y = function(this1,y_) {
	this1.style.left = (y_ == null ? "null" : "" + y_) + "px";
	return y_;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.get_y = function(this1) {
	var style = this1.style;
	var len = style.top.length;
	return Std.parseInt(style.top.substr(0,len - 2));
};
var htmlHelper_tools_AnimateTimer = function() { };
htmlHelper_tools_AnimateTimer.__name__ = true;
htmlHelper_tools_AnimateTimer.create = function() {
	if(htmlHelper_tools_AnimateTimer.s != null) {
		return;
	}
	htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
	htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
	window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
	htmlHelper_tools_AnimateTimer.loop(60.0);
};
htmlHelper_tools_AnimateTimer.loop = function(tim) {
	window.requestAnimationFrame(htmlHelper_tools_AnimateTimer.loop);
	if(htmlHelper_tools_AnimateTimer.onFrame != null) {
		htmlHelper_tools_AnimateTimer.onFrame(htmlHelper_tools_AnimateTimer.counter);
	}
	htmlHelper_tools_AnimateTimer.counter++;
	return true;
};
htmlHelper_tools_AnimateTimer.kill = function() {
	if(htmlHelper_tools_AnimateTimer.s == null) {
		return;
	}
	window.document.getElementsByTagName("head")[0].removeChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.onFrame = null;
	htmlHelper_tools_AnimateTimer.s = null;
};
htmlHelper_tools_AnimateTimer.tween = function(t,b,e,d,f) {
	if(t > d) {
		return null;
	}
	return f(t,b,e - b,d);
};
var htmlHelper_tools_ImageLoader = function(imageNames,loaded_) {
	this.images = new haxe_ds_StringMap();
	this.loaded = loaded_;
	this.count = imageNames.length;
	var _g = 0;
	while(_g < imageNames.length) {
		var name = imageNames[_g];
		++_g;
		this.load(name);
	}
};
htmlHelper_tools_ImageLoader.__name__ = true;
htmlHelper_tools_ImageLoader.prototype = {
	load: function(img) {
		var image = window.document.createElement("img");
		var imgStyle = image.style;
		imgStyle.left = "0px";
		imgStyle.top = "0px";
		imgStyle.paddingLeft = "0px";
		imgStyle.paddingTop = "0px";
		var f = $bind(this,this.store);
		var a1 = image;
		var a2 = img.split("/").pop();
		image.onload = function(e) {
			f(a1,a2,e);
		};
		imgStyle.position = "absolute";
		image.src = img;
	}
	,store: function(image,name,e) {
		this.count--;
		console.log("store " + name + " " + this.count);
		var _this = this.images;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,image);
		} else {
			_this.h[name] = image;
		}
		if(this.count == 0) {
			this.loaded();
		}
	}
	,__class__: htmlHelper_tools_ImageLoader
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
htmlHelper_tools_AnimateTimer.counter = 0;
js_Boot.__toStr = ({ }).toString;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=canvasImageTriangle.js.map