// Generated by Haxe 3.4.0 (git build development @ 4a40be3)
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
var Main = function(surface_) {
	this.allowSpin = false;
	this.height = 768.;
	this.width = 1024.;
	this.last_spin_time = 0.;
	this.zoom_out_pressed = false;
	this.zoom_in_pressed = false;
	this.target_distance = 2.;
	this.horizontal_fov_radians = Math.PI / 2;
	this.mouse_is_down = false;
	this.mouse_grab_point = null;
	this.mouse_y = 0.;
	this.mouse_x = 0.;
	this.timer_id = null;
	this.proj_mat = null;
	this.camera_mat = null;
	this.object_mat = null;
	this.temp_mat2 = null;
	this.temp_mat1 = null;
	this.temp_mat0 = null;
	this.c3d = null;
	this.canvas_elem = null;
	this.dl = null;
	this.picture = "nyt_nov5.jpg";
	this.surface = surface_;
	var this1 = { x : 2.6, y : 2.6, z : 0};
	this.object_omega = this1;
	this.options = { draw_backfaces : true, whiteout_alpha : 1, wireframe : false, subdivide_factor : 10.0, nonadaptive_depth : 0};
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = 1;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = 1;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = 1;
	a.e14 = 0;
	this.temp_mat0 = a;
	var a1 = new canvasImageTriangle_AffineMatrix();
	a1.e0 = 1;
	a1.e4 = 0;
	a1.e8 = 0;
	a1.e12 = 0;
	a1.e1 = 0;
	a1.e5 = 1;
	a1.e9 = 0;
	a1.e13 = 0;
	a1.e2 = 0;
	a1.e6 = 0;
	a1.e10 = 1;
	a1.e14 = 0;
	this.temp_mat1 = a1;
	var a2 = new canvasImageTriangle_AffineMatrix();
	a2.e0 = 1;
	a2.e4 = 0;
	a2.e8 = 0;
	a2.e12 = 0;
	a2.e1 = 0;
	a2.e5 = 1;
	a2.e9 = 0;
	a2.e13 = 0;
	a2.e2 = 0;
	a2.e6 = 0;
	a2.e10 = 1;
	a2.e14 = 0;
	this.temp_mat2 = a2;
	var half_width = this.width / 2;
	var half_height = this.height / 2;
	var tan_half = Math.tan(this.horizontal_fov_radians / 2);
	var scale = half_width / tan_half;
	var a3 = new canvasImageTriangle_AffineMatrix();
	a3.e0 = scale;
	a3.e4 = 0;
	a3.e8 = -scale;
	a3.e12 = 0;
	a3.e1 = 0;
	a3.e5 = -scale;
	a3.e9 = -half_height / tan_half;
	a3.e13 = 0;
	a3.e2 = 0;
	a3.e6 = 0;
	a3.e10 = -1;
	a3.e14 = 0;
	this.proj_mat = a3;
	var this2 = { x : 0., y : 0., z : 0.};
	var pos = this2;
	var this3 = { x : 1., y : 0., z : 0.};
	var dir = this3;
	var this4 = { x : 0., y : 1., z : 0.};
	var up = this4;
	var this5 = { x : dir.y * up.z - dir.z * up.y, y : dir.z * up.x - dir.x * up.z, z : dir.x * up.y - dir.y * up.x};
	var right = this5;
	var a4 = new canvasImageTriangle_AffineMatrix();
	a4.e0 = dir.x;
	a4.e4 = up.x;
	a4.e8 = right.x;
	a4.e12 = pos.x;
	a4.e1 = dir.y;
	a4.e5 = up.y;
	a4.e9 = right.y;
	a4.e13 = pos.y;
	a4.e2 = dir.z;
	a4.e6 = up.z;
	a4.e10 = right.z;
	a4.e14 = pos.z;
	this.object_mat = a4;
	var this6 = { x : 0., y : 0., z : 0.2 + this.target_distance};
	var pos1 = this6;
	var this7 = { x : 0., y : 0., z : -1.};
	var dir1 = this7;
	var this8 = { x : 0., y : 1., z : 0.};
	var up1 = this8;
	var this9 = { x : dir1.y * up1.z - dir1.z * up1.y, y : dir1.z * up1.x - dir1.x * up1.z, z : dir1.x * up1.y - dir1.y * up1.x};
	var right1 = this9;
	var a5 = new canvasImageTriangle_AffineMatrix();
	a5.e0 = dir1.x;
	a5.e4 = up1.x;
	a5.e8 = right1.x;
	a5.e12 = pos1.x;
	a5.e1 = dir1.y;
	a5.e5 = up1.y;
	a5.e9 = right1.y;
	a5.e13 = pos1.y;
	a5.e2 = dir1.z;
	a5.e6 = up1.z;
	a5.e10 = right1.z;
	a5.e14 = pos1.z;
	this.camera_mat = a5;
	this.contextHandler = new canvasImageTriangle_ContextHandler(this.surface);
	this.loader = new htmlHelper_tools_ImageLoader([this.picture],$bind(this,this.onLoaded));
};
Main.__name__ = true;
Main.main = function() {
	var this1;
	var canvas = window.document.createElement("canvas");
	var dom = canvas;
	var style = dom.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = "0px";
	style.top = "0px";
	style.position = "absolute";
	this1 = canvas;
	Main.canvas = this1;
	Main.canvas.width = 1024;
	Main.canvas.height = 768;
	window.document.body.appendChild(Main.canvas);
	var this2 = Main.canvas.getContext("2d",null);
	new Main(this2);
};
Main.prototype = {
	onLoaded: function() {
		var images = this.loader.images;
		var key = this.picture;
		this.image = __map_reserved[key] != null ? images.getReserved(key) : images.h[key];
		this.perspectiveTri = new canvasImageTriangle_PerspectiveTri(this.surface,this.image,this.options);
		this.animate();
		window.document.onkeydown = $bind(this,this.keyDown);
		window.document.onkeyup = $bind(this,this.keyUp);
		window.document.onmousemove = $bind(this,this.mousemove);
		window.document.onmousedown = $bind(this,this.mousedown);
		window.document.onmouseup = $bind(this,this.mouseup);
	}
	,animate: function() {
		htmlHelper_tools_AnimateTimer.onFrame = $bind(this,this.render);
		if(htmlHelper_tools_AnimateTimer.s == null) {
			htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
			htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
			window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
			htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
			htmlHelper_tools_AnimateTimer.loop(60.0);
		}
	}
	,render: function(count) {
		if(this.allowSpin) {
			this.spin();
		}
	}
	,getTime: function() {
		return new Date().getTime();
	}
	,draw: function() {
		var trans_prime_z;
		var trans_prime_y;
		var trans_prime_x;
		var p_z;
		var p_y;
		var p_x;
		this.surface.globalAlpha = this.options.whiteout_alpha;
		this.surface.fillStyle = "#FFFFFF";
		this.surface.fillRect(0,0,this.width,this.height);
		this.surface.globalAlpha = 1;
		var orient = this.camera_mat;
		var e8_ = -orient.e0;
		var e9_ = -orient.e1;
		var e10_ = -orient.e2;
		var a = new canvasImageTriangle_AffineMatrix();
		a.e0 = orient.e8;
		a.e4 = orient.e4;
		a.e8 = e8_;
		a.e12 = orient.e12;
		a.e1 = orient.e9;
		a.e5 = orient.e5;
		a.e9 = e9_;
		a.e13 = orient.e13;
		a.e2 = orient.e10;
		a.e6 = orient.e6;
		a.e10 = e10_;
		a.e14 = orient.e14;
		var e1_ = a.e4;
		var e2_ = a.e8;
		var e6_ = a.e9;
		var a1 = new canvasImageTriangle_AffineMatrix();
		a1.e0 = a.e0;
		a1.e4 = a.e1;
		a1.e8 = a.e2;
		a1.e12 = 0;
		a1.e1 = e1_;
		a1.e5 = a.e5;
		a1.e9 = a.e6;
		a1.e13 = 0;
		a1.e2 = e2_;
		a1.e6 = e6_;
		a1.e10 = a.e10;
		a1.e14 = 0;
		p_x = a.e12;
		p_y = a.e13;
		p_z = a.e14;
		trans_prime_x = a1.e0 * p_x + a1.e4 * p_y + a1.e8 * p_z + a1.e12;
		trans_prime_y = a1.e1 * p_x + a1.e5 * p_y + a1.e9 * p_z + a1.e13;
		trans_prime_z = a1.e2 * p_x + a1.e6 * p_y + a1.e10 * p_z + a1.e14;
		a1.e12 = -trans_prime_x;
		a1.e13 = -trans_prime_y;
		a1.e14 = -trans_prime_z;
		var a2 = this.proj_mat;
		var out = this.temp_mat0;
		var a0 = a2.e0;
		var a11 = a2.e1;
		var a21 = a2.e2;
		var a4 = a2.e4;
		var a5 = a2.e5;
		var a6 = a2.e6;
		var a8 = a2.e8;
		var a9 = a2.e9;
		var a10 = a2.e10;
		var a12 = a2.e12;
		var a13 = a2.e13;
		var a14 = a2.e14;
		var b0 = a1.e0;
		var b1 = a1.e1;
		var b2 = a1.e2;
		var b4 = a1.e4;
		var b5 = a1.e5;
		var b6 = a1.e6;
		var b8 = a1.e8;
		var b9 = a1.e9;
		var b10 = a1.e10;
		var b12 = a1.e12;
		var b13 = a1.e13;
		var b14 = a1.e14;
		out.e0 = a0 * b0 + a4 * b1 + a8 * b2;
		out.e4 = a0 * b4 + a4 * b5 + a8 * b6;
		out.e8 = a0 * b8 + a4 * b9 + a8 * b10;
		out.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
		out.e1 = a11 * b0 + a5 * b1 + a9 * b2;
		out.e5 = a11 * b4 + a5 * b5 + a9 * b6;
		out.e9 = a11 * b8 + a5 * b9 + a9 * b10;
		out.e13 = a11 * b12 + a5 * b13 + a9 * b14 + a13;
		out.e2 = a21 * b0 + a6 * b1 + a10 * b2;
		out.e6 = a21 * b4 + a6 * b5 + a10 * b6;
		out.e10 = a21 * b8 + a6 * b9 + a10 * b10;
		out.e14 = a21 * b12 + a6 * b13 + a10 * b14 + a14;
		var a3 = this.temp_mat0;
		var b = this.object_mat;
		var out1 = this.temp_mat1;
		var a01 = a3.e0;
		var a15 = a3.e1;
		var a22 = a3.e2;
		var a41 = a3.e4;
		var a51 = a3.e5;
		var a61 = a3.e6;
		var a81 = a3.e8;
		var a91 = a3.e9;
		var a101 = a3.e10;
		var a121 = a3.e12;
		var a131 = a3.e13;
		var a141 = a3.e14;
		var b01 = b.e0;
		var b11 = b.e1;
		var b21 = b.e2;
		var b41 = b.e4;
		var b51 = b.e5;
		var b61 = b.e6;
		var b81 = b.e8;
		var b91 = b.e9;
		var b101 = b.e10;
		var b121 = b.e12;
		var b131 = b.e13;
		var b141 = b.e14;
		out1.e0 = a01 * b01 + a41 * b11 + a81 * b21;
		out1.e4 = a01 * b41 + a41 * b51 + a81 * b61;
		out1.e8 = a01 * b81 + a41 * b91 + a81 * b101;
		out1.e12 = a01 * b121 + a41 * b131 + a81 * b141 + a121;
		out1.e1 = a15 * b01 + a51 * b11 + a91 * b21;
		out1.e5 = a15 * b41 + a51 * b51 + a91 * b61;
		out1.e9 = a15 * b81 + a51 * b91 + a91 * b101;
		out1.e13 = a15 * b121 + a51 * b131 + a91 * b141 + a131;
		out1.e2 = a22 * b01 + a61 * b11 + a101 * b21;
		out1.e6 = a22 * b41 + a61 * b51 + a101 * b61;
		out1.e10 = a22 * b81 + a61 * b91 + a101 * b101;
		out1.e14 = a22 * b121 + a61 * b131 + a101 * b141 + a141;
		this.contextHandler.setTransform(this.temp_mat1);
		var im_width = this.image.width;
		var im_height = this.image.height;
		var verts = [{ x : -1, y : -1, z : 0, u : 0, v : 0},{ x : 1, y : -1, z : 0, u : im_width, v : 0},{ x : 1, y : 1, z : 0, u : im_width, v : im_height},{ x : -1, y : 1, z : 0, u : 0, v : im_height}];
		var tverts = [];
		var _g1 = 0;
		var _g = verts.length;
		while(_g1 < _g) {
			var i = _g1++;
			var v = verts[i];
			var this1 = { x : v.x, y : v.y, z : v.z};
			var p = this1;
			var t = this.contextHandler.transform;
			p = { x : t.e0 * p.x + t.e4 * p.y + t.e8 * p.z + t.e12, y : t.e1 * p.x + t.e5 * p.y + t.e9 * p.z + t.e13, z : t.e2 * p.x + t.e6 * p.y + t.e10 * p.z + t.e14};
			tverts.push({ x : p.x, y : p.y, z : p.z, u : verts[i].u, v : verts[i].v});
		}
		this.perspectiveTri.render(tverts,this.width,this.height);
	}
	,rotateObject: function(scaled_axis) {
		var angle = Math.asin(Math.sqrt(scaled_axis.x * scaled_axis.x + scaled_axis.y * scaled_axis.y + scaled_axis.z * scaled_axis.z));
		if(angle > Math.PI / 8) {
			angle = Math.PI / 8;
		}
		var l2 = scaled_axis.x * scaled_axis.x + scaled_axis.y * scaled_axis.y + scaled_axis.z * scaled_axis.z;
		var axis;
		if(l2 <= 0) {
			var this1 = { x : 1., y : 0., z : 0.};
			axis = this1;
		} else {
			var scale = 1 / Math.sqrt(l2);
			var this2 = { x : scaled_axis.x * scale, y : scaled_axis.y * scale, z : scaled_axis.z * scale};
			axis = this2;
		}
		var c = Math.cos(angle);
		var s = Math.sin(angle);
		var C = 1 - c;
		var xs = axis.x * s;
		var ys = axis.y * s;
		var zs = axis.z * s;
		var xC = axis.x * C;
		var yC = axis.y * C;
		var zC = axis.z * C;
		var xyC = axis.x * yC;
		var yzC = axis.y * zC;
		var zxC = axis.z * xC;
		var a = new canvasImageTriangle_AffineMatrix();
		a.e0 = axis.x * xC + c;
		a.e4 = xyC - zs;
		a.e8 = zxC + ys;
		a.e12 = 0;
		a.e1 = xyC + zs;
		a.e5 = axis.y * yC + c;
		a.e9 = yzC - xs;
		a.e13 = 0;
		a.e2 = zxC - ys;
		a.e6 = yzC + xs;
		a.e10 = axis.z * zC + c;
		a.e14 = 0;
		var b = this.object_mat;
		var a0 = a.e0;
		var a1 = a.e1;
		var a2 = a.e2;
		var a4 = a.e4;
		var a5 = a.e5;
		var a6 = a.e6;
		var a8 = a.e8;
		var a9 = a.e9;
		var a10 = a.e10;
		var a12 = a.e12;
		var a13 = a.e13;
		var a14 = a.e14;
		var b0 = b.e0;
		var b1 = b.e1;
		var b2 = b.e2;
		var b4 = b.e4;
		var b5 = b.e5;
		var b6 = b.e6;
		var b8 = b.e8;
		var b9 = b.e9;
		var b10 = b.e10;
		var b12 = b.e12;
		var b13 = b.e13;
		var b14 = b.e14;
		var a3 = new canvasImageTriangle_AffineMatrix();
		a3.e0 = a0 * b0 + a4 * b1 + a8 * b2;
		a3.e4 = a0 * b4 + a4 * b5 + a8 * b6;
		a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
		a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
		a3.e1 = a1 * b0 + a5 * b1 + a9 * b2;
		a3.e5 = a1 * b4 + a5 * b5 + a9 * b6;
		a3.e9 = a1 * b8 + a5 * b9 + a9 * b10;
		a3.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
		a3.e2 = a2 * b0 + a6 * b1 + a10 * b2;
		a3.e6 = a2 * b4 + a6 * b5 + a10 * b6;
		a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
		a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
		this.object_mat = a3;
		var a7 = this.object_mat;
		var this3 = { x : a7.e0, y : a7.e1, z : a7.e2};
		var v = this3;
		var l21 = v.x * v.x + v.y * v.y + v.z * v.z;
		var new_x;
		if(l21 <= 0) {
			var this4 = { x : 1., y : 0., z : 0.};
			new_x = this4;
		} else {
			var scale1 = 1 / Math.sqrt(l21);
			var this5 = { x : v.x * scale1, y : v.y * scale1, z : v.z * scale1};
			new_x = this5;
		}
		var this6 = { x : a7.e4, y : a7.e5, z : a7.e6};
		var b3 = this6;
		var this7 = { x : new_x.y * b3.z - new_x.z * b3.y, y : new_x.z * b3.x - new_x.x * b3.z, z : new_x.x * b3.y - new_x.y * b3.x};
		var v1 = this7;
		var l22 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
		var new_z;
		if(l22 <= 0) {
			var this8 = { x : 1., y : 0., z : 0.};
			new_z = this8;
		} else {
			var scale2 = 1 / Math.sqrt(l22);
			var this9 = { x : v1.x * scale2, y : v1.y * scale2, z : v1.z * scale2};
			new_z = this9;
		}
		var this10 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
		var new_y = this10;
		a7.e0 = new_x.x;
		a7.e1 = new_x.y;
		a7.e2 = new_x.z;
		a7.e4 = new_y.x;
		a7.e5 = new_y.y;
		a7.e6 = new_y.z;
		a7.e8 = new_z.x;
		a7.e9 = new_z.y;
		a7.e10 = new_z.z;
	}
	,spin: function() {
		var orig_grab_point_z;
		var orig_grab_point_y;
		var orig_grab_point_x;
		var t_now = this.getTime();
		var dt = t_now - this.last_spin_time;
		this.last_spin_time = t_now;
		if(dt > 100) {
			dt = 100;
		}
		if(dt < 1) {
			dt = 1;
		}
		if(this.zoom_in_pressed) {
			this.target_distance -= 2.0 * dt / 1000;
		}
		if(this.zoom_out_pressed) {
			this.target_distance += 2.0 * dt / 1000;
		}
		if(this.target_distance < 0) {
			this.target_distance = 0.;
		}
		this.camera_mat.e14 = 0.2 + this.target_distance;
		if(this.mouse_is_down) {
			var new_grab_point = this.screenToSpherePt(this.mouse_x,this.mouse_y);
			if(this.mouse_grab_point == null && new_grab_point != null) {
				var t = this.object_mat;
				this.mouse_grab_point = { x : t.e0 * new_grab_point.x + t.e1 * new_grab_point.y + t.e2 * new_grab_point.z, y : t.e4 * new_grab_point.x + t.e5 * new_grab_point.y + t.e6 * new_grab_point.z, z : t.e8 * new_grab_point.x + t.e9 * new_grab_point.y + t.e10 * new_grab_point.z};
			}
			if(this.mouse_grab_point != null && new_grab_point != null) {
				var t1 = this.object_mat;
				var p = this.mouse_grab_point;
				orig_grab_point_x = t1.e0 * p.x + t1.e4 * p.y + t1.e8 * p.z;
				orig_grab_point_y = t1.e1 * p.x + t1.e5 * p.y + t1.e9 * p.z;
				orig_grab_point_z = t1.e2 * p.x + t1.e6 * p.y + t1.e10 * p.z;
				var this1 = { x : orig_grab_point_y * new_grab_point.z - orig_grab_point_z * new_grab_point.y, y : orig_grab_point_z * new_grab_point.x - orig_grab_point_x * new_grab_point.z, z : orig_grab_point_x * new_grab_point.y - orig_grab_point_y * new_grab_point.x};
				var axis = this1;
				var this2 = { x : axis.x * 0.95, y : axis.y * 0.95, z : axis.z * 0.95};
				axis = this2;
				this.rotateObject(axis);
				var s = 1000 / dt;
				var this3 = { x : axis.x * s, y : axis.y * s, z : axis.z * s};
				this.object_omega = this3;
			}
		} else {
			this.mouse_grab_point = null;
			var v = this.object_omega;
			var this4 = { x : v.x * 0.95, y : v.y * 0.95, z : v.z * 0.95};
			this.object_omega = this4;
			var tmp;
			var tmp1;
			var a = this.object_omega;
			var b = this.object_omega;
			if(a.x * b.x + a.y * b.y + a.z * b.z < 0.000000001) {
				tmp1 = this.zoom_in_pressed == false;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				tmp = this.zoom_out_pressed == false;
			} else {
				tmp = false;
			}
			if(tmp) {
				var this5 = { x : 0, y : 0, z : 0};
				this.object_omega = this5;
				this.stop_spinning();
				this.draw();
				return;
			}
			var v1 = this.object_omega;
			var s1 = dt / 1000;
			var this6 = { x : v1.x * s1, y : v1.y * s1, z : v1.z * s1};
			var axis1 = this6;
			this.rotateObject(axis1);
		}
		this.draw();
	}
	,rayVsUnitSphereClosestPoint: function(p,r) {
		var p_len2 = p.x * p.x + p.y * p.y + p.z * p.z;
		if(p_len2 < 1) {
			return null;
		}
		var along_ray = -(p.x * r.x + p.y * r.y + p.z * r.z);
		if(along_ray < 0) {
			return null;
		}
		var this1 = { x : r.x * along_ray, y : r.y * along_ray, z : r.z * along_ray};
		var b = this1;
		var this2 = { x : p.x + b.x, y : p.y + b.y, z : p.z + b.z};
		var perp = this2;
		var perp_len2 = perp.x * perp.x + perp.y * perp.y + perp.z * perp.z;
		if(perp_len2 >= 0.999999) {
			var l2 = perp.x * perp.x + perp.y * perp.y + perp.z * perp.z;
			if(l2 <= 0) {
				var this3 = { x : 1., y : 0., z : 0.};
				return this3;
			} else {
				var scale = 1 / Math.sqrt(l2);
				var this4 = { x : perp.x * scale, y : perp.y * scale, z : perp.z * scale};
				return this4;
			}
		}
		var e = Math.sqrt(1 - (perp.x * perp.x + perp.y * perp.y + perp.z * perp.z));
		var s = along_ray - e;
		var this5 = { x : r.x * s, y : r.y * s, z : r.z * s};
		var b1 = this5;
		var this6 = { x : p.x + b1.x, y : p.y + b1.y, z : p.z + b1.z};
		var hit = this6;
		var l21 = hit.x * hit.x + hit.y * hit.y + hit.z * hit.z;
		if(l21 <= 0) {
			var this7 = { x : 1., y : 0., z : 0.};
			return this7;
		} else {
			var scale1 = 1 / Math.sqrt(l21);
			var this8 = { x : hit.x * scale1, y : hit.y * scale1, z : hit.z * scale1};
			return this8;
		}
	}
	,screenToSpherePt: function(x,y) {
		var this1 = { x : this.camera_mat.e12, y : this.camera_mat.e13, z : this.camera_mat.e14 + 1};
		var p = this1;
		var this2 = { x : this.camera_mat.e0, y : this.camera_mat.e1, z : this.camera_mat.e2};
		var r = this2;
		var this3 = { x : this.camera_mat.e4, y : this.camera_mat.e5, z : this.camera_mat.e6};
		var up = this3;
		var this4 = { x : this.camera_mat.e8, y : this.camera_mat.e9, z : this.camera_mat.e10};
		var right = this4;
		var tan_half = Math.tan(this.horizontal_fov_radians / 2);
		var s = x * tan_half;
		var this5 = { x : right.x * s, y : right.y * s, z : right.z * s};
		var b = this5;
		var this6 = { x : r.x + b.x, y : r.y + b.y, z : r.z + b.z};
		r = this6;
		var s1 = y * tan_half;
		var this7 = { x : up.x * s1, y : up.y * s1, z : up.z * s1};
		var b1 = this7;
		var this8 = { x : r.x + b1.x, y : r.y + b1.y, z : r.z + b1.z};
		r = this8;
		var l2 = r.x * r.x + r.y * r.y + r.z * r.z;
		if(l2 <= 0) {
			var this9 = { x : 1., y : 0., z : 0.};
			r = this9;
		} else {
			var scale = 1 / Math.sqrt(l2);
			var this10 = { x : r.x * scale, y : r.y * scale, z : r.z * scale};
			r = this10;
		}
		return this.rayVsUnitSphereClosestPoint(p,r);
	}
	,rememberMousePos: function(e) {
		var width_ = this.width;
		var height_ = this.height;
		var element = js_Boot.__cast(Main.canvas , HTMLElement);
		this.mouse_x = (e.clientX - element.offsetLeft) / width_ * 2 - 1;
		this.mouse_y = -((e.clientY - element.offsetTop - height_ / 2) / (width_ / 2));
	}
	,mousedown: function(e) {
		this.mouse_is_down = true;
		this.rememberMousePos(e);
		this.start_spinning();
	}
	,mouseup: function(e) {
		this.mouse_is_down = false;
	}
	,mousemove: function(e) {
		this.rememberMousePos(e);
		if(this.mouse_is_down) {
			this.start_spinning();
		}
	}
	,keyDown: function(e) {
		e.preventDefault();
		var keyCode = e.keyCode;
		switch(keyCode) {
		case 65:
			this.zoom_in_pressed = true;
			this.start_spinning();
			break;
		case 87:
			this.options.wireframe = !this.options.wireframe;
			this.start_spinning();
			break;
		case 90:
			this.zoom_out_pressed = true;
			this.start_spinning();
			break;
		default:
		}
	}
	,keyUp: function(e) {
		e.preventDefault();
		var keyCode = e.keyCode;
		switch(keyCode) {
		case 65:
			this.zoom_in_pressed = false;
			break;
		case 90:
			this.zoom_out_pressed = false;
			break;
		default:
		}
	}
	,start_spinning: function() {
		this.allowSpin = true;
	}
	,stop_spinning: function() {
		this.allowSpin = false;
	}
	,__class__: Main
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var canvasImageTriangle_AffineMatrix = function() {
	this.e14 = 0;
	this.e10 = 1;
	this.e6 = 0;
	this.e2 = 0;
	this.e13 = 0;
	this.e9 = 0;
	this.e5 = 1;
	this.e1 = 0;
	this.e12 = 0;
	this.e8 = 0;
	this.e4 = 0;
	this.e0 = 1;
};
canvasImageTriangle_AffineMatrix.__name__ = true;
canvasImageTriangle_AffineMatrix.matrix = function(e0_,e4_,e8_,e12_,e1_,e5_,e9_,e13_,e2_,e6_,e10_,e14_) {
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = e0_;
	a.e4 = e4_;
	a.e8 = e8_;
	a.e12 = e12_;
	a.e1 = e1_;
	a.e5 = e5_;
	a.e9 = e9_;
	a.e13 = e13_;
	a.e2 = e2_;
	a.e6 = e6_;
	a.e10 = e10_;
	a.e14 = e14_;
	return a;
};
canvasImageTriangle_AffineMatrix.setAffineMatrix = function(out,e0,e4,e8,e12,e1,e5,e9,e13,e2,e6,e10,e14) {
	out.e0 = e0;
	out.e4 = e4;
	out.e8 = e8;
	out.e12 = e12;
	out.e1 = e1;
	out.e5 = e5;
	out.e9 = e9;
	out.e13 = e13;
	out.e2 = e2;
	out.e6 = e6;
	out.e10 = e10;
	out.e14 = e14;
};
canvasImageTriangle_AffineMatrix.copyAffineMatrix = function(dest,src) {
	dest.e0 = src.e0;
	dest.e4 = src.e4;
	dest.e8 = src.e8;
	dest.e12 = src.e12;
	dest.e1 = src.e1;
	dest.e5 = src.e5;
	dest.e9 = src.e9;
	dest.e13 = src.e13;
	dest.e2 = src.e2;
	dest.e6 = src.e6;
	dest.e10 = src.e10;
	dest.e14 = src.e14;
};
canvasImageTriangle_AffineMatrix.transformPoint = function(t,p) {
	return { x : t.e0 * p.x + t.e4 * p.y + t.e8 * p.z + t.e12, y : t.e1 * p.x + t.e5 * p.y + t.e9 * p.z + t.e13, z : t.e2 * p.x + t.e6 * p.y + t.e10 * p.z + t.e14};
};
canvasImageTriangle_AffineMatrix.transformPointTo = function(t,p,out) {
	out.x = t.e0 * p.x + t.e4 * p.y + t.e8 * p.z + t.e12;
	out.y = t.e1 * p.x + t.e5 * p.y + t.e9 * p.z + t.e13;
	out.z = t.e2 * p.x + t.e6 * p.y + t.e10 * p.z + t.e14;
};
canvasImageTriangle_AffineMatrix.applyRotation = function(t,p) {
	return { x : t.e0 * p.x + t.e4 * p.y + t.e8 * p.z, y : t.e1 * p.x + t.e5 * p.y + t.e9 * p.z, z : t.e2 * p.x + t.e6 * p.y + t.e10 * p.z};
};
canvasImageTriangle_AffineMatrix.applyInverseRotation = function(t,p) {
	return { x : t.e0 * p.x + t.e1 * p.y + t.e2 * p.z, y : t.e4 * p.x + t.e5 * p.y + t.e6 * p.z, z : t.e8 * p.x + t.e9 * p.y + t.e10 * p.z};
};
canvasImageTriangle_AffineMatrix.multiplyAffine = function(a,b) {
	var a0 = a.e0;
	var a1 = a.e1;
	var a2 = a.e2;
	var a4 = a.e4;
	var a5 = a.e5;
	var a6 = a.e6;
	var a8 = a.e8;
	var a9 = a.e9;
	var a10 = a.e10;
	var a12 = a.e12;
	var a13 = a.e13;
	var a14 = a.e14;
	var b0 = b.e0;
	var b1 = b.e1;
	var b2 = b.e2;
	var b4 = b.e4;
	var b5 = b.e5;
	var b6 = b.e6;
	var b8 = b.e8;
	var b9 = b.e9;
	var b10 = b.e10;
	var b12 = b.e12;
	var b13 = b.e13;
	var b14 = b.e14;
	var a3 = new canvasImageTriangle_AffineMatrix();
	a3.e0 = a0 * b0 + a4 * b1 + a8 * b2;
	a3.e4 = a0 * b4 + a4 * b5 + a8 * b6;
	a3.e8 = a0 * b8 + a4 * b9 + a8 * b10;
	a3.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
	a3.e1 = a1 * b0 + a5 * b1 + a9 * b2;
	a3.e5 = a1 * b4 + a5 * b5 + a9 * b6;
	a3.e9 = a1 * b8 + a5 * b9 + a9 * b10;
	a3.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
	a3.e2 = a2 * b0 + a6 * b1 + a10 * b2;
	a3.e6 = a2 * b4 + a6 * b5 + a10 * b6;
	a3.e10 = a2 * b8 + a6 * b9 + a10 * b10;
	a3.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
	return a3;
};
canvasImageTriangle_AffineMatrix.multiplyAffineTo = function(a,b,out) {
	var a0 = a.e0;
	var a1 = a.e1;
	var a2 = a.e2;
	var a4 = a.e4;
	var a5 = a.e5;
	var a6 = a.e6;
	var a8 = a.e8;
	var a9 = a.e9;
	var a10 = a.e10;
	var a12 = a.e12;
	var a13 = a.e13;
	var a14 = a.e14;
	var b0 = b.e0;
	var b1 = b.e1;
	var b2 = b.e2;
	var b4 = b.e4;
	var b5 = b.e5;
	var b6 = b.e6;
	var b8 = b.e8;
	var b9 = b.e9;
	var b10 = b.e10;
	var b12 = b.e12;
	var b13 = b.e13;
	var b14 = b.e14;
	out.e0 = a0 * b0 + a4 * b1 + a8 * b2;
	out.e4 = a0 * b4 + a4 * b5 + a8 * b6;
	out.e8 = a0 * b8 + a4 * b9 + a8 * b10;
	out.e12 = a0 * b12 + a4 * b13 + a8 * b14 + a12;
	out.e1 = a1 * b0 + a5 * b1 + a9 * b2;
	out.e5 = a1 * b4 + a5 * b5 + a9 * b6;
	out.e9 = a1 * b8 + a5 * b9 + a9 * b10;
	out.e13 = a1 * b12 + a5 * b13 + a9 * b14 + a13;
	out.e2 = a2 * b0 + a6 * b1 + a10 * b2;
	out.e6 = a2 * b4 + a6 * b5 + a10 * b6;
	out.e10 = a2 * b8 + a6 * b9 + a10 * b10;
	out.e14 = a2 * b12 + a6 * b13 + a10 * b14 + a14;
};
canvasImageTriangle_AffineMatrix.makeIdentityAffine = function() {
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = 1;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = 1;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = 1;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAxisAngle = function(axis,angle) {
	var c = Math.cos(angle);
	var s = Math.sin(angle);
	var C = 1 - c;
	var xs = axis.x * s;
	var ys = axis.y * s;
	var zs = axis.z * s;
	var xC = axis.x * C;
	var yC = axis.y * C;
	var zC = axis.z * C;
	var xyC = axis.x * yC;
	var yzC = axis.y * zC;
	var zxC = axis.z * xC;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = axis.x * xC + c;
	a.e4 = xyC - zs;
	a.e8 = zxC + ys;
	a.e12 = 0;
	a.e1 = xyC + zs;
	a.e5 = axis.y * yC + c;
	a.e9 = yzC - xs;
	a.e13 = 0;
	a.e2 = zxC - ys;
	a.e6 = yzC + xs;
	a.e10 = axis.z * zC + c;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineX = function(theta) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = 1;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = c;
	a.e9 = -s;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = s;
	a.e10 = c;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineXTo = function(theta,out) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	out.e0 = 1;
	out.e4 = 0;
	out.e8 = 0;
	out.e12 = 0;
	out.e1 = 0;
	out.e5 = c;
	out.e9 = -s;
	out.e13 = 0;
	out.e2 = 0;
	out.e6 = s;
	out.e10 = c;
	out.e14 = 0;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineY = function(theta) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = c;
	a.e4 = 0;
	a.e8 = s;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = 1;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = -s;
	a.e6 = 0;
	a.e10 = c;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineYTo = function(theta,out) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	out.e0 = c;
	out.e4 = 0;
	out.e8 = s;
	out.e12 = 0;
	out.e1 = 0;
	out.e5 = 1;
	out.e9 = 0;
	out.e13 = 0;
	out.e2 = -s;
	out.e6 = 0;
	out.e10 = c;
	out.e14 = 0;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineZ = function(theta) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = c;
	a.e4 = -s;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = s;
	a.e5 = c;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = 1;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.makeRotateAffineZTo = function(theta,out) {
	var s = Math.sin(theta);
	var c = Math.cos(theta);
	out.e0 = c;
	out.e4 = -s;
	out.e8 = 0;
	out.e12 = 0;
	out.e1 = s;
	out.e5 = c;
	out.e9 = 0;
	out.e13 = 0;
	out.e2 = 0;
	out.e6 = 0;
	out.e10 = 1;
	out.e14 = 0;
};
canvasImageTriangle_AffineMatrix.makeTranslateAffine = function(dx,dy,dz) {
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = 1;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = dx;
	a.e1 = 0;
	a.e5 = 1;
	a.e9 = 0;
	a.e13 = dy;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = 1;
	a.e14 = dz;
	return a;
};
canvasImageTriangle_AffineMatrix.makeScaleAffine = function(sx,sy,sz) {
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = sx;
	a.e4 = 0;
	a.e8 = 0;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = sy;
	a.e9 = 0;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = sz;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.invertNormalizedRotation = function(a) {
	var e1_ = a.e4;
	var e2_ = a.e8;
	var e6_ = a.e9;
	var a1 = new canvasImageTriangle_AffineMatrix();
	a1.e0 = a.e0;
	a1.e4 = a.e1;
	a1.e8 = a.e2;
	a1.e12 = 0;
	a1.e1 = e1_;
	a1.e5 = a.e5;
	a1.e9 = a.e6;
	a1.e13 = 0;
	a1.e2 = e2_;
	a1.e6 = e6_;
	a1.e10 = a.e10;
	a1.e14 = 0;
	return a1;
};
canvasImageTriangle_AffineMatrix.invertNormalized = function(a) {
	var e1_ = a.e4;
	var e2_ = a.e8;
	var e6_ = a.e9;
	var a1 = new canvasImageTriangle_AffineMatrix();
	a1.e0 = a.e0;
	a1.e4 = a.e1;
	a1.e8 = a.e2;
	a1.e12 = 0;
	a1.e1 = e1_;
	a1.e5 = a.e5;
	a1.e9 = a.e6;
	a1.e13 = 0;
	a1.e2 = e2_;
	a1.e6 = e6_;
	a1.e10 = a.e10;
	a1.e14 = 0;
	var p_x = a.e12;
	var p_y = a.e13;
	var p_z = a.e14;
	var trans_prime_x = a1.e0 * p_x + a1.e4 * p_y + a1.e8 * p_z + a1.e12;
	var trans_prime_y = a1.e1 * p_x + a1.e5 * p_y + a1.e9 * p_z + a1.e13;
	var trans_prime_z = a1.e2 * p_x + a1.e6 * p_y + a1.e10 * p_z + a1.e14;
	a1.e12 = -trans_prime_x;
	a1.e13 = -trans_prime_y;
	a1.e14 = -trans_prime_z;
	return a1;
};
canvasImageTriangle_AffineMatrix.orthonormalizeRotation = function(a) {
	var this1 = { x : a.e0, y : a.e1, z : a.e2};
	var v = this1;
	var l2 = v.x * v.x + v.y * v.y + v.z * v.z;
	var new_x;
	if(l2 <= 0) {
		var this2 = { x : 1., y : 0., z : 0.};
		new_x = this2;
	} else {
		var scale = 1 / Math.sqrt(l2);
		var this3 = { x : v.x * scale, y : v.y * scale, z : v.z * scale};
		new_x = this3;
	}
	var this4 = { x : a.e4, y : a.e5, z : a.e6};
	var b = this4;
	var this5 = { x : new_x.y * b.z - new_x.z * b.y, y : new_x.z * b.x - new_x.x * b.z, z : new_x.x * b.y - new_x.y * b.x};
	var v1 = this5;
	var l21 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;
	var new_z;
	if(l21 <= 0) {
		var this6 = { x : 1., y : 0., z : 0.};
		new_z = this6;
	} else {
		var scale1 = 1 / Math.sqrt(l21);
		var this7 = { x : v1.x * scale1, y : v1.y * scale1, z : v1.z * scale1};
		new_z = this7;
	}
	var this8 = { x : new_z.y * new_x.z - new_z.z * new_x.y, y : new_z.z * new_x.x - new_z.x * new_x.z, z : new_z.x * new_x.y - new_z.y * new_x.x};
	var new_y = this8;
	a.e0 = new_x.x;
	a.e1 = new_x.y;
	a.e2 = new_x.z;
	a.e4 = new_y.x;
	a.e5 = new_y.y;
	a.e6 = new_y.z;
	a.e8 = new_z.x;
	a.e9 = new_z.y;
	a.e10 = new_z.z;
};
canvasImageTriangle_AffineMatrix.makeOrientationAffine = function(pos,dir,up) {
	var this1 = { x : dir.y * up.z - dir.z * up.y, y : dir.z * up.x - dir.x * up.z, z : dir.x * up.y - dir.y * up.x};
	var right = this1;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = dir.x;
	a.e4 = up.x;
	a.e8 = right.x;
	a.e12 = pos.x;
	a.e1 = dir.y;
	a.e5 = up.y;
	a.e9 = right.y;
	a.e13 = pos.y;
	a.e2 = dir.z;
	a.e6 = up.z;
	a.e10 = right.z;
	a.e14 = pos.z;
	return a;
};
canvasImageTriangle_AffineMatrix.makeViewFromOrientation = function(orient) {
	var trans_prime_z;
	var trans_prime_y;
	var trans_prime_x;
	var p_z;
	var p_y;
	var p_x;
	var e8_ = -orient.e0;
	var e9_ = -orient.e1;
	var e10_ = -orient.e2;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = orient.e8;
	a.e4 = orient.e4;
	a.e8 = e8_;
	a.e12 = orient.e12;
	a.e1 = orient.e9;
	a.e5 = orient.e5;
	a.e9 = e9_;
	a.e13 = orient.e13;
	a.e2 = orient.e10;
	a.e6 = orient.e6;
	a.e10 = e10_;
	a.e14 = orient.e14;
	var e1_ = a.e4;
	var e2_ = a.e8;
	var e6_ = a.e9;
	var a1 = new canvasImageTriangle_AffineMatrix();
	a1.e0 = a.e0;
	a1.e4 = a.e1;
	a1.e8 = a.e2;
	a1.e12 = 0;
	a1.e1 = e1_;
	a1.e5 = a.e5;
	a1.e9 = a.e6;
	a1.e13 = 0;
	a1.e2 = e2_;
	a1.e6 = e6_;
	a1.e10 = a.e10;
	a1.e14 = 0;
	p_x = a.e12;
	p_y = a.e13;
	p_z = a.e14;
	trans_prime_x = a1.e0 * p_x + a1.e4 * p_y + a1.e8 * p_z + a1.e12;
	trans_prime_y = a1.e1 * p_x + a1.e5 * p_y + a1.e9 * p_z + a1.e13;
	trans_prime_z = a1.e2 * p_x + a1.e6 * p_y + a1.e10 * p_z + a1.e14;
	a1.e12 = -trans_prime_x;
	a1.e13 = -trans_prime_y;
	a1.e14 = -trans_prime_z;
	return a1;
};
canvasImageTriangle_AffineMatrix.makeWindowProjection = function(win_width,win_height,fov_x_radians) {
	var half_width = win_width / 2;
	var half_height = win_height / 2;
	var tan_half = Math.tan(fov_x_radians / 2);
	var scale = half_width / tan_half;
	var a = new canvasImageTriangle_AffineMatrix();
	a.e0 = scale;
	a.e4 = 0;
	a.e8 = -scale;
	a.e12 = 0;
	a.e1 = 0;
	a.e5 = -scale;
	a.e9 = -half_height / tan_half;
	a.e13 = 0;
	a.e2 = 0;
	a.e6 = 0;
	a.e10 = -1;
	a.e14 = 0;
	return a;
};
canvasImageTriangle_AffineMatrix.prototype = {
	__class__: canvasImageTriangle_AffineMatrix
};
var canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$ = {};
canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$.__name__ = true;
canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$._new = function(ctx) {
	return ctx;
};
canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$.drawTriangle = function(this1,im,ax,ay,bx,by,cx,cy,asx,asy,bsx,bsy,csx,csy) {
	this1.save();
	this1.beginPath();
	this1.moveTo(ax,ay);
	this1.lineTo(bx,by);
	this1.lineTo(cx,cy);
	this1.closePath();
	this1.clip();
	var denom = asx * (csy - bsy) - bsx * csy + csx * bsy + (bsx - csx) * asy;
	if(denom != 0) {
		var byMcy = by - cy;
		var cxMbx = cx - bx;
		var bsyMcsy = bsy - csy;
		var bsxMcsx = bsx - csx;
		var m11 = -(asy * cxMbx - bsy * cx + csy * bx + bsyMcsy * ax) / denom;
		var m12 = (bsy * cy + asy * byMcy - csy * by - bsyMcsy * ay) / denom;
		var m21 = (asx * cxMbx - bsx * cx + csx * bx + bsxMcsx * ax) / denom;
		var m22 = -(bsx * cy + asx * byMcy - csx * by - bsxMcsx * ay) / denom;
		var xcbbc = csx * bsy - bsx * csy;
		var bccb = asy * (bsx * cy - csx * by);
		var dx = (asx * (csy * bx - bsy * cx) + bccb + xcbbc * ax) / denom;
		var dy = (asx * (csy * by - bsy * cy) + bccb + xcbbc * ay) / denom;
		this1.transform(m11,m12,m21,m22,dx,dy);
		this1.drawImage(im,0,0);
		this1.restore();
	}
	return;
};
var canvasImageTriangle_ContextHandler = function(ctx_) {
	this.context = ctx_;
	this.transform = new canvasImageTriangle_AffineMatrix();
	this.texture = null;
	this.tempverts = [];
	this.tempVert0 = { x : 0, y : 0, z : 0, u : 0, v : 0};
};
canvasImageTriangle_ContextHandler.__name__ = true;
canvasImageTriangle_ContextHandler.signedArea = function(a,b,c) {
	return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x) > 0;
};
canvasImageTriangle_ContextHandler.prototype = {
	setTransform: function(mat) {
		var dest = this.transform;
		dest.e0 = mat.e0;
		dest.e4 = mat.e4;
		dest.e8 = mat.e8;
		dest.e12 = mat.e12;
		dest.e1 = mat.e1;
		dest.e5 = mat.e5;
		dest.e9 = mat.e9;
		dest.e13 = mat.e13;
		dest.e2 = mat.e2;
		dest.e6 = mat.e6;
		dest.e10 = mat.e10;
		dest.e14 = mat.e14;
	}
	,setTexture: function(tex) {
		this.texture = tex;
	}
	,expandVertexs: function(size) {
		var temps = this.tempverts;
		var expand = size - temps.length;
		var _g1 = 0;
		while(_g1 < expand) {
			var i = _g1++;
			temps[i] = { x : 0, y : 0, z : 0, u : 0, v : 0};
		}
	}
	,drawTris: function(verts,trilist) {
		this.expandVertexs(verts.length);
		var temps = this.tempverts;
		var tx = this.transform;
		var tempv0 = this.tempVert0;
		var n = verts.length;
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			var i = _g1++;
			var p = verts[i];
			tempv0.x = tx.e0 * p.x + tx.e4 * p.y + tx.e8 * p.z + tx.e12;
			tempv0.y = tx.e1 * p.x + tx.e5 * p.y + tx.e9 * p.z + tx.e13;
			tempv0.z = tx.e2 * p.x + tx.e6 * p.y + tx.e10 * p.z + tx.e14;
			var out = temps[i];
			out.z = tempv0.z;
			if(tempv0.z <= 0) {
				out.x = 0;
				out.y = 0;
			} else {
				out.x = tempv0.x / tempv0.z;
				out.y = tempv0.y / tempv0.z;
			}
			temps[i].u = verts[i].u;
			temps[i].v = verts[i].v;
		}
		var tex = this.texture;
		var a;
		var b;
		var c;
		n = trilist.length - 2;
		var i1 = 0;
		while(i1 < n) {
			a = temps[trilist[i1]];
			b = temps[trilist[i1 + 1]];
			c = temps[trilist[i1 + 2]];
			if(a.z <= 0 || b.z <= 0 && c.z <= 0) {
				i1 += 3;
				continue;
			}
			if((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x) > 0) {
				i1 += 3;
				continue;
			}
			canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$.drawTriangle(this.context,tex,a.x,a.y,b.x,b.y,c.x,c.y,a.u,a.v,b.u,b.v,c.u,c.v);
			i1 += 3;
		}
	}
	,__class__: canvasImageTriangle_ContextHandler
};
var canvasImageTriangle_PerspectiveTri = function(surface_,image_,options_) {
	this.draw_wireframe = false;
	this.MIN_Z = 0.05;
	this.surface = surface_;
	this.image = image_;
	this.options = options_;
};
canvasImageTriangle_PerspectiveTri.__name__ = true;
canvasImageTriangle_PerspectiveTri.bisect = function(p,q) {
	var p1 = { x : (p.x + q.x) / 2, y : (p.y + q.y) / 2, z : (p.z + q.z) / 2, u : (p.u + q.u) / 2, v : (p.v + q.v) / 2};
	return p1;
};
canvasImageTriangle_PerspectiveTri.prototype = {
	render: function(tverts,width,height) {
		var depth = this.options.nonadaptive_depth;
		this.draw(tverts[0],tverts[1],tverts[2],depth);
		this.draw(tverts[0],tverts[2],tverts[3],depth);
		if(this.options.wireframe) {
			this.surface.globalAlpha = 0.3;
			this.surface.fillRect(0,0,width,height);
			this.draw_wireframe = true;
			this.surface.globalAlpha = 1;
			this.draw(tverts[0],tverts[1],tverts[2],depth);
			this.draw(tverts[0],tverts[2],tverts[3],depth);
			this.draw_wireframe = false;
		}
	}
	,unclippedSubX: function(a,tv0,b,tv1,c,tv2) {
		this.surface.beginPath();
		this.surface.moveTo(tv0.x,tv0.y);
		this.surface.lineTo(tv1.x,tv1.y);
		this.surface.lineTo(tv2.x,tv2.y);
		this.surface.lineTo(tv0.x,tv0.y);
		this.surface.stroke();
	}
	,unclippedSub: function(a,tv0,b,tv1,c,tv2,depth_count) {
		var edgelen01 = Math.abs(tv0.x - tv1.x) + Math.abs(tv0.y - tv1.y);
		var edgelen12 = Math.abs(tv1.x - tv2.x) + Math.abs(tv1.y - tv2.y);
		var edgelen20 = Math.abs(tv2.x - tv0.x) + Math.abs(tv2.y - tv0.y);
		var zdepth01 = Math.abs(a.z - b.z);
		var zdepth12 = Math.abs(b.z - c.z);
		var zdepth20 = Math.abs(c.z - a.z);
		var factor = this.options.subdivide_factor;
		var subdiv = (edgelen01 * zdepth01 > factor ? 1 : 0) + (edgelen12 * zdepth12 > factor ? 2 : 0) + (edgelen20 * zdepth20 > factor ? 4 : 0);
		if(depth_count != null) {
			--depth_count;
			if(depth_count == null) {
				subdiv = 0;
			} else {
				subdiv = 7;
			}
		}
		if(subdiv == 0) {
			if(this.draw_wireframe) {
				this.surface.beginPath();
				this.surface.moveTo(tv0.x,tv0.y);
				this.surface.lineTo(tv1.x,tv1.y);
				this.surface.lineTo(tv2.x,tv2.y);
				this.surface.lineTo(tv0.x,tv0.y);
				this.surface.stroke();
			} else {
				canvasImageTriangle__$CanvasRenderingContext25D_CanvasRenderingContext25D_$Impl_$.drawTriangle(this.surface,this.image,tv0.x,tv0.y,tv1.x,tv1.y,tv2.x,tv2.y,a.u,a.v,b.u,b.v,c.u,c.v);
			}
			return;
		}
		var p = { x : (a.x + b.x) / 2, y : (a.y + b.y) / 2, z : (a.z + b.z) / 2, u : (a.u + b.u) / 2, v : (a.v + b.v) / 2};
		var tv01;
		if(p.z <= 0) {
			var this1 = { x : 0., y : 0., z : p.z};
			tv01 = this1;
		} else {
			var this2 = { x : p.x / p.z, y : p.y / p.z, z : p.z};
			tv01 = this2;
		}
		var p1 = { x : (b.x + c.x) / 2, y : (b.y + c.y) / 2, z : (b.z + c.z) / 2, u : (b.u + c.u) / 2, v : (b.v + c.v) / 2};
		var tv12;
		if(p1.z <= 0) {
			var this3 = { x : 0., y : 0., z : p1.z};
			tv12 = this3;
		} else {
			var this4 = { x : p1.x / p1.z, y : p1.y / p1.z, z : p1.z};
			tv12 = this4;
		}
		var p2 = { x : (c.x + a.x) / 2, y : (c.y + a.y) / 2, z : (c.z + a.z) / 2, u : (c.u + a.u) / 2, v : (c.v + a.v) / 2};
		var tv20;
		if(p2.z <= 0) {
			var this5 = { x : 0., y : 0., z : p2.z};
			tv20 = this5;
		} else {
			var this6 = { x : p2.x / p2.z, y : p2.y / p2.z, z : p2.z};
			tv20 = this6;
		}
		switch(subdiv) {
		case 1:
			this.unclippedSub(a,tv0,p,tv01,c,tv2);
			this.unclippedSub(p,tv01,b,tv1,c,tv2);
			break;
		case 2:
			this.unclippedSub(a,tv0,b,tv1,p1,tv12);
			this.unclippedSub(a,tv0,p1,tv12,c,tv2);
			break;
		case 3:
			this.unclippedSub(a,tv0,p,tv01,p1,tv12);
			this.unclippedSub(a,tv0,p1,tv12,c,tv2);
			this.unclippedSub(p,tv01,b,tv1,p1,tv12);
			break;
		case 4:
			this.unclippedSub(a,tv0,b,tv1,p2,tv20);
			this.unclippedSub(b,tv1,c,tv2,p2,tv20);
			break;
		case 5:
			this.unclippedSub(a,tv0,p,tv01,p2,tv20);
			this.unclippedSub(b,tv1,c,tv2,p,tv01);
			this.unclippedSub(c,tv2,p2,tv20,p,tv01);
			break;
		case 6:
			this.unclippedSub(a,tv0,b,tv1,p2,tv20);
			this.unclippedSub(b,tv1,p1,tv12,p2,tv20);
			this.unclippedSub(p1,tv12,c,tv2,p2,tv20);
			break;
		default:
			this.unclippedSub(a,tv0,p,tv01,p2,tv20,depth_count);
			this.unclippedSub(b,tv1,p1,tv12,p,tv01,depth_count);
			this.unclippedSub(c,tv2,p2,tv20,p1,tv12,depth_count);
			this.unclippedSub(p,tv01,p1,tv12,p2,tv20,depth_count);
		}
		return;
	}
	,unclipped: function(a,b,c,depth_count) {
		var tv0;
		if(a.z <= 0) {
			var this1 = { x : 0., y : 0., z : a.z};
			tv0 = this1;
		} else {
			var this2 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
			tv0 = this2;
		}
		var tv1;
		if(b.z <= 0) {
			var this3 = { x : 0., y : 0., z : b.z};
			tv1 = this3;
		} else {
			var this4 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
			tv1 = this4;
		}
		var tv2;
		if(c.z <= 0) {
			var this5 = { x : 0., y : 0., z : c.z};
			tv2 = this5;
		} else {
			var this6 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
			tv2 = this6;
		}
		this.unclippedSub(a,tv0,b,tv1,c,tv2,depth_count);
	}
	,clip_line: function(p,q) {
		var f = (this.MIN_Z - p.z) / (q.z - p.z);
		return { x : p.x + (q.x - p.x) * f, y : p.y + (q.y - p.y) * f, z : p.z + (q.z - p.z) * f, u : p.u + (q.u - p.u) * f, v : p.v + (q.v - p.v) * f};
	}
	,conventionalClipping: function(a,b,c) {
		var clip = (a.z < this.MIN_Z ? 1 : 0) + (b.z < this.MIN_Z ? 2 : 0) + (c.z < this.MIN_Z ? 4 : 0);
		if(clip == 7) {
			return;
		}
		if(clip != 0) {
			var ab;
			var bc;
			var ca;
			switch(clip) {
			case 1:
				var f = (this.MIN_Z - a.z) / (b.z - a.z);
				ab = { x : a.x + (b.x - a.x) * f, y : a.y + (b.y - a.y) * f, z : a.z + (b.z - a.z) * f, u : a.u + (b.u - a.u) * f, v : a.v + (b.v - a.v) * f};
				var f1 = (this.MIN_Z - a.z) / (c.z - a.z);
				ca = { x : a.x + (c.x - a.x) * f1, y : a.y + (c.y - a.y) * f1, z : a.z + (c.z - a.z) * f1, u : a.u + (c.u - a.u) * f1, v : a.v + (c.v - a.v) * f1};
				var tv0;
				if(ab.z <= 0) {
					var this1 = { x : 0., y : 0., z : ab.z};
					tv0 = this1;
				} else {
					var this2 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv0 = this2;
				}
				var tv1;
				if(b.z <= 0) {
					var this3 = { x : 0., y : 0., z : b.z};
					tv1 = this3;
				} else {
					var this4 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
					tv1 = this4;
				}
				var tv2;
				if(c.z <= 0) {
					var this5 = { x : 0., y : 0., z : c.z};
					tv2 = this5;
				} else {
					var this6 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
					tv2 = this6;
				}
				this.unclippedSub(ab,tv0,b,tv1,c,tv2,null);
				var tv01;
				if(ab.z <= 0) {
					var this7 = { x : 0., y : 0., z : ab.z};
					tv01 = this7;
				} else {
					var this8 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv01 = this8;
				}
				var tv11;
				if(c.z <= 0) {
					var this9 = { x : 0., y : 0., z : c.z};
					tv11 = this9;
				} else {
					var this10 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
					tv11 = this10;
				}
				var tv21;
				if(ca.z <= 0) {
					var this11 = { x : 0., y : 0., z : ca.z};
					tv21 = this11;
				} else {
					var this12 = { x : ca.x / ca.z, y : ca.y / ca.z, z : ca.z};
					tv21 = this12;
				}
				this.unclippedSub(ab,tv01,c,tv11,ca,tv21,null);
				break;
			case 2:
				var f2 = (this.MIN_Z - b.z) / (a.z - b.z);
				ab = { x : b.x + (a.x - b.x) * f2, y : b.y + (a.y - b.y) * f2, z : b.z + (a.z - b.z) * f2, u : b.u + (a.u - b.u) * f2, v : b.v + (a.v - b.v) * f2};
				var f3 = (this.MIN_Z - b.z) / (c.z - b.z);
				bc = { x : b.x + (c.x - b.x) * f3, y : b.y + (c.y - b.y) * f3, z : b.z + (c.z - b.z) * f3, u : b.u + (c.u - b.u) * f3, v : b.v + (c.v - b.v) * f3};
				var tv02;
				if(a.z <= 0) {
					var this13 = { x : 0., y : 0., z : a.z};
					tv02 = this13;
				} else {
					var this14 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv02 = this14;
				}
				var tv12;
				if(ab.z <= 0) {
					var this15 = { x : 0., y : 0., z : ab.z};
					tv12 = this15;
				} else {
					var this16 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv12 = this16;
				}
				var tv22;
				if(bc.z <= 0) {
					var this17 = { x : 0., y : 0., z : bc.z};
					tv22 = this17;
				} else {
					var this18 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv22 = this18;
				}
				this.unclippedSub(a,tv02,ab,tv12,bc,tv22,null);
				var tv03;
				if(a.z <= 0) {
					var this19 = { x : 0., y : 0., z : a.z};
					tv03 = this19;
				} else {
					var this20 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv03 = this20;
				}
				var tv13;
				if(bc.z <= 0) {
					var this21 = { x : 0., y : 0., z : bc.z};
					tv13 = this21;
				} else {
					var this22 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv13 = this22;
				}
				var tv23;
				if(c.z <= 0) {
					var this23 = { x : 0., y : 0., z : c.z};
					tv23 = this23;
				} else {
					var this24 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
					tv23 = this24;
				}
				this.unclippedSub(a,tv03,bc,tv13,c,tv23,null);
				break;
			case 3:
				var f4 = (this.MIN_Z - b.z) / (c.z - b.z);
				bc = { x : b.x + (c.x - b.x) * f4, y : b.y + (c.y - b.y) * f4, z : b.z + (c.z - b.z) * f4, u : b.u + (c.u - b.u) * f4, v : b.v + (c.v - b.v) * f4};
				var f5 = (this.MIN_Z - a.z) / (c.z - a.z);
				ca = { x : a.x + (c.x - a.x) * f5, y : a.y + (c.y - a.y) * f5, z : a.z + (c.z - a.z) * f5, u : a.u + (c.u - a.u) * f5, v : a.v + (c.v - a.v) * f5};
				var tv04;
				if(c.z <= 0) {
					var this25 = { x : 0., y : 0., z : c.z};
					tv04 = this25;
				} else {
					var this26 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
					tv04 = this26;
				}
				var tv14;
				if(ca.z <= 0) {
					var this27 = { x : 0., y : 0., z : ca.z};
					tv14 = this27;
				} else {
					var this28 = { x : ca.x / ca.z, y : ca.y / ca.z, z : ca.z};
					tv14 = this28;
				}
				var tv24;
				if(bc.z <= 0) {
					var this29 = { x : 0., y : 0., z : bc.z};
					tv24 = this29;
				} else {
					var this30 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv24 = this30;
				}
				this.unclippedSub(c,tv04,ca,tv14,bc,tv24,null);
				break;
			case 4:
				var f6 = (this.MIN_Z - c.z) / (b.z - c.z);
				bc = { x : c.x + (b.x - c.x) * f6, y : c.y + (b.y - c.y) * f6, z : c.z + (b.z - c.z) * f6, u : c.u + (b.u - c.u) * f6, v : c.v + (b.v - c.v) * f6};
				var f7 = (this.MIN_Z - c.z) / (a.z - c.z);
				ca = { x : c.x + (a.x - c.x) * f7, y : c.y + (a.y - c.y) * f7, z : c.z + (a.z - c.z) * f7, u : c.u + (a.u - c.u) * f7, v : c.v + (a.v - c.v) * f7};
				var tv05;
				if(a.z <= 0) {
					var this31 = { x : 0., y : 0., z : a.z};
					tv05 = this31;
				} else {
					var this32 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv05 = this32;
				}
				var tv15;
				if(b.z <= 0) {
					var this33 = { x : 0., y : 0., z : b.z};
					tv15 = this33;
				} else {
					var this34 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
					tv15 = this34;
				}
				var tv25;
				if(bc.z <= 0) {
					var this35 = { x : 0., y : 0., z : bc.z};
					tv25 = this35;
				} else {
					var this36 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv25 = this36;
				}
				this.unclippedSub(a,tv05,b,tv15,bc,tv25,null);
				var tv06;
				if(a.z <= 0) {
					var this37 = { x : 0., y : 0., z : a.z};
					tv06 = this37;
				} else {
					var this38 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv06 = this38;
				}
				var tv16;
				if(bc.z <= 0) {
					var this39 = { x : 0., y : 0., z : bc.z};
					tv16 = this39;
				} else {
					var this40 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv16 = this40;
				}
				var tv26;
				if(ca.z <= 0) {
					var this41 = { x : 0., y : 0., z : ca.z};
					tv26 = this41;
				} else {
					var this42 = { x : ca.x / ca.z, y : ca.y / ca.z, z : ca.z};
					tv26 = this42;
				}
				this.unclippedSub(a,tv06,bc,tv16,ca,tv26,null);
				break;
			case 5:
				var f8 = (this.MIN_Z - a.z) / (b.z - a.z);
				ab = { x : a.x + (b.x - a.x) * f8, y : a.y + (b.y - a.y) * f8, z : a.z + (b.z - a.z) * f8, u : a.u + (b.u - a.u) * f8, v : a.v + (b.v - a.v) * f8};
				var f9 = (this.MIN_Z - c.z) / (b.z - c.z);
				bc = { x : c.x + (b.x - c.x) * f9, y : c.y + (b.y - c.y) * f9, z : c.z + (b.z - c.z) * f9, u : c.u + (b.u - c.u) * f9, v : c.v + (b.v - c.v) * f9};
				var tv07;
				if(b.z <= 0) {
					var this43 = { x : 0., y : 0., z : b.z};
					tv07 = this43;
				} else {
					var this44 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
					tv07 = this44;
				}
				var tv17;
				if(bc.z <= 0) {
					var this45 = { x : 0., y : 0., z : bc.z};
					tv17 = this45;
				} else {
					var this46 = { x : bc.x / bc.z, y : bc.y / bc.z, z : bc.z};
					tv17 = this46;
				}
				var tv27;
				if(ab.z <= 0) {
					var this47 = { x : 0., y : 0., z : ab.z};
					tv27 = this47;
				} else {
					var this48 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv27 = this48;
				}
				this.unclippedSub(b,tv07,bc,tv17,ab,tv27,null);
				break;
			case 6:
				var f10 = (this.MIN_Z - a.z) / (b.z - a.z);
				ab = { x : a.x + (b.x - a.x) * f10, y : a.y + (b.y - a.y) * f10, z : a.z + (b.z - a.z) * f10, u : a.u + (b.u - a.u) * f10, v : a.v + (b.v - a.v) * f10};
				var f11 = (this.MIN_Z - a.z) / (c.z - a.z);
				ca = { x : a.x + (c.x - a.x) * f11, y : a.y + (c.y - a.y) * f11, z : a.z + (c.z - a.z) * f11, u : a.u + (c.u - a.u) * f11, v : a.v + (c.v - a.v) * f11};
				var tv08;
				if(a.z <= 0) {
					var this49 = { x : 0., y : 0., z : a.z};
					tv08 = this49;
				} else {
					var this50 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
					tv08 = this50;
				}
				var tv18;
				if(ab.z <= 0) {
					var this51 = { x : 0., y : 0., z : ab.z};
					tv18 = this51;
				} else {
					var this52 = { x : ab.x / ab.z, y : ab.y / ab.z, z : ab.z};
					tv18 = this52;
				}
				var tv28;
				if(ca.z <= 0) {
					var this53 = { x : 0., y : 0., z : ca.z};
					tv28 = this53;
				} else {
					var this54 = { x : ca.x / ca.z, y : ca.y / ca.z, z : ca.z};
					tv28 = this54;
				}
				this.unclippedSub(a,tv08,ab,tv18,ca,tv28,null);
				break;
			}
			return;
		}
		var tv09;
		if(a.z <= 0) {
			var this55 = { x : 0., y : 0., z : a.z};
			tv09 = this55;
		} else {
			var this56 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
			tv09 = this56;
		}
		var tv19;
		if(b.z <= 0) {
			var this57 = { x : 0., y : 0., z : b.z};
			tv19 = this57;
		} else {
			var this58 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
			tv19 = this58;
		}
		var tv29;
		if(c.z <= 0) {
			var this59 = { x : 0., y : 0., z : c.z};
			tv29 = this59;
		} else {
			var this60 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
			tv29 = this60;
		}
		this.unclippedSub(a,tv09,b,tv19,c,tv29,null);
	}
	,draw: function(a,b,c,depth_count) {
		var clip = (a.z < this.MIN_Z ? 1 : 0) + (b.z < this.MIN_Z ? 2 : 0) + (c.z < this.MIN_Z ? 4 : 0);
		if(clip == 0) {
			var tv0;
			if(a.z <= 0) {
				var this1 = { x : 0., y : 0., z : a.z};
				tv0 = this1;
			} else {
				var this2 = { x : a.x / a.z, y : a.y / a.z, z : a.z};
				tv0 = this2;
			}
			var tv1;
			if(b.z <= 0) {
				var this3 = { x : 0., y : 0., z : b.z};
				tv1 = this3;
			} else {
				var this4 = { x : b.x / b.z, y : b.y / b.z, z : b.z};
				tv1 = this4;
			}
			var tv2;
			if(c.z <= 0) {
				var this5 = { x : 0., y : 0., z : c.z};
				tv2 = this5;
			} else {
				var this6 = { x : c.x / c.z, y : c.y / c.z, z : c.z};
				tv2 = this6;
			}
			this.unclippedSub(a,tv0,b,tv1,c,tv2,depth_count);
			return;
		}
		if(clip == 7) {
			return;
		}
		var min_z2 = this.MIN_Z * 1.1;
		var clip2 = (a.z < min_z2 ? 1 : 0) + (b.z < min_z2 ? 2 : 0) + (c.z < min_z2 ? 4 : 0);
		if(clip2 == 7) {
			return;
		}
		var p = { x : (a.x + b.x) / 2, y : (a.y + b.y) / 2, z : (a.z + b.z) / 2, u : (a.u + b.u) / 2, v : (a.v + b.v) / 2};
		var p1 = { x : (b.x + c.x) / 2, y : (b.y + c.y) / 2, z : (b.z + c.z) / 2, u : (b.u + c.u) / 2, v : (b.v + c.v) / 2};
		var p2 = { x : (c.x + a.x) / 2, y : (c.y + a.y) / 2, z : (c.z + a.z) / 2, u : (c.u + a.u) / 2, v : (c.v + a.v) / 2};
		if(depth_count != -1) {
			--depth_count;
		}
		this.draw(a,p,p2,depth_count);
		this.draw(p,b,p1,depth_count);
		this.draw(p1,c,p2,depth_count);
		this.draw(p,p1,p2,depth_count);
		return;
	}
	,__class__: canvasImageTriangle_PerspectiveTri
};
var canvasImageTriangle__$Point3D_Point3D_$Impl_$ = {};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.__name__ = true;
canvasImageTriangle__$Point3D_Point3D_$Impl_$._new = function(x_,y_,z_) {
	var this1 = { x : x_, y : y_, z : z_};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.projectPoint = function(p) {
	if(p.z <= 0) {
		var this1 = { x : 0., y : 0., z : p.z};
		return this1;
	} else {
		var this2 = { x : p.x / p.z, y : p.y / p.z, z : p.z};
		return this2;
	}
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.projectPointTo = function(p,out) {
	out.z = p.z;
	if(p.z <= 0) {
		out.x = 0;
		out.y = 0;
	} else {
		out.x = p.x / p.z;
		out.y = p.y / p.z;
	}
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorDupe = function(a) {
	var this1 = { x : a.x, y : a.y, z : a.z};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorCopyTo = function(a,b) {
	b.x = a.x;
	b.y = a.y;
	b.z = a.z;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.crossProduct = function(a,b) {
	var this1 = { x : a.y * b.z - a.z * b.y, y : a.z * b.x - a.x * b.z, z : a.x * b.y - a.y * b.x};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.dotProduct = function(a,b) {
	return a.x * b.x + a.y * b.y + a.z * b.z;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorAdd = function(a,b) {
	var this1 = { x : a.x + b.x, y : a.y + b.y, z : a.z + b.z};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorSub = function(a,b) {
	var this1 = { x : a.x - b.x, y : a.y - b.y, z : a.z - b.z};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorScale = function(v,s) {
	var this1 = { x : v.x * s, y : v.y * s, z : v.z * s};
	return this1;
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorNormalize = function(v) {
	var l2 = v.x * v.x + v.y * v.y + v.z * v.z;
	if(l2 <= 0) {
		var this1 = { x : 1., y : 0., z : 0.};
		return this1;
	} else {
		var scale = 1 / Math.sqrt(l2);
		var this2 = { x : v.x * scale, y : v.y * scale, z : v.z * scale};
		return this2;
	}
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorLength = function(v) {
	var l2 = v.x * v.x + v.y * v.y + v.z * v.z;
	return Math.sqrt(l2);
};
canvasImageTriangle__$Point3D_Point3D_$Impl_$.vectorDistance = function(a,b) {
	var dx = a.x - b.x;
	var dy = a.y - b.y;
	var dz = a.z - b.z;
	var l2 = dx * dx + dy * dy + dz * dz;
	return Math.sqrt(l2);
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,__class__: haxe_ds_StringMap
};
var htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$ = {};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.__name__ = true;
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$._new = function(e) {
	var this1;
	if(e == null) {
		var canvas = window.document.createElement("canvas");
		var dom = canvas;
		var style = dom.style;
		style.paddingLeft = "0px";
		style.paddingTop = "0px";
		style.left = "0px";
		style.top = "0px";
		style.position = "absolute";
		this1 = canvas;
	} else {
		this1 = e;
	}
	return this1;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.create = function() {
	var canvas = window.document.createElement("canvas");
	var dom = canvas;
	var style = dom.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = "0px";
	style.top = "0px";
	style.position = "absolute";
	return canvas;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.set_x = function(this1,x_) {
	this1.style.left = (x_ == null ? "null" : "" + x_) + "px";
	return x_;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.get_x = function(this1) {
	var style = this1.style;
	var len = style.left.length;
	return Std.parseInt(style.left.substr(0,len - 2));
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.set_y = function(this1,y_) {
	this1.style.left = (y_ == null ? "null" : "" + y_) + "px";
	return y_;
};
htmlHelper_canvas__$CanvasWrapper_CanvasWrapper_$Impl_$.get_y = function(this1) {
	var style = this1.style;
	var len = style.top.length;
	return Std.parseInt(style.top.substr(0,len - 2));
};
var htmlHelper_tools_AnimateTimer = function() { };
htmlHelper_tools_AnimateTimer.__name__ = true;
htmlHelper_tools_AnimateTimer.create = function() {
	if(htmlHelper_tools_AnimateTimer.s != null) {
		return;
	}
	htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
	htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
	window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
	htmlHelper_tools_AnimateTimer.loop(60.0);
};
htmlHelper_tools_AnimateTimer.loop = function(tim) {
	window.requestAnimationFrame(htmlHelper_tools_AnimateTimer.loop);
	if(htmlHelper_tools_AnimateTimer.onFrame != null) {
		htmlHelper_tools_AnimateTimer.onFrame(htmlHelper_tools_AnimateTimer.counter);
	}
	htmlHelper_tools_AnimateTimer.counter++;
	return true;
};
htmlHelper_tools_AnimateTimer.kill = function() {
	if(htmlHelper_tools_AnimateTimer.s == null) {
		return;
	}
	window.document.getElementsByTagName("head")[0].removeChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.onFrame = null;
	htmlHelper_tools_AnimateTimer.s = null;
};
htmlHelper_tools_AnimateTimer.tween = function(t,b,e,d,f) {
	if(t > d) {
		return null;
	}
	return f(t,b,e - b,d);
};
var htmlHelper_tools_ImageLoader = function(imageNames,loaded_) {
	this.images = new haxe_ds_StringMap();
	this.loaded = loaded_;
	this.count = imageNames.length;
	var _g = 0;
	while(_g < imageNames.length) {
		var name = imageNames[_g];
		++_g;
		this.load(name);
	}
};
htmlHelper_tools_ImageLoader.__name__ = true;
htmlHelper_tools_ImageLoader.prototype = {
	load: function(img) {
		var image = window.document.createElement("img");
		var imgStyle = image.style;
		imgStyle.left = "0px";
		imgStyle.top = "0px";
		imgStyle.paddingLeft = "0px";
		imgStyle.paddingTop = "0px";
		var f = $bind(this,this.store);
		var a1 = image;
		var a2 = img.split("/").pop();
		image.onload = function(e) {
			f(a1,a2,e);
		};
		imgStyle.position = "absolute";
		image.src = img;
	}
	,store: function(image,name,e) {
		this.count--;
		console.log("store " + name + " " + this.count);
		var _this = this.images;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,image);
		} else {
			_this.h[name] = image;
		}
		if(this.count == 0) {
			this.loaded();
		}
	}
	,__class__: htmlHelper_tools_ImageLoader
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
htmlHelper_tools_AnimateTimer.counter = 0;
js_Boot.__toStr = ({ }).toString;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=test.js.map